<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>如何下载魔镜壁纸中的图片</title>
      <link href="year/04/22/t/"/>
      <url>year/04/22/t/</url>
      
        <content type="html"><![CDATA[<h2 id="如何下载魔镜壁纸中的图片"><a href="#如何下载魔镜壁纸中的图片" class="headerlink" title="如何下载魔镜壁纸中的图片"></a>如何下载魔镜壁纸中的图片</h2><p>魔镜壁纸是腾讯管家出品的，一般在桌面助手中或者单独下载。这个软件可以定时切换桌面壁纸，里面有不好好的壁纸，无奈喜欢的壁纸只能收藏没办法下载。但是！凡是能显示到桌面的图片都可以下载，下面我教大家怎么通过腾讯的桌面助手自己找到壁纸下载的地址.</p><p>1.首先是电脑上已经安装好魔镜壁纸或者桌面整理了。</p><p>2.打开壁纸中心，一般桌面上有可以点击切换的六棱形小插件也可以进入</p><p><img src="1.jpg"></p><p>3.选择你喜欢的壁纸点击一下桌面背景就切换了，如果想下载当前的桌面就不要切换了哟</p><p>4.打开桌面整理自带的搜索工具（如果没有搜索工具的可以下载everything软件，这里就不赘述了）</p><p><img src="2.png"></p><p>5.出现搜索栏后点击一下会弹出大个儿的搜索栏可以输入要搜索的东西（第一次点击会慢一些，因为要对你电脑里的文件建立一个索引，方便后期搜索更快，没看懂的可以忽略这句话😄）</p><p>6.我们要搜索什么呢？重点来了！在桌面右键，点击个性化(R) 进入个性化设置界面，找到主题，然后会发现这里居然有桌面壁纸的文件名称！！！</p><p><img src="3.jpg"></p><p><img src="4.png"></p><p>7.然后你就懂了，然后在搜索栏输入文件名中的关键字就可以里看到已经搜索出来了！！！ 在搜索出来的文件名中双击一下或者右键就可以进入到文件所在目录！！！</p><p><img src="5.png"></p><p><img src="6.png"></p><p>8.最后我们就打开我们的图片了，我们可以右键选择保存到桌面，然后我们就可以使用这张图片了，你学会了吗？关注我带你了解更多知识。</p><h3 id="其他的壁纸存放位置："><a href="#其他的壁纸存放位置：" class="headerlink" title="其他的壁纸存放位置："></a>其他的壁纸存放位置：</h3><h4 id="win-R-输入下面命令即可找到目录"><a href="#win-R-输入下面命令即可找到目录" class="headerlink" title="win+R   输入下面命令即可找到目录"></a>win+R   输入下面命令即可找到目录</h4><p>%localappdata%\Packages\Microsoft.Windows.ContentDeliveryManager_cw5n1h2txyewy\LocalState\Assets</p><h4 id="系统默认的桌面墙纸放在C-WINDOWS-Web-Wallpaper文件夹下。"><a href="#系统默认的桌面墙纸放在C-WINDOWS-Web-Wallpaper文件夹下。" class="headerlink" title="系统默认的桌面墙纸放在C:\WINDOWS\Web\Wallpaper文件夹下。"></a>系统默认的桌面墙纸放在C:\WINDOWS\Web\Wallpaper文件夹下。</h4><h4 id="网上单击设为桌面的图片存放在C-Documents-and-Settings-lgj-Local-Settings-Temporary-Internet-Files文件夹下"><a href="#网上单击设为桌面的图片存放在C-Documents-and-Settings-lgj-Local-Settings-Temporary-Internet-Files文件夹下" class="headerlink" title="网上单击设为桌面的图片存放在C:\Documents and Settings\lgj\Local Settings\Temporary Internet Files文件夹下"></a>网上单击设为桌面的图片存放在C:\Documents and Settings\lgj\Local Settings\Temporary Internet Files文件夹下</h4>]]></content>
      
      
      <categories>
          
          <category> 如何下载魔镜壁纸中的图片 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客添加HTML页面</title>
      <link href="year/04/20/s/"/>
      <url>year/04/20/s/</url>
      
        <content type="html"><![CDATA[<h4 id="第一步，在博客根目录的source文件夹下，新建文件夹用于存放HTML文件"><a href="#第一步，在博客根目录的source文件夹下，新建文件夹用于存放HTML文件" class="headerlink" title="第一步，在博客根目录的source文件夹下，新建文件夹用于存放HTML文件"></a>第一步，在博客根目录的<code>source</code>文件夹下，新建文件夹用于存放HTML文件</h4><p><img src="1.png"></p><p>我分别建了love 和 xiangce 两个文件夹，可以将HTML文件css、js等文件放入建好的文件夹中，html文件改为index.html</p><h3 id="第二步，在博客根目录的配置文件-config-yml文件里，跳过渲染"><a href="#第二步，在博客根目录的配置文件-config-yml文件里，跳过渲染" class="headerlink" title="第二步，在博客根目录的配置文件_config.yml文件里，跳过渲染"></a>第二步，在博客根目录的配置文件<code>_config.yml</code>文件里，跳过渲染</h3><p><img src="2.png"></p><p>注意格式：这里如果你是只创建了一个文件夹，要跳过它目录下所有文件的渲染，就写：</p><pre class="line-numbers language-none"><code class="language-none"># 跳过文件夹下所有文件skip_render:   - &quot;文件夹名&#x2F;*&quot;  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>如果文件夹下还有子文件夹，那就这样写：</p><pre class="line-numbers language-none"><code class="language-none"># 跳过子文件夹skip_render:   - &quot;文件夹名&#x2F;子文件夹名&#x2F;*&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>或者更简单直接的方式</p><pre class="line-numbers language-none"><code class="language-none"># 跳过文件夹下所有子文件夹和文件skip_render:   - &quot;文件夹名&#x2F;**&quot;   <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="3.png"></p><p>最后找到主题的配置文件添加路经：</p><p><img src="4.png"></p><p>名字依据自己所加内容更改，然后我们 hexo clean 、  hexo  g 、hexo s 本地查看效果：</p><p><img src="5.png"></p><p>此时我们点击它就会跳转到我们的html页面：</p><p><img src="6.png"></p><p>赶快来试试吧！</p>]]></content>
      
      
      <categories>
          
          <category> hexo加入html页面 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo加入html页面 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web前端概述</title>
      <link href="year/04/20/r/"/>
      <url>year/04/20/r/</url>
      
        <content type="html"><![CDATA[<hr><h3 id="Web前端工程师技术点概述"><a href="#Web前端工程师技术点概述" class="headerlink" title="Web前端工程师技术点概述"></a>Web前端工程师技术点概述</h3><p>前端到底是什么？</p><p>前端和HTML5有什么关系？</p><p>前端可以做什么？以后的发展方向是什么？</p><p>Web前端工程师只是一个概念性的名称，它一般叫前端工程师，有时候也叫h5工程师（以前的说明）。现在的Web工程师更多的叫前端（大前端）</p><p>以前的前端工程师可能只是做网页，但是现在的前端工程师基本涉及到全栈化开发</p><pre class="line-numbers language-mermaid" data-language="mermaid"><code class="language-mermaid">graph TDA[前端工程师]--&gt;B[PC页面]A--&gt;C[手机端页面]A--&gt;D[网页游戏]A--&gt;E[各种小程序]A--&gt;F[公众号]A--&gt;G[安卓]A--&gt;H[IOS]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="前端的技术栈"><a href="#前端的技术栈" class="headerlink" title="前端的技术栈"></a>前端的技术栈</h3><ol><li><p>精通HTML，CSS，了解HTML5的新特性，熟练使用div+css进行布局，精通各种布局方式</p><p>流式布局、弹性布局，响应式布局，自适应布局</p><p>熟练的进行页面重构，熟悉各种浏览器的特性与兼容性，熟练的通过原型图转换为网页效果图</p></li><li><p>精通<code>JavaScript</code>原理，熟练的使用ES5，ES6进行代码开发</p></li><li><p>熟悉面向对象开发，了解高类聚与低耦合，熟悉对象特性与原型链</p></li><li><p>熟练操作网页的DOM与BOM进行开发【今天会用到】</p></li><li><p>Ajax数据通讯，fetch数据通讯以及HTTP协议的处理</p></li><li><p>知道了下结常见的基础操作框架<code>jQuery</code>,<code>bootstrap</code></p></li><li><p><code>nodejs</code>，<code>express</code>,路由，<code>service</code>以及<code>mysql</code>或<code>mongodb</code>的数据库后台开发，及<code>webApi</code>的开发方式</p></li><li><p><code>webpack</code></p></li><li><p><code>sass/scss/less/stylues</code></p></li><li><p><code>vue</code>及<code>vue</code>全家桶</p></li><li><p><code>axios</code>数据请求以及状态码，请求拦截，拦截器等</p></li><li><p>微信小程序开发，<code>uniApp</code>混合式APP开发（开发安卓与IOS的）</p></li><li><p><code>react</code>及全家桶开发</p></li></ol><p>…….</p><p>后面还有好多没有列举</p><hr><h3 id="前端知识点串联"><a href="#前端知识点串联" class="headerlink" title="前端知识点串联"></a>前端知识点串联</h3><p>今天我们将会把HTML+CSS+JavaScript的知识做一个串联，以基础授课为主，案例为铺来完成我们的学习</p><p>【我们要慢慢的走向正式班的授课模式】</p><h4 id="CSS选择器"><a href="#CSS选择器" class="headerlink" title="CSS选择器"></a>CSS选择器</h4><p>CSS常称九大选择【共11个类型】，不同的选择器决定我们的使用场景会不一样</p><p>CSS常进行样式的操作，我们如果要设置网页中某一个标签的样式，则可以通过它来进行，CSS的代码一般写在3个地方</p><p><strong>第一个地方</strong></p><p>直接将CSS代码写在标签的<code>style</code>属性里面去</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>一号标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">border</span><span class="token punctuation">:</span> 1px solid red<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>标哥哥<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token property">border</span><span class="token punctuation">:</span> 2px solid blue<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>三号标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>在上面的HTML代码里面，我们看到可以给它添加一个<code>style</code>，然后在里面输入我们的样式内容，任何HTML都可以</p><p><strong>第二种方式</strong></p><p>上面的写法虽然说非常方便，但是有个问题很严重，如下</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token property">border</span><span class="token punctuation">:</span> 1px solid blue<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>标哥<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token property">border</span><span class="token punctuation">:</span> 1px solid blue<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>真帅<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token property">border</span><span class="token punctuation">:</span> 1px solid blue<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>哈哈哈<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>上面的h3标签样式都是一样的，我们要简化它的操作，操作如下</p><ol><li>将<code>style</code>属性转换成<code>&lt;style&gt;</code>标签，放在<code>&lt;head&gt;</code>里面</li><li>将原来的CSS代码写在<code>&lt;style&gt;</code>标签里面，然后使用<code>&#123;&#125;</code>包括</li><li>因为这段CSS代码是为<code>&lt;h2&gt;</code>标签提供样式的，所以我们可以把它的前面添加一个<code>h3</code>，最终代码如下</li></ol><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token selector">h3</span><span class="token punctuation">&#123;</span>        <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>        <span class="token property">border</span><span class="token punctuation">:</span> 1px solid blue<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token punctuation">></span></span>标哥<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token punctuation">></span></span>真帅<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token punctuation">></span></span>哈哈哈<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这么做的目的就极大的提供了我们的效率，后期的大多数开发里面，都使用的是这一种方式</p><p><strong>第三个地方</strong></p><p>我们可以新建一个CSS的文件，然后再去书写的CSS代码</p><hr><p>针对第二种的方式，我们要知道它的语法</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">h3</span><span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid blue<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>上面的代码的语法其实是下面这种方式</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">选择器</span><span class="token punctuation">&#123;</span>    <span class="token property">CSS属性</span><span class="token punctuation">:</span>CSS属性值<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>选择器就是用于选择某些元素然后设置某些样式</p><p>在选择器里面，我们有11种选择器，现在我们先列表常用的选择器</p><ol><li><p>标签选择器</p><p>以标签的名子为选择器的名子来进行选择，如下所示</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token selector">h1</span><span class="token punctuation">&#123;</span>        <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">h2</span><span class="token punctuation">&#123;</span>        <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">h3</span><span class="token punctuation">&#123;</span>        <span class="token property">color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">p</span><span class="token punctuation">&#123;</span>        <span class="token property">color</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>第一个<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>第二个<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>第三个<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>第四个<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>第五个<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>标签选择器是一种最直观的选择器</p></li><li><p>ID选择器</p><p>这是一种比较常用的选择器，一般用于精确选择某一个元素</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token comment">/* 只希望把标哥哥设置为红色 */</span>    <span class="token comment">/* #a代表的就是id="a" */</span>    <span class="token selector">#a</span><span class="token punctuation">&#123;</span>        <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>a<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>标哥哥<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>小姐姐<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="01.png"></p></li><li><p>子代选择器</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token selector">#box1</span><span class="token punctuation">&#123;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>        <span class="token property">border</span><span class="token punctuation">:</span> 2px solid red<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/* 将盒子内部的h2设置为蓝色 */</span>    <span class="token selector">#box1>h2</span><span class="token punctuation">&#123;</span>        <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>我在盒子的里面<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>我在盒子的外边<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>伪类与伪元素选择器</p><p>伪类与伪元素选择器非常重要，学好这个代码会少很多，我们之前已经学过了几个常用的伪类选择器</p><ul><li><code>:hover</code>代表鼠标放上去的效果</li><li><code>:active</code>代表鼠标按下去以后的效果</li><li><code>:nth-child</code>选中第几个子元素经</li></ul></li></ol><blockquote><p>剩下的选择器将在下次基础课程当中完整讲解，本次课程的基础是以案例为目标来讲的</p></blockquote><h4 id="CSS的定位与变换"><a href="#CSS的定位与变换" class="headerlink" title="CSS的定位与变换"></a>CSS的定位与变换</h4><p>为了完成我们的案例效果，我们需要使用到CSS当中一些常用样式属性</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">选择器</span><span class="token punctuation">&#123;</span>    <span class="token property">CSS属性</span><span class="token punctuation">:</span>CSS属性值<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>上面的基础里面，我们已经可以通过选择器完成HTML元素的选择，再我应该要通过样式去设置它了</p><p>所以当我们想实现环形动画的时候，我们就要掌握其中的2个基本点</p><h5 id="子绝父相"><a href="#子绝父相" class="headerlink" title="子绝父相"></a>子绝父相</h5><p>子绝父相是一种布局概念，它可以让元素以另一个元素标准进行布局【定位的基础】</p><p>子绝父相就是子级元素使用绝对定位 而父级元素使用相对定位</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token selector">#box</span><span class="token punctuation">&#123;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>        <span class="token property">border</span><span class="token punctuation">:</span> 2px solid black<span class="token punctuation">;</span>        <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#a</span><span class="token punctuation">&#123;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> deeppink<span class="token punctuation">;</span>        <span class="token comment">/* 绝对定位 */</span>        <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#b</span><span class="token punctuation">&#123;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> lightseagreen<span class="token punctuation">;</span>        <span class="token comment">/* 绝对定位 */</span>        <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>a<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>第一个盒子<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>b<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>第二个盒子<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="变换transform"><a href="#变换transform" class="headerlink" title="变换transform"></a>变换transform</h5><p>变换是CSS3当中最常的一种特效，目前主流的变换方式有以下几种</p><ol><li>位移<code>translate</code></li><li>缩放<code>scale</code></li><li>旋转<code>rotate</code></li></ol><hr><p><strong>位移translate</strong></p><p>位移指的是元素在X轴，Y轴或Z轴上面发生位子的变化</p><ol><li><code>translateX</code>沿着X轴发生位移</li><li><code>translateY</code>沿着Y轴发生位移</li><li><code>translateZ</code>沿着Z轴发生位移</li></ol><blockquote><p>关于位置移动有个口诀：左负右正，上负下正</p></blockquote><p><strong>缩放scale</strong></p><p>缩放指元素的大小像放大镜一样发生了变化</p><ol><li><code>scaleX</code>在X轴上缩放</li><li><code>scaleY</code>在Y轴上缩放</li><li><code>scale</code>在X轴与Y轴同时缩放</li><li><code>scale3d</code>在X轴与Y轴和Z轴上面同时缩放</li></ol><blockquote><p>缩放是以倍数为单位，默认是<code>1:1</code></p></blockquote><p><strong>旋转rotate</strong></p><p>旋转是元素沿着某一个角度去发生变换</p><ol><li><code>rotateX</code>沿着X轴旋转</li><li><code>rotateY</code>沿着Y轴旋转</li><li><code>rotateZ</code>沿着Z轴去旋转</li></ol><blockquote><p>注意事项：</p><ol><li>旋转是以角度为单位<code>deg</code></li><li>Z轴上面顺时针是正数，逆时针是负数</li><li>X轴与Y轴执行“握手原则”去判断，握手进去的方向是正，反之为负</li></ol></blockquote><p><strong>开启3D的模式</strong></p><p>目前开启3D模式主要有2种</p><ol><li><p>添加视角</p><p>一般是在变换元素的外层添加<code>perspective</code>即可实现</p></li><li><p>形成Z轴也可以实现3D</p><p>默认情况下，网页上面的空间都是平面空间，不可能有3D，也就不可以有Z轴，但是可以添加<code>transform-style:preserve-3d;</code>来转换成3D空间</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token selector">#box</span><span class="token punctuation">&#123;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>        <span class="token property">border</span><span class="token punctuation">:</span> 2px solid black<span class="token punctuation">;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateX</span><span class="token punctuation">(</span>15deg<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>15deg<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">/* 将这个盒子由平面空间转换为3D空间 */</span>        <span class="token property">transform-style</span><span class="token punctuation">:</span> preserve-3d<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#a</span> <span class="token punctuation">&#123;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> deeppink<span class="token punctuation">;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>50px<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>a<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>旋转<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h4 id="CSS过渡"><a href="#CSS过渡" class="headerlink" title="CSS过渡"></a>CSS过渡</h4><p>CSS中的过渡指的元素由一个值变成另一个值的时候，实现一个缓慢的过渡效果</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>a<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    这是一个盒子<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token selector">.a</span><span class="token punctuation">&#123;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.a:hover</span><span class="token punctuation">&#123;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当鼠标放在<code>.a</code>的元素上面的时候，宽度由100px变成200px是一瞬间完成的，我们希望它有一个过渡效果，怎么办呢？</p><p>我们可以把上面的CSS代码换成这个代码</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.a</span><span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> width 2s<span class="token punctuation">,</span>height 2s 2s<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.a:hover</span><span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>过渡主要使用的是<code>transition</code>来完成的</p><h4 id="CSS的动画"><a href="#CSS的动画" class="headerlink" title="CSS的动画"></a>CSS的动画</h4><ol><li>动画的定义</li><li>动画的使用</li></ol><h4 id="JavaScript的语法基础"><a href="#JavaScript的语法基础" class="headerlink" title="JavaScript的语法基础"></a>JavaScript的语法基础</h4><p>JavaScript是我们网页开发过程当中最重要的一个环节，它与我们的<code>Java</code>语言有很多相似之处，它也是一门编程语言，是Web前端开发过程当中必不可少的一个环节</p><p>JavaScript的代码一般写在网页面<code>&lt;script&gt;</code>里面</p><p>来源：标哥</p>]]></content>
      
      
      <categories>
          
          <category> 前端概述 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客搭建教程</title>
      <link href="year/04/17/p/"/>
      <url>year/04/17/p/</url>
      
        <content type="html"><![CDATA[<h2 id="一、hexo博客搭建教程："><a href="#一、hexo博客搭建教程：" class="headerlink" title="一、hexo博客搭建教程："></a>一、hexo博客搭建教程：</h2><p>1、作者主题仓库介绍 <a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md">https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md</a> </p><p>以及 Yafine大佬 Hexo+github搭建博客(超级详细版，精细入微)<a href="https://yafine-blog.cn/posts/4ab2.html">https://yafine-blog.cn/posts/4ab2.html</a><br>鉴于有的小伙伴从主题作者的GitHub仓库下载速度慢，个人把作者的仓库同步到码云上了，不定期进行同步更新，地址：<a href="https://gitee.com/yafine66/hexo-theme-matery">https://gitee.com/yafine66/hexo-theme-matery</a></p><p>方便大家下载。<br>2、前者能解决大部分问题，还有问题请先百度/谷歌，也可以去主题github issues上搜搜看，尝试自己去解决问题，这对自己有好处。<br>3、上述已经解决90%的问题了，实在找不到办法，请把你的问题用最明了最清晰的语言表达（贴上代码及报错）发到群里，（QQ群：670694035）群友看到后，会试着帮你解决问题的。大佬可能会缺席，但不会迟到。</p><h2 id="二、将hexo博客部署到腾讯云或者阿里云服务器上："><a href="#二、将hexo博客部署到腾讯云或者阿里云服务器上：" class="headerlink" title="二、将hexo博客部署到腾讯云或者阿里云服务器上："></a>二、将hexo博客部署到腾讯云或者阿里云服务器上：</h2><p>参考：<a href="https://zhuanlan.zhihu.com/p/120322118">https://zhuanlan.zhihu.com/p/120322118</a></p><p>其中他的最后一步会出现错误，用他的方法解决不了，实际上我们应该在服务器里增加命令</p><p>需要到服务器端将git-receive-pack和git-upload-pack链接到/usr/bin/中</p><p>执行以下两条命令（切记！！！一定得去服务器端增加这两条命令）</p><p>ln -s /usr/local/git/bin/git-receive-pack /usr/bin/git-receive-pack</p><p>ln -s /usr/local/git/bin/git-upload-pack /usr/bin/git-upload-pack </p><p>然后重新部署就可以了。</p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css动画案例-大风车、芝麻开门、桃心</title>
      <link href="year/04/15/q/"/>
      <url>year/04/15/q/</url>
      
        <content type="html"><![CDATA[<h3 id="项目准备"><a href="#项目准备" class="headerlink" title="项目准备"></a>项目准备</h3><h4 id="素材准备"><a href="#素材准备" class="headerlink" title="素材准备"></a>素材准备</h4><p>本次项目无需素材准备</p><h4 id="技术准备"><a href="#技术准备" class="headerlink" title="技术准备"></a>技术准备</h4><ol><li>使用到了第一次到第三次周末班的技术点，变换transform,使用到了动画及阶段型动画</li><li>使用到了“子绝父相”</li><li>动画的状态的改变以及伪类<code>:hover</code>的应用</li></ol><h4 id="开发工具的准备"><a href="#开发工具的准备" class="headerlink" title="开发工具的准备"></a>开发工具的准备</h4><p>本次项目，我们使用的是<code>HbuilderX</code>来完成的</p><h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><p>前端项目的创建非常简单</p><ol><li>直接在桌面上创建一个文件夹，命名为”bgg_dfc”</li><li>将刚刚创建好的文件夹插入到<code>HbuilderX</code>的开发工具里面</li><li>在刚刚创建的项目里面，点击鼠标右键 ，选择新建一个<code>html</code>文件，我们命名为<code>01.html</code></li></ol><p>最终结果如下</p><p><img src="01.png"></p><p> 上面的代码，我们说明一下</p><p><code>&lt;head&gt;&lt;/head&gt;</code>代表的是浏览器的头部信息</p><p><code>&lt;title&gt;&lt;/title&gt;</code>代表网页的标题</p><p><code>&lt;body&gt;&lt;/body&gt;</code>代表浏览器的网页的主体部分</p><h3 id="大风车案例"><a href="#大风车案例" class="headerlink" title="大风车案例"></a>大风车案例</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>标哥哥的大风车<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 样式 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><span class="token selector">.big-box</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 450px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 450px<span class="token punctuation">;</span><span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span><span class="token comment">/* 设置圆角边框 ，变成一个圆 */</span><span class="token property">border-radius</span><span class="token punctuation">:</span> 225px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* .box 相当于class="box" */</span><span class="token selector">.box</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span><span class="token property">right</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span><span class="token property">bottom</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span><span class="token property">border-radius</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span><span class="token property">animation-name</span><span class="token punctuation">:</span> box_ani<span class="token punctuation">;</span> <span class="token comment">/*动画的名称*/</span><span class="token property">animation-duration</span><span class="token punctuation">:</span> 5s<span class="token punctuation">;</span>  <span class="token comment">/*动画播放一次的时间*/</span><span class="token property">animation-iteration-count</span><span class="token punctuation">:</span> infinite<span class="token punctuation">;</span> <span class="token comment">/*动画执行无穷次*/</span><span class="token property">animation-timing-function</span><span class="token punctuation">:</span> linear<span class="token punctuation">;</span>  <span class="token comment">/*动画匀速执行*/</span><span class="token punctuation">&#125;</span><span class="token comment">/* 分组 */</span><span class="token selector">.one,.two,.three,.four</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span><span class="token property">left</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span><span class="token property">top</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span><span class="token property">transform-origin</span><span class="token punctuation">:</span> left top<span class="token punctuation">;</span><span class="token property">border-bottom-left-radius</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token property">border-bottom-right-radius</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.one</span><span class="token punctuation">&#123;</span><span class="token property">background-color</span><span class="token punctuation">:</span> deeppink<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.two</span><span class="token punctuation">&#123;</span><span class="token property">background-color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateZ</span><span class="token punctuation">(</span>90deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.three</span><span class="token punctuation">&#123;</span><span class="token property">background-color</span><span class="token punctuation">:</span> aqua<span class="token punctuation">;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateZ</span><span class="token punctuation">(</span>180deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.four</span><span class="token punctuation">&#123;</span><span class="token property">background-color</span><span class="token punctuation">:</span> lightseagreen<span class="token punctuation">;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateZ</span><span class="token punctuation">(</span>270deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 定义动画使用 */</span><span class="token atrule"><span class="token rule">@keyframes</span> box_ani</span><span class="token punctuation">&#123;</span><span class="token selector">0%</span><span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateZ</span><span class="token punctuation">(</span>0deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">100%</span><span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateZ</span><span class="token punctuation">(</span>360deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>big-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>one<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>two<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>three<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>four<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上面是最基本的大风车案例，我们现在希望做一次扩展</p><ol><li>风车默认是没有转的，我的鼠标如果放上去以后，才开始转</li><li>鼠标如果在购车上面按住鼠标不松开的时候，风车转的速度要快一些</li></ol><p>要完成上面的点有2人个问题需要克服</p><ol><li>鼠标放在某一个元素上面的效果我们应该怎么办</li><li>鼠标按下去的效果我们应该怎么办</li></ol><p>要实现上面的东西，我们就要接解新的知识点，这个知识是属于CSS的<strong>伪类</strong>环节</p><p><img src="02.png"></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 鼠标放在box上面以后，它要开始动画 */</span><span class="token selector">.box:hover</span><span class="token punctuation">&#123;</span>    <span class="token property">animation-play-state</span><span class="token punctuation">:</span> running<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 鼠标按下去以后，播放速度要加快 */</span><span class="token selector">.box:active</span><span class="token punctuation">&#123;</span>    <span class="token property">animation-duration</span><span class="token punctuation">:</span> 1s<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="芝麻开门案例"><a href="#芝麻开门案例" class="headerlink" title="芝麻开门案例"></a>芝麻开门案例</h3><p><img src="03.png"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>开门大吉<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><span class="token selector">.door</span> <span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 700px<span class="token punctuation">;</span><span class="token property">border</span><span class="token punctuation">:</span> 5px solid black<span class="token punctuation">;</span><span class="token property">font-size</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span><span class="token property">perspective</span><span class="token punctuation">:</span> 700px<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span><span class="token comment">/* 鼠标光标变成手的形状 */</span><span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.left-door</span> <span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 250px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 700px<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> deeppink<span class="token punctuation">;</span><span class="token comment">/* 转为行内块级元素 */</span><span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span><span class="token property">transform-origin</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span><span class="token comment">/* 添加一个过渡 */</span><span class="token property">transition</span><span class="token punctuation">:</span> all 1s linear<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 右边的门设置为蓝色 */</span><span class="token selector">.right-door</span> <span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 250px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 700px<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> lightseagreen<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span><span class="token property">transform-origin</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span><span class="token property">transition</span><span class="token punctuation">:</span> all 1s linear<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* #aaa代表的就是id="aaa"+代表兄弟元素,>代表子元素 */</span><span class="token selector">#aaa:checked+.door>.left-door</span><span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>30deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#aaa:checked+.door>.right-door</span><span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>-30deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#aaa</span><span class="token punctuation">&#123;</span><span class="token comment">/* 隐藏某一个元素 */</span><span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>aaa<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>door<span class="token punctuation">"</span></span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>aaa<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>left-door<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>right-door<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><h4 id="css样式总结"><a href="#css样式总结" class="headerlink" title="css样式总结"></a>css样式总结</h4><ol><li><code>class</code>代表在CSS里面使用<code>.</code>来表示 ，如<code>.box</code>就相当于<code>class=&quot;box&quot;</code></li><li><code>width</code>与<code>height</code>分别用于设置宽度与高度</li><li><code>border</code>是用于设置边框的，<code>border:2px solid black</code>代表的是2个像素的实线的黑色边框</li><li>变换使用<code>transorm</code>,<code>rotate</code>是旋转</li><li><code>transform-origin</code>设置变换的起点位置</li><li><code>border-radius</code>用于设置圆角边框 </li><li><code>border-bottom-left-radius</code>左下角的圆角边框</li><li><code>:hover</code>代表鼠标放上去以后的特殊状态效果</li><li><code>:active</code>代表鼠标按下以后的特殊状态效果</li><li><code>animation-play-state</code>代表动画播放的状态，<code>running</code>代表正常播放，<code>paused</code>代表动画暂停</li><li><code>transition</code>过渡，指元素的样式 由一个状态变成另一个状态的过渡效果【与动画很相似】</li><li><code>display:none</code>隐藏元素</li><li><code>:checked</code>复选框选中以后的状态</li><li><code>cursor:pointer</code>鼠标光标变成手的形状</li></ol><h3 id="桃心案例"><a href="#桃心案例" class="headerlink" title="桃心案例"></a>桃心案例</h3><p><img src="04.png"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>桃心<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><span class="token selector">.box</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 480px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span><span class="token property">border</span><span class="token punctuation">:</span> 2px solid black<span class="token punctuation">;</span><span class="token property">font-size</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 左边的心宽度240，高度400，背景blue */</span><span class="token comment">/* 右边的心宽度240，高度400，背景red */</span><span class="token comment">/* 左右两个盒子排在一行 */</span><span class="token selector">.left</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 240px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span><span class="token property">border-top-left-radius</span><span class="token punctuation">:</span> 120px<span class="token punctuation">;</span><span class="token property">border-top-right-radius</span><span class="token punctuation">:</span> 120px<span class="token punctuation">;</span><span class="token comment">/* 设置变化的起点 */</span><span class="token property">transform-origin</span><span class="token punctuation">:</span> right bottom<span class="token punctuation">;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateZ</span><span class="token punctuation">(</span>45deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.right</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 240px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span><span class="token property">border-top-left-radius</span><span class="token punctuation">:</span> 120px<span class="token punctuation">;</span><span class="token property">border-top-right-radius</span><span class="token punctuation">:</span> 120px<span class="token punctuation">;</span><span class="token comment">/* 设置变化的起点 */</span><span class="token property">transform-origin</span><span class="token punctuation">:</span> left bottom<span class="token punctuation">;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateZ</span><span class="token punctuation">(</span>-45deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><ol><li><p>子绝父相：当一个元素如果要以另一个元素为标准进行位置设置的时候，最好的办法就是“子绝父相”</p><p>子绝父相就是子级元素使用绝对定位（<code>position:absolute</code>），父级元素使用相对定位（<code>position:relative</code>）</p></li><li><p>分组选择器：当几个元素的样式相同的时候，我们可以使用分组选择器来简化我们的代码 </p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.one,.two,.three,.four</span><span class="token punctuation">&#123;</span>    <span class="token comment">/*代码*/</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>动画的定义我们仍然使用<code>@keyframes</code></p></li><li><p>元素如果想排在一行，可以把元素转换为行内块级元素<code>display:inline-block</code></p></li><li><p>如果转换元素以后中间的缝隙，则在父级元素上面添加<code>font-size:0px</code></p></li><li><p>选择器当中，<code>.</code>代表的是class，<code>#</code>代表的是id</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">#aaa</span><span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span><span class="token selector">.box</span><span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 教程来源：软帝标哥</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> css动画 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css动画案例-西游记</title>
      <link href="year/04/04/o/"/>
      <url>year/04/04/o/</url>
      
        <content type="html"><![CDATA[<h3 id="项目准备"><a href="#项目准备" class="headerlink" title="项目准备"></a>项目准备</h3><ol><li><p>素材准备，本次案例我们将使用西游记的素材，并且会介绍一个新的图片格式（精灵图）</p><p>什么是精灵图：就是一个张图片上面有多个图像区域</p></li><li><p>知识点准备</p><p>本次案例我们采用HTML+CSS的方式去完成，基本知识点要准备如下</p><ul><li>HTML语言基础</li><li>CSS语言基础，class选择器，基础CSS样式</li><li>定义动画<code>@keyframes</code>，使用动画<code>animation</code></li></ul></li></ol><p>本次课程主要是对动画做了扩展，讲解了两种类型的动画 </p><pre class="line-numbers language-mermaid" data-language="mermaid"><code class="language-mermaid">graph TDA[动画类型]--&gt;B[流畅动画]A--&gt;C[帧动画]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>背景实现的是流畅动画，而人物的行走是帧动画</p><h3 id="项目创建"><a href="#项目创建" class="headerlink" title="项目创建"></a>项目创建</h3><ol><li>在桌面上面创建一个<code>bgg_xyj</code>的文件夹，然后打开我们的开发工具<code>HBuilderX</code>，最后将刚刚创建好的文件夹拖入进去</li><li>将之前准备好的素材<code>img</code>文件夹拖入到刚刚创建的项目文件夹当中</li><li>在当前的项目下面新建一个<code>index.html</code>的文件</li></ol><p><img src="image-20210321102528396.png"></p><h3 id="开发过程"><a href="#开发过程" class="headerlink" title="开发过程"></a>开发过程</h3><p>在整个项目的开发过程当中，我们先从基础开始学起，我们本来是有师徒4个人，我们只用先完成一个人的就可以了的，后面的我们可以参照完成</p><p><img src="image-20210321102907913.png" alt="image-20210321102907913"></p><p>我们得到的上面的这种素材图，我们要将这样的素材转换成一个可以行走的动画效果，所以我们可以把这样的素材图片看成是一个“胶卷”，这个胶卷在不停的放电影 </p><p>一个胶卷不可能在放映的时候同时展示这么多图片，只能一张一张的展示，所以我们要用设置一个人物大小就行了</p><p><img src="image-20210321103058295.png" alt="image-20210321103058295"></p><p>我们通过属性可以看到整个图片的宽度是<code>1600px</code>，高度则是<code>180px</code>，而这个图片里面8个人物，所以每个人物的宽度是<code>1600px/8=200px</code></p><p><strong>首先，我们先完成孙悟空的</strong></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token comment">/* .monkey_sun就相当于class="monkey_sun" */</span>    <span class="token selector">.monkey_sun</span> <span class="token punctuation">&#123;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 180px<span class="token punctuation">;</span>        <span class="token property">border</span><span class="token punctuation">:</span> 2px solid red<span class="token punctuation">;</span>        <span class="token comment">/* 相对定位 */</span>        <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.img_sun</span><span class="token punctuation">&#123;</span>        <span class="token comment">/* 绝对定位 */</span>        <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>        <span class="token property">left</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 第一步：先在网页上面创建一个盒子 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>monkey_sun<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 在这里需要插入孙悟空的图片 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/1.png<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img_sun<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>经过我们的实例分析以后，我们发现，这个图片需要经过8个阶段去完成，每个阶段都显示对象的一张图片，这样我们会引出我们的动画的另一种形式**阶段型动画</p><p>什么是阶段型动画？就是我们的动画是有阶段进行的</p><p><img src="image-20210321114148431.png" alt="image-20210321114148431"></p><h4 id="定义阶段型动画"><a href="#定义阶段型动画" class="headerlink" title="定义阶段型动画"></a>定义阶段型动画</h4><p>之前在上一次的周末班里面，我们已经知道定义动画使用<code>@keyframes</code>来进行，所以我们也通过关键来定义今天的动画</p><table><thead><tr><th>阶段</th><th>开始时间</th><th>结束时间</th><th>图片位置</th></tr></thead><tbody><tr><td>1</td><td>0</td><td>12.5</td><td>0</td></tr><tr><td>2</td><td>12.6</td><td>25</td><td>-200</td></tr><tr><td>3</td><td>25.1</td><td>37.5</td><td>-400</td></tr><tr><td>4</td><td>37.6</td><td>50</td><td>-600</td></tr><tr><td>5</td><td>50.1</td><td>62.5</td><td>-800</td></tr><tr><td>6</td><td>62.6</td><td>75</td><td>-1000</td></tr><tr><td>7</td><td>75.1</td><td>87.5</td><td>-1200</td></tr><tr><td>8</td><td>87.6</td><td>100</td><td>-1400</td></tr></tbody></table><p>根据上面的图表，我们可以定义出如下的阶段型动画</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 定义了一个动画 */</span><span class="token atrule"><span class="token rule">@keyframes</span> ani_sun</span><span class="token punctuation">&#123;</span>    <span class="token selector">0%,12.5%</span><span class="token punctuation">&#123;</span>        <span class="token property">left</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">12.6%,25%</span><span class="token punctuation">&#123;</span>        <span class="token property">left</span><span class="token punctuation">:</span> -200px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">25.1%,37.5%</span><span class="token punctuation">&#123;</span>        <span class="token property">left</span><span class="token punctuation">:</span> -400px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">37.6%,50%</span><span class="token punctuation">&#123;</span>        <span class="token property">left</span><span class="token punctuation">:</span> -600px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">50.1%,62.5%</span><span class="token punctuation">&#123;</span>        <span class="token property">left</span><span class="token punctuation">:</span> -800px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">62.6%,75%</span><span class="token punctuation">&#123;</span>        <span class="token property">left</span><span class="token punctuation">:</span> -1000px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">75.1%,87.5%</span><span class="token punctuation">&#123;</span>        <span class="token property">left</span><span class="token punctuation">:</span> -1200px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">87.6%,100%</span><span class="token punctuation">&#123;</span>        <span class="token property">left</span><span class="token punctuation">:</span> -1400px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当上面的动画定义好了以后，我们还需要去调用这个动画</p><h4 id="帧动画"><a href="#帧动画" class="headerlink" title="帧动画"></a>帧动画</h4><p>我们如果采用上面的方式去完成的时候，发现计算阶段的时候很麻烦，同时有的阶段时间不是等分的</p><p>为了更好的解决这个问题，在CSS的动画当中，演变出了一个新的东西，叫<strong>帧动画</strong>（顾名思义就是一帧一帧的动画）</p><p><strong>定义动画</strong></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token atrule"><span class="token rule">@keyframes</span> ani_sun</span> <span class="token punctuation">&#123;</span>    <span class="token selector">0%</span> <span class="token punctuation">&#123;</span>        <span class="token property">left</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">100%</span> <span class="token punctuation">&#123;</span>        <span class="token comment">/*这里的值变成了-1600px*/</span>        <span class="token property">left</span><span class="token punctuation">:</span> -1600px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>调用动画</strong></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.img_sun</span> <span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>    <span class="token property">animation-name</span><span class="token punctuation">:</span> ani_sun<span class="token punctuation">;</span>    <span class="token property">animation-duration</span><span class="token punctuation">:</span> 0.8s<span class="token punctuation">;</span>     <span class="token property">animation-iteration-count</span><span class="token punctuation">:</span> infinite<span class="token punctuation">;</span>    <span class="token comment">/* steps(8)代表把动画拆分成8帧去运行 */</span>    <span class="token property">animation-timing-function</span><span class="token punctuation">:</span> <span class="token function">steps</span><span class="token punctuation">(</span>8<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在上面的代码当中，我们让系统自动的从0%~100%拆分成了8个步骤（拆分成8帧去运行）</p><p>当我们通过上面的代码完成了孙悟空的效果以后，其它的动画效果也是一样的</p><h4 id="动画的视觉差"><a href="#动画的视觉差" class="headerlink" title="动画的视觉差"></a>动画的视觉差</h4><p>所谓动画的视觉差其实就是利用特殊的素材图片实现一个循环动画的效果，在本次的案例当中我们可以看到背景图片是在不停的滚动，它其实就是一个特殊的背景图片</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>西游记背景<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><span class="token selector">.bg-box</span> <span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 1920px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 786px<span class="token punctuation">;</span><span class="token property">border</span><span class="token punctuation">:</span> 5px solid deeppink<span class="token punctuation">;</span><span class="token property">margin</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span><span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span> <span class="token comment">/*相对定位*/</span><span class="token comment">/* 溢出隐藏 */</span><span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.img-box</span> <span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>1920px * 2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 786px<span class="token punctuation">;</span><span class="token comment">/* 设置背景图片，图片只有1920px,但是盒子有3840px ，如果图片小于盒子，则会自动的重复平铺*/</span><span class="token property">background-image</span><span class="token punctuation">:</span><span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>img/bg.jpg<span class="token punctuation">)</span></span><span class="token punctuation">;</span><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token comment">/*绝对定位*/</span><span class="token property">left</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span><span class="token property">top</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span><span class="token property">animation-name</span><span class="token punctuation">:</span> ani_bg<span class="token punctuation">;</span><span class="token property">animation-duration</span><span class="token punctuation">:</span> 15s<span class="token punctuation">;</span><span class="token property">animation-iteration-count</span><span class="token punctuation">:</span> infinite<span class="token punctuation">;</span><span class="token property">animation-timing-function</span><span class="token punctuation">:</span> linear<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@keyframes</span> ani_bg</span><span class="token punctuation">&#123;</span><span class="token selector">0%</span><span class="token punctuation">&#123;</span><span class="token property">left</span><span class="token punctuation">:</span> -1920px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">100%</span><span class="token punctuation">&#123;</span><span class="token property">left</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bg-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里背景的动画视觉差其实就是两个图片的首尾相连</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ol><li><p><code>overflow</code>是盒子的溢出处理，当一个小的容器里面放一个大的元素，就会存在溢出的情况，<code>overflow:hidden</code>就是溢出隐藏</p></li><li><p>关于<code>margin:auto</code>居中</p><p><a href="http://www.softeem.xin:8090/archives/%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B#%E5%85%83%E7%B4%A0%E7%B1%BB%E5%9E%8B">http://www.softeem.xin:8090/archives/%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B#%E5%85%83%E7%B4%A0%E7%B1%BB%E5%9E%8B</a></p></li><li><p>关于定位以后的Z轴问题（脱流问题），请参考</p><p><a href="http://www.softeem.xin:8090/archives/%E5%AE%9A%E4%BD%8D#%E7%BB%9D%E5%AF%B9%E5%AE%9A%E4%BD%8D">http://www.softeem.xin:8090/archives/%E5%AE%9A%E4%BD%8D#%E7%BB%9D%E5%AF%B9%E5%AE%9A%E4%BD%8D</a></p></li><li><p>合理的使用CSS的分组选择器可以提供开发效率，关于CSS的分组选择器，请参考</p><p><a href="http://www.softeem.xin:8090/archives/CSS%E5%9F%BA%E7%A1%80#css%E9%80%89%E6%8B%A9%E5%99%A8">http://www.softeem.xin:8090/archives/CSS%E5%9F%BA%E7%A1%80#css%E9%80%89%E6%8B%A9%E5%99%A8</a></p></li><li><p>关于元素里面的<strong>块级元素</strong>与<strong>行内块级</strong>元素，请参考</p><p><a href="http://www.softeem.xin:8090/archives/%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B#%E5%85%83%E7%B4%A0%E7%B1%BB%E5%9E%8B">http://www.softeem.xin:8090/archives/%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B#%E5%85%83%E7%B4%A0%E7%B1%BB%E5%9E%8B</a></p></li><li><p>关于如果让元素居中的问题，还请参考第2点</p></li><li><p>关于元素的垂直居中，一直是一个痛点，这个后面会开专题讲解</p></li></ol><p>​     教程来源：软帝标哥</p>]]></content>
      
      
      <categories>
          
          <category> css动画 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css动画案例-3D相册</title>
      <link href="year/04/04/n/"/>
      <url>year/04/04/n/</url>
      
        <content type="html"><![CDATA[<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>本次项目我们使用开发工具为<code>HBuilderX</code>来进行</p><ol><li>设置开发软件的主题为你自己合适的主题</li><li>设置快捷键为<code>VS Code</code>的快捷</li><li>本次项目需要准备素材图片</li></ol><h3 id="项目创建"><a href="#项目创建" class="headerlink" title="项目创建"></a>项目创建</h3><p>使用HbuilderX 来创建项目，我们可以采取一种<strong>最简单</strong>的方式来创建项目</p><ol><li>在电脑的桌面上面创建一个英文的文件夹，如<code>bgg</code></li><li>将之前准备好的素材文件夹<code>img</code>剪切到<code>bgg</code>的文件夹里面</li><li>将<code>bgg</code>文件夹拖入到<code>HBuilderX</code>这个开发工具里面去</li></ol><h3 id="开始项目"><a href="#开始项目" class="headerlink" title="开始项目"></a>开始项目</h3><ol><li><p>在当前项目下面新建一个<code>index.html</code>的文件，这是一个网页文件，新的项目当中，代码如下</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>开始设置中间的盒子</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>接下来设置样式</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* .box相当于class="box" */</span><span class="token selector">.box</span> <span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 280px<span class="token punctuation">;</span>    <span class="token comment">/* 设置了一个2px的实线的白色边框 */</span>    <span class="token property">border</span><span class="token punctuation">:</span> 2px solid white<span class="token punctuation">;</span>    <span class="token comment">/* 固定定位，固定的定在浏览器的某一个地方 */</span>    <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>    <span class="token comment">/* calc是CSS属性当中计算的使用 */</span>    <span class="token property">left</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>50% - 100px<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>50% - 140px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><strong>代码说明</strong>：</p><ol><li><code>.box</code>相当于html标签中的<code>class=&quot;box&quot;</code></li><li><code>border</code>代表设置元素的边框,<code>solid</code>是实线</li><li><code>position:fixed</code>是固定定位，具体可能参照<a href="http://www.softeem.xin:8090/archives/%E5%AE%9A%E4%BD%8D#%E5%9B%BA%E5%AE%9A%E5%AE%9A%E4%BD%8D">http://www.softeem.xin:8090/archives/%E5%AE%9A%E4%BD%8D#%E5%9B%BA%E5%AE%9A%E5%AE%9A%E4%BD%8D</a></li><li><code>calc</code>代表CSS中的计算</li></ol></blockquote></li><li><p>开始设置里面的第1张图片</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><span class="token comment">/* .box相当于class="box" */</span>    <span class="token selector">.box</span> <span class="token punctuation">&#123;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 280px<span class="token punctuation">;</span>        <span class="token comment">/* 设置了一个2px的实线的白色边框 */</span>        <span class="token property">border</span><span class="token punctuation">:</span> 2px solid white<span class="token punctuation">;</span>        <span class="token comment">/* 固定定位，固定的定在浏览器的某一个地方 */</span>        <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>        <span class="token comment">/* calc是CSS属性当中计算的使用 */</span>        <span class="token property">left</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>50% - 100px<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>50% - 140px<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">/* 把平面的盒子变成一个3D的盒子 */</span>        <span class="token property">transform-style</span><span class="token punctuation">:</span> preserve-3d<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.box>img</span> <span class="token punctuation">&#123;</span>        <span class="token comment">/* 把图片的宽度与高度设置成与外边的盒子相同 */</span>        <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/* 选中class="box"下边的第1张图片 */</span>    <span class="token selector">.box>img:nth-child(1)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">/* 我要让这一张图片沿着Y轴去旋转30度 ,并且在Z轴上面向前走300px*/</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>30deg<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>300px<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/2014.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在上面的代码里面，我们用到了CSS3当中的变换属性<code>transform</code>，这一块可以参考<a href="http://www.softeem.xin:8090/archives/%E5%8F%98%E6%8D%A2">http://www.softeem.xin:8090/archives/%E5%8F%98%E6%8D%A2</a></p><p>其中还用到了3D变换</p></li><li><p>按照第1张图片的思路，我们把剩下的11张图片也放进去</p><p>当我们按照我们的思维进行代码完成，在里面添加了剩下的图片代码</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/2014.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/2015.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/2016.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/2017.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/2018上.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/w01.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/w02.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/w03.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/w04.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/w05.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/w06.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/w07.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们发现一个问题，这个图片是从上向下在排列，并没有符合我们的要求，<strong>那么，我们怎么样让片都从于同一个位置开始呢？</strong></p><p>这个时候我们要让所有的图片都以<code>box</code>盒子的左上角为开始，这怎么办呢？</p><p>针对于这一种，在前端布局里面，有一个思路叫<font style="color:red;font-size:22px;text-decoration:wavy blue underline">子绝父相</font></p><p><a href="http://www.softeem.xin:8090/archives/%E5%AE%9A%E4%BD%8D#%E5%85%B3%E4%BA%8E%E5%AD%90%E7%BB%9D%E7%88%B6%E7%9B%B8">http://www.softeem.xin:8090/archives/%E5%AE%9A%E4%BD%8D#%E5%85%B3%E4%BA%8E%E5%AD%90%E7%BB%9D%E7%88%B6%E7%9B%B8</a></p><p><strong>子绝父相：</strong>当一个元素如果要以另一外元素为标准进行位置布局的时候，最好的办法就是在父级元素上面设置<code>相对定位</code>,而在所有的子级元素上面设置<code>绝对定位</code>，这样就实现了子绝父相的布局</p></li></ol><h3 id="CSS动画的应用"><a href="#CSS动画的应用" class="headerlink" title="CSS动画的应用"></a>CSS动画的应用</h3><p>在CSS里面，如果要使用动画，必须经历下面两个阶段</p><pre class="line-numbers language-mermaid" data-language="mermaid"><code class="language-mermaid">graph LRA[定义动画]--&gt;B[调用动画]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="动画的定义"><a href="#动画的定义" class="headerlink" title="动画的定义"></a>动画的定义</h4><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token atrule"><span class="token rule">@keyframes</span> 动画名称</span> <span class="token punctuation">&#123;</span>    <span class="token selector">from</span> <span class="token punctuation">&#123;</span><span class="token comment">/*动画开始*/</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">to</span> <span class="token punctuation">&#123;</span><span class="token comment">/*动画结束*/</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>下面我们就使用语法定义了一个旋转360度的动画 </p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 在CSS里面，我们可以定义一个动画 */</span><span class="token atrule"><span class="token rule">@keyframes</span> zhuan</span> <span class="token punctuation">&#123;</span>    <span class="token selector">from</span> <span class="token punctuation">&#123;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>0deg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">to</span> <span class="token punctuation">&#123;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>360deg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="动画的调用"><a href="#动画的调用" class="headerlink" title="动画的调用"></a>动画的调用</h4><p>在调用动画的时候，要使用CSS的属性去调用，这个属性就是<code>animation</code></p><ol><li><code>animation-name</code>动画的名称</li><li><code>animation-duration</code>动画的时间 </li><li><code>animation-iteration-count</code>动画执行的次数</li><li><code>animation-timing-function</code>动画执行的时间函数（动画的效果）</li></ol><p>目前我们使用的就是上面的四个</p><h3 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>标哥最帅<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><span class="token selector">body</span> <span class="token punctuation">&#123;</span><span class="token property">background-color</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.box</span> <span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 280px<span class="token punctuation">;</span><span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>50% - 100px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">top</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>50% - 140px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">transform-style</span><span class="token punctuation">:</span> preserve-3d<span class="token punctuation">;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateX</span><span class="token punctuation">(</span>-20deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/* 调用动画 */</span><span class="token property">animation-name</span><span class="token punctuation">:</span> zhuan<span class="token punctuation">;</span><span class="token comment">/* 设置动画执行一次需要10s */</span><span class="token property">animation-duration</span><span class="token punctuation">:</span> 10s<span class="token punctuation">;</span><span class="token comment">/* 设置动画无限次循环 */</span><span class="token property">animation-iteration-count</span><span class="token punctuation">:</span> infinite<span class="token punctuation">;</span><span class="token comment">/* 设置动画匀速播放 */</span><span class="token property">animation-timing-function</span><span class="token punctuation">:</span> linear<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.box>img</span> <span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span><span class="token property">left</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span><span class="token property">top</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span><span class="token property">border-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token property">box-shadow</span><span class="token punctuation">:</span> 0px 0px 15px white<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.box>img:nth-child(1)</span> <span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>30deg<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>500px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.box>img:nth-child(2)</span> <span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>60deg<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>500px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.box>img:nth-child(3)</span> <span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>90deg<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>500px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.box>img:nth-child(4)</span> <span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>120deg<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>500px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.box>img:nth-child(5)</span> <span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>150deg<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>500px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.box>img:nth-child(6)</span> <span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>180deg<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>500px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.box>img:nth-child(7)</span> <span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>210deg<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>500px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.box>img:nth-child(8)</span> <span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>240deg<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>500px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.box>img:nth-child(9)</span> <span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>270deg<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>500px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.box>img:nth-child(10)</span> <span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>300deg<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>500px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.box>img:nth-child(11)</span> <span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>330deg<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>500px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.box>img:nth-child(12)</span> <span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>360deg<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>500px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 在CSS里面，我们可以定义一个动画 */</span><span class="token atrule"><span class="token rule">@keyframes</span> zhuan</span> <span class="token punctuation">&#123;</span><span class="token selector">from</span> <span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateX</span><span class="token punctuation">(</span>-20deg<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>0deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">to</span> <span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateX</span><span class="token punctuation">(</span>-20deg<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>360deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/2014.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/2015.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/2016.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/2017.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/2018上.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/w01.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/w02.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/w03.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/w04.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/w05.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/w06.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/w07.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="女朋友相册完整版代码如下："><a href="#女朋友相册完整版代码如下：" class="headerlink" title="女朋友相册完整版代码如下："></a>女朋友相册完整版代码如下：</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>女朋友相册<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>css/index.css<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>audio</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>你的酒馆对我打了烊.mp3<span class="token punctuation">"</span></span> <span class="token attr-name">autoplay</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>autoplay<span class="token punctuation">"</span></span> <span class="token attr-name">controls</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>controls<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>audio</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cube<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>out_front<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/1.jpg<span class="token punctuation">"</span></span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pic<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>out_back<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/2.jpg<span class="token punctuation">"</span></span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pic<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>out_left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/3.jpg<span class="token punctuation">"</span></span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pic<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>out_right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/4.jpg<span class="token punctuation">"</span></span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pic<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>out_top<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/5.jpg<span class="token punctuation">"</span></span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pic<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>out_bottom<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/6.jpg<span class="token punctuation">"</span></span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pic<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>in_front<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/7.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>in_pic<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>in_back<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/8.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>in_pic<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>in_left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/9.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>in_pic<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>in_right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/10.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>in_pic<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>in_top<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/11.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>in_pic<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>in_bottom<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/12.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>in_pic<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="css代码："><a href="#css代码：" class="headerlink" title="css代码："></a>css代码：</h2><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">html</span><span class="token punctuation">&#123;</span><span class="token property">background</span><span class="token punctuation">:</span> #000<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/*最外层容器样式*/</span><span class="token selector">.wrap</span><span class="token punctuation">&#123;</span><span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span><span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token property">right</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token property">bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span><span class="token property">margin</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span><span class="token comment">/*改变左右上下,图片方块移动*/</span><span class="token punctuation">&#125;</span><span class="token comment">/*包裹所有容器样式*/</span><span class="token selector">.cube</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span><span class="token property">margin</span><span class="token punctuation">:</span> 0 auto<span class="token punctuation">;</span><span class="token property">transform-style</span><span class="token punctuation">:</span> preserve-3d<span class="token punctuation">;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateX</span><span class="token punctuation">(</span>-30deg<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>-80deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">-webkit-animation</span><span class="token punctuation">:</span> rotate 20s infinite<span class="token punctuation">;</span><span class="token comment">/*匀速*/</span><span class="token property">animation-timing-function</span><span class="token punctuation">:</span> linear<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@-webkit-keyframes</span> rotate</span><span class="token punctuation">&#123;</span><span class="token selector">from</span><span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateX</span><span class="token punctuation">(</span>0deg<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>0deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">to</span><span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateX</span><span class="token punctuation">(</span>360deg<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>360deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token selector">.cube div</span><span class="token punctuation">&#123;</span><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span><span class="token property">opacity</span><span class="token punctuation">:</span> 0.8<span class="token punctuation">;</span><span class="token property">transition</span><span class="token punctuation">:</span> all .4s<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/*定义所有图片样式*/</span><span class="token selector">.pic</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.cube .out_front</span><span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>0deg<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>100px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.cube .out_back</span><span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>-100px<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>180deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.cube .out_left</span><span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>90deg<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>100px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.cube .out_right</span><span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>-90deg<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>100px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.cube .out_top</span><span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateX</span><span class="token punctuation">(</span>90deg<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>100px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.cube .out_bottom</span><span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateX</span><span class="token punctuation">(</span>-90deg<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>100px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/*定义小正方体样式*/</span><span class="token selector">.cube span</span><span class="token punctuation">&#123;</span><span class="token property">display</span><span class="token punctuation">:</span> bloack<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span><span class="token property">top</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span><span class="token property">left</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.cube .in_pic</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.cube .in_front</span><span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>0deg<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>50px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.cube .in_back</span><span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>-50px<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>180deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.cube .in_left</span><span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>90deg<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>50px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.cube .in_right</span><span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>-90deg<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>50px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.cube .in_top</span><span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateX</span><span class="token punctuation">(</span>90deg<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>50px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.cube .in_bottom</span><span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateX</span><span class="token punctuation">(</span>-90deg<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>50px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/*鼠标移入后样式*/</span><span class="token selector">.cube:hover .out_front</span><span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>0deg<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>200px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.cube:hover .out_back</span><span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>-200px<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>180deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.cube:hover .out_left</span><span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>90deg<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>200px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.cube:hover .out_right</span><span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>-90deg<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>200px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.cube:hover .out_top</span><span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateX</span><span class="token punctuation">(</span>90deg<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>200px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.cube:hover .out_bottom</span><span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateX</span><span class="token punctuation">(</span>-90deg<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>200px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最终效果如下(我只是截了一张静态图，实际为动态3D效果)：</p><p><img src="01.png"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>本次项目当中用到了技术点</p><ol><li><code>transform</code>变换</li><li><code>trasnform-style</code>:变换的方式，里面有3D变换</li><li><code>rotate</code>旋转</li><li><code>translate</code>位移</li><li><code>@keyframe</code>定义动画</li><li><code>animation</code>使用动画 </li><li>“子绝父相”的使用</li></ol><p>​     教程来源：软帝标哥</p>]]></content>
      
      
      <categories>
          
          <category> css动画 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css动画案例-吃豆人和火星圆环</title>
      <link href="year/03/30/m/"/>
      <url>year/03/30/m/</url>
      
        <content type="html"><![CDATA[<h3 id="吃豆人和火星圆环案例"><a href="#吃豆人和火星圆环案例" class="headerlink" title="吃豆人和火星圆环案例"></a>吃豆人和火星圆环案例</h3><p><img src="chi.gif"></p><h4 id="1-创建项目"><a href="#1-创建项目" class="headerlink" title="1. 创建项目"></a>1. 创建项目</h4><p>先在桌面创建一个文件夹，然后将这个文件夹拖动到开发具<code>HbuilderX</code>里面</p><h4 id="2-创建html网页"><a href="#2-创建html网页" class="headerlink" title="2.创建html网页"></a>2.创建html网页</h4><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上面是最基本的网页结构，你们可以把这个网页结构看成是一个人</p><p><code>&lt;head&gt;&lt;/head&gt;</code>可以看成是一个人的头部</p><p><code>&lt;body&gt;&lt;/body&gt;</code>可以看成是一个人身体</p><p><code>&lt;title&gt;&lt;/title&gt;</code>浏览器的标题，也相当于人的姓名</p><h4 id="3-先完成头部的部分"><a href="#3-先完成头部的部分" class="headerlink" title="3.先完成头部的部分"></a>3.先完成头部的部分</h4><p>根据我们的分析，我们是希望得到一半圆就可以了</p><p><img src="image-20210328103310045.png"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token comment">/* class在样式里面有一个特殊的符号叫. */</span>    <span class="token selector">.header_up</span><span class="token punctuation">&#123;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span>        <span class="token property">border-top-left-radius</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>        <span class="token property">border-top-right-radius</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>header_up<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过上面的代码，我们已经将吃豆人的上半个脑袋画出来了，接下来，我们先不画下半个脑袋 ，我们先脑袋动起来</p><p>在之前的学习里面，我们已经形成了X,Y,Z轴的概念，并且也熟悉了变换的相关知识点，如果没有印象的学生可能参考下面的基础笔记 </p><p><a href="http://www.softeem.xin:8090/archives/%E5%8F%98%E6%8D%A2">http://www.softeem.xin:8090/archives/%E5%8F%98%E6%8D%A2</a></p><p>现在我们要使用动画来让上边的脑袋动起来，接下来所使用到的2个点就是<strong>动画的定义</strong>与<strong>动画的使用</strong></p><p><a href="http://www.softeem.xin:8090/archives/CSS%E5%8A%A8%E7%94%BB">http://www.softeem.xin:8090/archives/CSS%E5%8A%A8%E7%94%BB</a></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* class在样式里面有一个特殊的符号叫. */</span><span class="token selector">.header_up</span><span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span>    <span class="token property">border-top-left-radius</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>    <span class="token property">border-top-right-radius</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>    <span class="token comment">/* 变换 */</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateZ</span><span class="token punctuation">(</span>0deg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">/* 动画的名称 */</span>    <span class="token property">animation-name</span><span class="token punctuation">:</span> ani_header_up<span class="token punctuation">;</span>    <span class="token comment">/* 动画的时间 */</span>    <span class="token property">animation-duration</span><span class="token punctuation">:</span> 2s<span class="token punctuation">;</span>    <span class="token comment">/* 动画重复的次数,infinite代表无穷次 */</span>    <span class="token property">animation-iteration-count</span><span class="token punctuation">:</span> infinite<span class="token punctuation">;</span>    <span class="token comment">/* 动画匀速执行 */</span>    <span class="token property">animation-timing-function</span><span class="token punctuation">:</span> linear<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 定义一个动画 */</span><span class="token atrule"><span class="token rule">@keyframes</span> ani_header_up</span><span class="token punctuation">&#123;</span>    <span class="token selector">0%</span><span class="token punctuation">&#123;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateZ</span><span class="token punctuation">(</span>0deg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">50%</span><span class="token punctuation">&#123;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateZ</span><span class="token punctuation">(</span>-30deg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">100%</span><span class="token punctuation">&#123;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateZ</span><span class="token punctuation">(</span>0deg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>完成眼晴部分</strong></p><p>首先我们可以根据之前所学习的”子绝父相”去完成，关于子绝父相，可以参考下面的笔记 </p><p><a href="http://www.softeem.xin:8090/archives/%E5%AE%9A%E4%BD%8D">http://www.softeem.xin:8090/archives/%E5%AE%9A%E4%BD%8D</a></p><p><strong>完成豆子的部分</strong></p><p>为了更好的去理解我们的代码，我们在当前的文件夹项目下面新建一个html的文件，命名为02.html</p><h3 id="土星圆环案例"><a href="#土星圆环案例" class="headerlink" title="土星圆环案例"></a>土星圆环案例</h3><p><img src="tuxinanli.gif" alt="土星圆环案例"></p><h3 id="1-创建项目-1"><a href="#1-创建项目-1" class="headerlink" title="1. 创建项目"></a>1. 创建项目</h3><ul><li><p>先在桌面上面创建一个文件夹，命名为<code>huan</code>，然后将这个文件夹拖入到<code>HbuilderX</code>这个开发工具里面</p></li><li><p>在当前项目的夹文件夹下面创建一个<code>index.html</code>的文件，并在浏览器中打开</p></li><li><p>开始编码</p></li></ul><h3 id="2-项目代码"><a href="#2-项目代码" class="headerlink" title="2.项目代码"></a>2.项目代码</h3><ul><li><p>先把网页的背景设置为黑色</p></li><li><p>设置一个盒子，并设置圆锥渐变，具体的基础知识可以参考下面的笔记</p><p><a href="http://www.softeem.xin:8090/archives/%E6%B8%90%E5%8F%98#%E5%9C%86%E9%94%A5%E6%B8%90%E5%8F%98">http://www.softeem.xin:8090/archives/%E6%B8%90%E5%8F%98#%E5%9C%86%E9%94%A5%E6%B8%90%E5%8F%98</a></p></li></ul><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>标哥哥----土星圆环<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><span class="token selector">body</span> <span class="token punctuation">&#123;</span><span class="token property">background-color</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.box</span> <span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span><span class="token comment">/* 圆锥渐变 */</span><span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">conic-gradient</span><span class="token punctuation">(</span>red<span class="token punctuation">,</span> blue<span class="token punctuation">,</span> green<span class="token punctuation">,</span> deeppink<span class="token punctuation">,</span> gold<span class="token punctuation">,</span> red<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">border-radius</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span><span class="token comment">/* 变换：旋转X轴70度 旋转Y轴15度 */</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateX</span><span class="token punctuation">(</span>70deg<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>13deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/* 使用定义好的动画效果 */</span><span class="token property">animation</span><span class="token punctuation">:</span> ani_box 10s infinite linear<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.small-box</span> <span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span><span class="token comment">/* scale是缩放 */</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span>0.68<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">border-radius</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.circle</span> <span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span><span class="token comment">/* 绝对定位 */</span><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span><span class="token comment">/* 左负右正，上负下正 */</span><span class="token property">left</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>50% - 100px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">top</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>50% - 100px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span><span class="token comment">/* 设置盒子的阴影 */</span><span class="token property">box-shadow</span><span class="token punctuation">:</span> 0px 0px 30px 10px deeppink inset<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.main</span> <span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span><span class="token comment">/* 相对定位 */</span><span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 定义一个动画 */</span><span class="token atrule"><span class="token rule">@keyframes</span> ani_box</span><span class="token punctuation">&#123;</span><span class="token selector">0%</span><span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateX</span><span class="token punctuation">(</span>70deg<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>13deg<span class="token punctuation">)</span> <span class="token function">rotateZ</span><span class="token punctuation">(</span>0deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">100%</span><span class="token punctuation">&#123;</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateX</span><span class="token punctuation">(</span>70deg<span class="token punctuation">)</span> <span class="token function">rotateY</span><span class="token punctuation">(</span>13deg<span class="token punctuation">)</span> <span class="token function">rotateZ</span><span class="token punctuation">(</span>360deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>main<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 环 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>small-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 球 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>circle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ol><li><p><code>transform</code>变换的属性</p><ul><li><code>rotate</code>旋转</li><li><code>scale</code>缩放</li></ul></li><li><p><code>border-radius</code>设置一个圆角，它有四个角</p></li><li><p>“子绝父相”：当一个元素以另一个元素为标准进行位置设置的时候，最好使用子绝父相</p></li><li><p>元素类型的转换</p><p><strong>块级元素</strong>：默认独自占有用一行</p><p><strong>行内块级元素</strong>：可以排在同一行</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token property">diaplay</span><span class="token punctuation">:</span>inline-block<span class="token punctuation">;</span> <span class="token comment">/*将元素转换为行内块级元素*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><code>overflow:hidden</code>溢出隐藏</p></li><li><p><code>@keyframes</code>用于定义动画，<code>animation</code>用于使用动画</p></li><li><p><code>conic-gradient</code>圆锥渐变的使用</p></li><li><p><code>HbuilderX</code>开发工具的使用及项目的创建</p><p>教程来源：软帝杨标老师</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> css动画 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue项目环境搭建</title>
      <link href="year/03/30/l/"/>
      <url>year/03/30/l/</url>
      
        <content type="html"><![CDATA[<h1 id="项目环境安装"><a href="#项目环境安装" class="headerlink" title="项目环境安装"></a>项目环境安装</h1><h4 id="一、技术选型"><a href="#一、技术选型" class="headerlink" title="一、技术选型"></a>一、技术选型</h4><p>Vue全家桶+Node.js/Mysql或者PHP/Mysql</p><h4 id="二、工具Node-js安装"><a href="#二、工具Node-js安装" class="headerlink" title="二、工具Node.js安装"></a>二、工具Node.js安装</h4><p>（1）：打开官方网站：<a href="https://nodejs.org/en/">https://nodejs.org/en/</a></p><p><img src="node%E4%B8%8B%E8%BD%BD.png"></p><p>（2）：选择对应的node版本进行下载</p><p><img src="%E9%80%89%E6%8B%A9node%E7%89%88%E6%9C%AC.png"></p><p>（3）：安装node.js后，进行版本检查</p><p><img src="%E6%A3%80%E6%9F%A5node%E7%89%88%E6%9C%AC.png"></p><h4 id="三、使用VSCode开发工具新建Vue项目"><a href="#三、使用VSCode开发工具新建Vue项目" class="headerlink" title="三、使用VSCode开发工具新建Vue项目"></a>三、使用VSCode开发工具新建Vue项目</h4><p>（1）：新建项目文件夹，名字为:MyShop</p><p><img src="%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE.png"></p><p>（2）：选中文件夹，反键使用VsCode打开项目</p><p>（3）：使用ctrl+~打开终端命令</p><p><img src="%E6%89%93%E5%BC%80%E7%BB%88%E7%AB%AF.png"></p><p>（4）：使用淘宝镜像执行cnpm命令</p><p>​     npm install -g cnpm –registry=<a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a></p><p>​     <span style="color:red">注：因为npm是国外的服务，用起来比较卡。需要换成淘宝的cnpm</span></p><p>（5）：全局安装vue脚手架   cnpm install -g vue-cli</p><p>​     <span style="color:red">会提示一下报错：</span></p><p><img src="%E8%BF%90%E8%A1%8C%E8%84%9A%E6%89%8B%E6%9E%B6%E6%8A%A5%E9%94%99.PNG"></p><p>​     <span style="color:red">解决办法如下：</span></p><ol><li><p>管理员身份打开powerShell </p><p><img src="WindowsPowerShell%E6%8A%A5%E9%94%99.png"></p></li><li><p>输入set-ExecutionPolicy RemoteSigned ，回车</p></li><li><p>输入Y，回车</p><p><img src="%E8%A7%A3%E5%86%B3powershell.PNG"></p><p>4.再次安装vue脚手架</p></li></ol><p>​       cnpm install -g vue-cli</p><p><img src="%E5%AE%89%E8%A3%85%E8%84%9A%E6%89%8B%E6%9E%B6.png"></p><p>（6）：全局安装webpack</p><p>​     Cnpm install -g webpack</p><p><img src="%E5%AE%89%E8%A3%85webpack.png"></p><p>​    <span style="color:red">注意：第一次安装时，步骤不能乱，一定不能乱！</span></p><p>（7）：新建项目</p><p>​    vue init webpack</p><p>   <span style="color:red">注意：项目名字一定要小写，大写会报错</span></p><p>（8）：安装图解</p><p><img src="%E5%AE%89%E8%A3%85%E5%9B%BE%E8%A7%A3.png"></p><p>  <span style="color:red">注意：ESlint(严选模式)一定要选NO，否则心态爆炸！</span></p><p>（9）:执行npm命令</p><p>​    cnpm install</p><p>   <span style="color:red">注意：必须执行此命令，要不然一直会报错</span></p><p>（10）：运行项目</p><p>​    npm run serve</p><p><img src="%E8%BF%90%E8%A1%8C%E9%A1%B9%E7%9B%AE.png"></p><p><span style="color:red">参考文档：<a href="https://www.jianshu.com/p/02b12c600c7b">https://www.jianshu.com/p/02b12c600c7b</a></span></p><p><a href="https://www.cnblogs.com/zyskr/p/10609288.html">https://www.cnblogs.com/zyskr/p/10609288.html</a></p><h4 id="四、安装饿了么UI前端框架"><a href="#四、安装饿了么UI前端框架" class="headerlink" title="四、安装饿了么UI前端框架"></a>四、安装饿了么UI前端框架</h4><p>cnpm i element-ui -S</p><p><img src="%E5%AE%89%E8%A3%85%E9%A5%BF%E4%BA%86UI.png"></p><h4 id="五、安装less和sass预处理"><a href="#五、安装less和sass预处理" class="headerlink" title="五、安装less和sass预处理"></a>五、安装less和sass预处理</h4><p>（1）：cnpm install <a href="mailto:&#x6c;&#101;&#115;&#115;&#64;&#x33;&#x2e;&#57;&#46;&#x30;">&#x6c;&#101;&#115;&#115;&#64;&#x33;&#x2e;&#57;&#46;&#x30;</a> -s  </p><p>（2）：cnpm install <a href="mailto:&#108;&#101;&#115;&#x73;&#45;&#108;&#x6f;&#97;&#x64;&#x65;&#114;&#64;&#x35;&#46;&#48;&#46;&#x30;">&#108;&#101;&#115;&#x73;&#45;&#108;&#x6f;&#97;&#x64;&#x65;&#114;&#64;&#x35;&#46;&#48;&#46;&#x30;</a> -s</p><p>  <span style="color:red">注意：一定要写版本号，否则less自动安装最新版本，会和vue-cli不兼容一直报错。</span></p><p>  <span style="color:red">解决报错的话使用cnpm install重新安装一遍！</span></p><p>六、安装axios</p><p>（1）：cnpm install axios</p><p>（2）：cnpm install –save axios vue-axios</p><p> <span style="color:red">注意：不安装axios的话，不能使用post/get等提交方式，会报错！</span></p><p> <span style="color:red">文字高亮：Vetur</span></p><h1 id="登录页面功能"><a href="#登录页面功能" class="headerlink" title="登录页面功能"></a>登录页面功能</h1><h4 id="一、新建登录页面"><a href="#一、新建登录页面" class="headerlink" title="一、新建登录页面"></a>一、新建登录页面</h4><p><img src="%E6%96%B0%E5%BB%BA%E7%99%BB%E5%BD%95.png"></p><h4 id="二、页面样式以及布局"><a href="#二、页面样式以及布局" class="headerlink" title="二、页面样式以及布局"></a>二、页面样式以及布局</h4><pre class="line-numbers language-vue.js" data-language="vue.js"><code class="language-vue.js">&lt;style scoped lang&#x3D;&quot;less&quot;&gt;.login-box &#123;  border: 1px solid #dcdfe6;  width: 350px;  margin: 180px auto;  padding: 35px 35px 15px 35px;  border-radius: 5px;  -webkit-border-radius: 5px;  -moz-border-radius: 5px;  box-shadow: 0 0 25px palegreen;&#125;.login-title &#123;  text-align: center;  margin: 0 auto 40px auto;  color: #66cd00;  font-size: 30px;  font-weight: bold;&#125;&lt;&#x2F;style&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（1）：初始化表单</p><pre class="line-numbers language-vue.js" data-language="vue.js"><code class="language-vue.js">&lt;template&gt;&lt;div class&#x3D;&quot;login-box&quot;&gt;&lt;!-- 声明表单 --&gt; &lt;el-form&gt;    &lt;span class&#x3D;&quot;login-title&quot;&gt;欢迎登录&lt;&#x2F;span&gt;    &lt;!-- 表单项 --&gt;     &lt;el-form-item label&#x3D;&quot;用户名&quot; prop&#x3D;&quot;U_LoginName&quot;&gt;        &lt;el-col :span&#x3D;&quot;22&quot;&gt;           &lt;!-- 按钮 --&gt;           &lt;!-- v-model：双向绑定 --&gt;          &lt;el-input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;LoginForm.username&quot;&gt;&lt;&#x2F;el-input&gt;        &lt;&#x2F;el-col&gt;      &lt;&#x2F;el-form-item&gt;      &lt;el-form-item label&#x3D;&quot;密码&quot; prop&#x3D;&quot;U_Password&quot;&gt;        &lt;el-col :span&#x3D;&quot;22&quot;&gt;          &lt;el-input type&#x3D;&quot;password&quot; v-model&#x3D;&quot;LoginForm.password&quot;&gt;&lt;&#x2F;el-input&gt;        &lt;&#x2F;el-col&gt;      &lt;&#x2F;el-form-item&gt;      &lt;el-form-item&gt;          &lt;!-- 登录和注册按钮 --&gt;          &lt;!-- @click:按钮指令，绑定事件 --&gt;        &lt;el-button type&#x3D;&quot;primary&quot; @click&#x3D;&quot;loginSubmit(&#39;LoginForm&#39;)&quot;&gt;登录&lt;&#x2F;el-button&gt;        &lt;el-button type&#x3D;&quot;primary&quot;&gt;注册&lt;&#x2F;el-button&gt;      &lt;&#x2F;el-form-item&gt; &lt;&#x2F;el-form&gt; &lt;&#x2F;div&gt;&lt;&#x2F;template&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（2）：Vue双向绑定和ajax提交</p><pre class="line-numbers language-vue.js" data-language="vue.js"><code class="language-vue.js">&lt;script&gt;&#x2F;&#x2F; export default:导出模块，可以给其他组件使用&#x2F;&#x2F; name:组件名字，其他直接调用此名字就可以使用export default &#123;  name:&quot;login&quot;,  data()  &#123;    return &#123;      LoginForm:&#123;        username:&quot;&quot;,        password:&quot;&quot;      &#125;    &#125;  &#125;,  &#x2F;&#x2F; vue之中的函数，一般是执行点击事件  methods:&#123;    &#x2F;&#x2F; loginSubmit：登录事件    loginSubmit()    &#123;       this.$http.post(&quot;http:&#x2F;&#x2F;timemeetyou.com:8889&#x2F;api&#x2F;private&#x2F;v1&#x2F;login&quot;,this.LoginForm).then((data)&#x3D;&gt;&#123;                if(data.data.meta.status&#x3D;&#x3D;&quot;200&quot; &amp;&amp; data.data.meta.msg&#x3D;&#x3D;&quot;登录成功&quot;)                &#123;                     window.sessionStorage.setItem(&#39;token&#39;, data.data.data.token)                     this.$router.push(&#39;&#x2F;menu&#39;)                &#125;                else                &#123;                  alert(&quot;用户名或密码错误&quot;)                &#125;        &#125;)           &#125;  &#125;&#125;&lt;&#x2F;script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><span style="color:blue">（3）：修改路由</span></p><p><span style="color:red">①：在route/index.js路由文件中添加页面路径地址</span></p><pre class="line-numbers language-vue.js" data-language="vue.js"><code class="language-vue.js">import Login from &#39;..&#x2F;components&#x2F;Login.vue&#39;Vue.use(Router)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><span style="color:red">②：在路由中设置主页面</span></p><pre class="line-numbers language-vue.js" data-language="vue.js"><code class="language-vue.js">export default new Router(&#123;  routes: [    &#123;      path: &#39;&#x2F;&#39;,      name: &#39;Login&#39;,      component: Login    &#125;  ]&#125;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><span style="color:red">注意：component: Login中的Login，要和import中的一致</span></p><p><span style="color:blue">（4）：在main.js文件中添加饿了么UI引用</span></p><pre class="line-numbers language-vue.js" data-language="vue.js"><code class="language-vue.js">import ElementUI from &#39;element-ui&#39;;import &#39;element-ui&#x2F;lib&#x2F;theme-chalk&#x2F;index.css&#39;;&#x2F;&#x2F;把饿了么UI定义成全局组件，在任何地方都能使用Vue.use(ElementUI);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="%E7%99%BB%E5%BD%95%E9%A1%B5%E9%9D%A2.png"></p><h4 id="三、跳转主页面"><a href="#三、跳转主页面" class="headerlink" title="三、跳转主页面"></a>三、跳转主页面</h4><p>（1）：在Login.vue组件设置跳转</p><p>this.$router.push(‘/Main’)</p><p>（2）：新建main.vue主页面</p><p><img src="%E6%96%B0%E5%BB%BA%E4%B8%BB%E9%A1%B5%E9%9D%A2.png"></p><p>（3）：点击登录按钮，进行跳转</p><p><span style="color:red">提示以下错误：</span></p><pre class="line-numbers language-vue.js" data-language="vue.js"><code class="language-vue.js">TypeError: Cannot read property &#39;post&#39; of undefined<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><span style="color:blue">需要在main.js中添加axios的引用</span></p><pre class="line-numbers language-vue.js" data-language="vue.js"><code class="language-vue.js">&#x2F;&#x2F;引入axios&#x2F;&#x2F;类似于ajaximport axios from &quot;axios&quot;Vue.prototype.$http &#x3D; axiosaxios.interceptors.request.use((config) &#x3D;&gt; &#123;  config.headers.Authorization &#x3D; window.sessionStorage.getItem(&#39;token&#39;)  return config;&#125;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在src的components的目录下面新建menu.vue和main.vue</p><p>在router的index.js中导入跳转的主页面</p><p><img src="01.png"></p><p>并在下方添加其路经</p><p><img src="02.png"></p><p>在menu.vue文件中添加代码</p><pre class="line-numbers language-vue.js" data-language="vue.js"><code class="language-vue.js">&lt;template&gt;&lt;div id&#x3D;&quot;app&quot;&gt;  &lt;!-- 声明一个容器 --&gt;    &lt;el-container class&#x3D;&quot;home-container&quot;&gt;      &lt;el-header&gt;       电商管理后台      &lt;img src&#x3D;&quot;..&#x2F;assets&#x2F;Main-logo.png&quot;&#x2F;&gt;      &lt;el-button type&#x3D;&quot;info&quot;&gt;退出&lt;&#x2F;el-button&gt;      &lt;&#x2F;el-header&gt;    &lt;&#x2F;el-container&gt;   &lt;&#x2F;div&gt;&lt;&#x2F;template&gt;&lt;style lang&#x3D;&quot;less&quot; scoped&gt;  html,  body,  #app&#123;    height: 100%;    margin: 0px;    padding: 0px;    min-width: 1080px;  &#125;  .home-container&#123;    height: 100%;  &#125;  .el-header&#123;    background-color:#9cc3dd;    text-align: center;    line-height: 60px;    position: relative;  &#125;  img&#123;    position: absolute;    left: 20px;    height: 100%;  &#125;  .el-button&#123;    position: absolute;    right: 20px;    top: 10px;  &#125;&lt;&#x2F;style&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行项目npm run dev   </p><p>成功后会出现运行地址，把它复制到浏览器中运行此时会出现以下界面</p><p><img src="03.png"></p><p>我们输入用户名：admin  密码：123456  点击登录就会跳转一个新页面如下：</p><p><img src="04.png"></p><p>此时我们就完成了从登录到跳转的页面。</p>]]></content>
      
      
      <categories>
          
          <category> vue项目环境搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>豆瓣电影微信小程序开发教程</title>
      <link href="year/03/09/k_dou_ban_dian_ying_wei_xin_xiao_cheng_xu/"/>
      <url>year/03/09/k_dou_ban_dian_ying_wei_xin_xiao_cheng_xu/</url>
      
        <content type="html"><![CDATA[<h1 id="豆瓣电影微信小程序开发教程"><a href="#豆瓣电影微信小程序开发教程" class="headerlink" title="豆瓣电影微信小程序开发教程"></a>豆瓣电影微信小程序开发教程</h1><h5 id="一、程序安装"><a href="#一、程序安装" class="headerlink" title="一、程序安装"></a>一、程序安装</h5><p>1)：百度搜素“微信公众平台”，进行开发账号注册，如下图所示：</p><p><img src="%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%89%E8%A3%85.png"></p><p>2)：注册完毕后，依次选择“开发”-&gt;“工具”-&gt;“下载”,根据机器操作系统类型，选择相应的开发工具软件，如下图所示：</p><p><img src="%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%89%E8%A3%851.png"></p><p>3)：右键以管理员身份运行下载的工具安装文件，然后点击“下一步”，如下图所示：</p><p><img src="%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%89%E8%A3%852.png"></p><p>4)：直至安装结束，点击“完成”，如下图所示：</p><p><img src="%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%89%E8%A3%853.png"></p><h5 id="二、设置页头页尾导航栏"><a href="#二、设置页头页尾导航栏" class="headerlink" title="二、设置页头页尾导航栏"></a>二、设置页头页尾导航栏</h5><h6 id="1-：找到app-json文件"><a href="#1-：找到app-json文件" class="headerlink" title="1)：找到app.json文件"></a>1)：找到app.json文件</h6><p><img src="%E8%AE%BE%E7%BD%AE%E9%A1%B5%E5%A4%B4.png"></p><h6 id="2）：设置页头中的背景颜色-名字-字体颜色"><a href="#2）：设置页头中的背景颜色-名字-字体颜色" class="headerlink" title="2）：设置页头中的背景颜色/名字/字体颜色"></a>2）：设置页头中的背景颜色/名字/字体颜色</h6><p><img src="%E8%AE%BE%E7%BD%AE%E9%A1%B5%E5%A4%B41.png"></p><h6 id="3）：设置页尾导航"><a href="#3）：设置页尾导航" class="headerlink" title="3）：设置页尾导航"></a>3）：设置页尾导航</h6><p><img src="%E9%A1%B5%E5%B0%BE.png"></p><p>①:设置底部导航栏文字颜色/选中颜色/背景颜色</p><p>②:设置底部导航栏中第一个属性的页面路径/图片/选中时候图片/文字</p><p>③:设置第二个属性的页面路径/图片/选中时候图片/文字</p><p>④:设置第三个属性的页面路径/图片/选中时候图片/文字</p><p><span style="color:red">注:底部导航栏最少要有2个!</span></p><p><img src="%E9%A1%B5%E5%B0%BE1.png"></p><h5 id="三、主页面轮播图"><a href="#三、主页面轮播图" class="headerlink" title="三、主页面轮播图"></a>三、主页面轮播图</h5><h6 id="1-新建主页面"><a href="#1-新建主页面" class="headerlink" title="1):新建主页面"></a>1):新建主页面</h6><p><img src="%E6%96%B0%E5%BB%BA%E4%B8%BB%E9%A1%B5%E9%9D%A2.png"></p><p>①:页面的js文件,是页面的生命周期,主要是用来请求api数据/处理数据/执行按钮事件等</p><p>②:json文件是用来处理json数据</p><p>③:.wxml是用来显示页面内容,绑定/显示数据</p><p>④:wxss页面样式文件</p><h6 id="2-轮播图样式"><a href="#2-轮播图样式" class="headerlink" title="2):轮播图样式"></a>2):轮播图样式</h6><p><img src="%E8%BD%AE%E6%92%AD%E5%9B%BE.png"></p><h6 id="3-在js文件中设置图片路径"><a href="#3-在js文件中设置图片路径" class="headerlink" title="3):在js文件中设置图片路径"></a>3):在js文件中设置图片路径</h6><p><img src="%E8%BD%AE%E6%92%AD%E5%9B%BE1.png"></p><h6 id="4-wxml页面样式布局"><a href="#4-wxml页面样式布局" class="headerlink" title="4):wxml页面样式布局"></a>4):wxml页面样式布局</h6><p><img src="%E8%BD%AE%E6%92%AD%E5%9B%BE2.png"></p><h5 id="四、调用豆瓣api接口显示数据"><a href="#四、调用豆瓣api接口显示数据" class="headerlink" title="四、调用豆瓣api接口显示数据"></a>四、调用豆瓣api接口显示数据</h5><p><img src="%E8%AF%B7%E6%B1%82%E6%95%B0%E6%8D%AE.png"></p><p>①:发起数据请求</p><p>②:设置请求的URL地址</p><p>③:设置请求的数据格式</p><p>④:得到请求的数据</p><p>⑤:把请求过来的数据保存到数组中,并且发送到前台页面</p><p><span style="color:red">注:初始请求的代码必须放在onload中,请求的参数不能少!</span></p><h6 id="1-得到请求结果"><a href="#1-得到请求结果" class="headerlink" title="1):得到请求结果"></a>1):得到请求结果</h6><p><img src="%E8%AF%B7%E6%B1%82%E6%95%B0%E6%8D%AE1.png"></p><p>①:得到的数据是一个对象集合,里面存放着每条数据,页面上就是显示这些数据!</p><h5 id="五、页面显示豆瓣电影数据"><a href="#五、页面显示豆瓣电影数据" class="headerlink" title="五、页面显示豆瓣电影数据"></a>五、页面显示豆瓣电影数据</h5><h6 id="1-显示电影的图片"><a href="#1-显示电影的图片" class="headerlink" title="1):显示电影的图片"></a>1):显示电影的图片</h6><p><img src="%E6%98%BE%E7%A4%BA%E7%94%B5%E5%BD%B1%E5%9B%BE%E7%89%87.png"></p><h6 id="2-设置图片的样式"><a href="#2-设置图片的样式" class="headerlink" title="2):设置图片的样式"></a>2):设置图片的样式</h6><p><img src="%E6%98%BE%E7%A4%BA%E7%94%B5%E5%BD%B1%E5%9B%BE%E7%89%871.png"></p><p><span style="color:red">3):页面显示如下所示</span></p><p><img src="%E6%98%BE%E7%A4%BA%E5%9B%BE%E7%89%872.png"></p><p><span style="color:red">注：一定要覆盖project.config.json文件</span></p><h6 id="4-显示右侧电影信息"><a href="#4-显示右侧电影信息" class="headerlink" title="4):显示右侧电影信息"></a>4):显示右侧电影信息</h6><p><img src="%E6%98%BE%E7%A4%BA%E7%94%B5%E5%BD%B1%E4%BF%A1%E6%81%AF.png"></p><p>①:页面样式代码</p><p><img src="%E6%98%BE%E7%A4%BA%E7%94%B5%E5%BD%B1%E4%BF%A1%E6%81%AF1.png"></p><p>②:最终结果如下:</p><p><img src="%E6%98%BE%E7%A4%BA%E7%94%B5%E5%BD%B1%E4%BF%A1%E6%81%AF2.png"></p><h5 id="六、电影推荐功能"><a href="#六、电影推荐功能" class="headerlink" title="六、电影推荐功能"></a>六、电影推荐功能</h5><h6 id="1-数据请求页面"><a href="#1-数据请求页面" class="headerlink" title="1):数据请求页面"></a>1):数据请求页面</h6><p><img src="%E7%94%B5%E5%BD%B1%E6%8E%A8%E8%8D%90.png"></p><pre class="line-numbers language-none"><code class="language-none">url: &#39;https:&#x2F;&#x2F;movie.douban.com&#x2F;j&#x2F;search_subjects?type&#x3D;movie&amp;tag&#x3D;北美&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><span style="color:red">注:默认显示北美电影数据,如果想看其他地区的,可以修改地区!</span></p><h6 id="2-页面内容"><a href="#2-页面内容" class="headerlink" title="2):页面内容"></a>2):页面内容</h6><p><img src="%E7%94%B5%E5%BD%B1%E6%8E%A8%E8%8D%902.png"></p><h6 id="3-页面样式"><a href="#3-页面样式" class="headerlink" title="3):页面样式"></a>3):页面样式</h6><p><img src="%E7%94%B5%E5%BD%B1%E6%9F%A5%E8%AF%A21.png"></p><h6 id="4-页面显示结果"><a href="#4-页面显示结果" class="headerlink" title="4):页面显示结果"></a>4):页面显示结果</h6><p><img src="%E7%94%B5%E5%BD%B1%E6%8E%A8%E8%8D%903.png"></p><h6 id="5）：显示下拉列表"><a href="#5）：显示下拉列表" class="headerlink" title="5）：显示下拉列表"></a>5）：显示下拉列表</h6><p>​    ①:设置下拉列表样式</p><p>​    <img src="%E4%B8%8B%E6%8B%89%E5%88%97%E8%A1%A8%E6%A0%B7%E5%BC%8F.png"></p><p>②:设置下拉列表样式</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;* 输入框内字体大小 *&#x2F;.select_text&#123;  font-size: 30rpx;&#125;&#x2F;* 下拉列表图片 *&#x2F;.select_img&#123;  width: 40rpx;  height: 40rpx;  display: block;  transition:transform 0.3s;  margin-left: 260px;&#125;&#x2F;* 搜索框的样式 *&#x2F;.select_box&#123;  background: #fff;  width: 100%;  &#x2F;* 相对定位 *&#x2F;  position: relative;&#125;.select&#123;  width: 100%;  height: 70rpx;  border:1px solid #efefef;  border-radius: 8rpx;  display: flex;  align-items: center;  padding: 0 20rpx;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>显示默认数据：</p><p><img src="%E8%AE%BE%E7%BD%AE%E9%BB%98%E8%AE%A4%E6%95%B0%E6%8D%AE.png"></p><p>③:显示结果</p><p><img src="%E4%B8%8B%E6%9D%A5%E4%BA%86%E5%88%97%E7%BB%93%E6%9E%9C.png"></p><p>④:点击下拉图片触发事件</p><p><img src="%E4%B8%8B%E6%8B%89%E4%BA%8B%E4%BB%B6.png"></p><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F;点击下拉图片，触发事件selectTap()&#123;  wx.showToast(&#123;    title: &#39;成功&#39;   &#125;)&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>显示结果：</p><p><img src="%E5%BC%B9%E5%87%BA%E6%8F%90%E7%A4%BA.png"></p><p>触发下拉列表：、</p><pre class="line-numbers language-none"><code class="language-none">selectTap()&#123;  this.setData(&#123;    show: !this.data.show  &#125;);&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> show:false,//控制下拉列表的显示隐藏，false隐藏、true显示</p><p>⑤:下拉列表的内容</p><p><img src="%E4%B8%8B%E6%8B%89%E5%88%97%E8%A1%A8%E6%95%B0%E6%8D%AE.png"></p><p>⑥：下拉列表内容js代码</p><p><img src="%E4%B8%8B%E6%8B%89%E5%88%97%E8%A1%A8%E5%86%85%E5%AE%B9.png"></p><p>⑦：下拉列表样式</p><pre class="line-numbers language-none"><code class="language-none">.option_box&#123;  position: absolute;  top: 70rpx;  width: 100%;  border:1px solid #efefef;  box-sizing: border-box;  overflow-y: auto;  background: #fff;  &#x2F;* 点击下拉列表显示动画特效 *&#x2F;  transition: height 0.3s;&#125;.option&#123;  display: block;  line-height: 40rpx;  font-size: 30rpx;  border-bottom: 1px solid #efefef;  padding: 10rpx;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>⑧：具体结果</p><p><img src="%E4%B8%8B%E6%8B%89%E5%88%97%E8%A1%A8%E7%9A%84%E7%BB%93%E6%9E%9C1.png"></p><p>⑨：选中下拉列表得到结果</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F; 点击下拉列表optionTap(e)&#123;  let Index&#x3D;e.currentTarget.dataset.index;&#x2F;&#x2F;获取点击的下拉列表的下标  this.setData(&#123;    index:Index,    show:!this.data.show  &#125;);  if(Index&#x3D;&#x3D;1)  &#123;    &#x2F;&#x2F;所有调用电影的数据，必须写在这里    var page&#x3D;this;    &#x2F;&#x2F; wx.request:请求豆瓣电影数据    wx.request(&#123;      url: &#39;https:&#x2F;&#x2F;movie.douban.com&#x2F;j&#x2F;search_subjects?type&#x3D;movie&amp;tag&#x3D;台湾&#39;,      header:&#123;        &#39;Content-Type&#39;:&#39;json&#39;      &#125;,      success:function(res)&#123;        var result&#x3D;res.data.subjects;        console.log(result)        page.setData(&#123;movies:result&#125;);      &#125;    &#125;)  &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="七、点击显示电影详情页面"><a href="#七、点击显示电影详情页面" class="headerlink" title="七、点击显示电影详情页面"></a>七、点击显示电影详情页面</h5><h6 id="1-在app-js之中设置跳转"><a href="#1-在app-js之中设置跳转" class="headerlink" title="1):在app.js之中设置跳转"></a>1):在app.js之中设置跳转</h6><p><img src="%E7%94%B5%E5%BD%B1%E8%AF%A6%E6%83%852.png"></p><h6 id="2-在recommand-js页面中添加detail事件"><a href="#2-在recommand-js页面中添加detail事件" class="headerlink" title="2):在recommand.js页面中添加detail事件"></a>2):在recommand.js页面中添加detail事件</h6><p><img src="%E7%94%B5%E5%BD%B1%E8%AF%A6%E6%83%853.png"></p><h6 id="3-点击任意一部电影进行跳转"><a href="#3-点击任意一部电影进行跳转" class="headerlink" title="3):点击任意一部电影进行跳转"></a>3):点击任意一部电影进行跳转</h6><p><img src="%E7%94%B5%E5%BD%B1%E8%AF%A6%E6%83%85%E9%A1%B5%E9%9D%A23.png"></p><h5 id="八、显示电影详情数据"><a href="#八、显示电影详情数据" class="headerlink" title="八、显示电影详情数据"></a>八、显示电影详情数据</h5><h6 id="1-根据ID查询电影详情数据"><a href="#1-根据ID查询电影详情数据" class="headerlink" title="1):根据ID查询电影详情数据"></a>1):根据ID查询电影详情数据</h6><p><img src="%E7%94%B5%E5%BD%B1%E8%AF%A6%E6%83%854.png"></p><h6 id="2-显示详情数据"><a href="#2-显示详情数据" class="headerlink" title="2):显示详情数据"></a>2):显示详情数据</h6><p><img src="%E7%94%B5%E5%BD%B1%E8%AF%A6%E6%83%855.png"></p><h6 id="3-页面代码"><a href="#3-页面代码" class="headerlink" title="3):页面代码"></a>3):页面代码</h6><p><img src="%E7%94%B5%E5%BD%B1%E8%AF%A6%E6%83%856.png"></p><h6 id="4-样式代码"><a href="#4-样式代码" class="headerlink" title="4):样式代码"></a>4):样式代码</h6><p><img src="%E8%AF%A6%E6%83%85%E9%A1%B5%E9%9D%A2%E6%A0%B7%E5%BC%8F.png"></p><h6 id="5-显示结果"><a href="#5-显示结果" class="headerlink" title="5):显示结果"></a>5):显示结果</h6><p><img src="%E7%94%B5%E5%BD%B1%E8%AF%A6%E6%83%85%E9%A1%B5%E9%9D%A2%E7%BB%93%E6%9E%9C.png"></p><h5 id="九、电影查询"><a href="#九、电影查询" class="headerlink" title="九、电影查询"></a>九、电影查询</h5><h6 id="1-页面内容"><a href="#1-页面内容" class="headerlink" title="1):页面内容"></a>1):页面内容</h6><p><img src="%E7%94%B5%E5%BD%B1%E6%9F%A5%E8%AF%A23.png"></p><h6 id="2-页面样式"><a href="#2-页面样式" class="headerlink" title="2):页面样式"></a>2):页面样式</h6><p><img src="%E7%94%B5%E5%BD%B1%E6%9F%A5%E8%AF%A24.png"></p><h6 id="3-显示结果"><a href="#3-显示结果" class="headerlink" title="3):显示结果"></a>3):显示结果</h6><p><img src="%E7%94%B5%E5%BD%B1%E6%9F%A5%E8%AF%A25.png"></p><h5 id="十、显示搜索结果"><a href="#十、显示搜索结果" class="headerlink" title="十、显示搜索结果"></a>十、显示搜索结果</h5><h6 id="1-页面内容-1"><a href="#1-页面内容-1" class="headerlink" title="1):页面内容"></a>1):页面内容</h6><p><img src="%E6%98%BE%E7%A4%BA%E6%90%9C%E7%B4%A2%E7%BB%93%E6%9E%9C.png"></p><h6 id="2-页面样式-1"><a href="#2-页面样式-1" class="headerlink" title="2):页面样式"></a>2):页面样式</h6><pre class="line-numbers language-none"><code class="language-none">.inputShow&#123;    padding-left: 35px;    color: white;    font-size: 12px;  &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="3-显示搜索结果"><a href="#3-显示搜索结果" class="headerlink" title="3):显示搜索结果"></a>3):显示搜索结果</h6><p><img src="%E6%98%BE%E7%A4%BA%E6%90%9C%E7%B4%A0%E7%BB%93%E6%9E%9C1.png"></p><h5 id="十一、显示搜索的豆瓣电影"><a href="#十一、显示搜索的豆瓣电影" class="headerlink" title="十一、显示搜索的豆瓣电影"></a>十一、显示搜索的豆瓣电影</h5><h6 id="1-页面js代码"><a href="#1-页面js代码" class="headerlink" title="1):页面js代码"></a>1):页面js代码</h6><p><img src="%E7%94%B5%E5%BD%B1%E6%9F%A5%E8%AF%A26.png"></p><p><span style="color:red">注:其中的token代表是身份验证ID,每隔1-2天需要更换一次,防止重复提交</span></p><p><span style="color:red">token的来源网站:<a href="https://docs.apipost.cn/view/d0d08da057f52c32#2534700">https://docs.apipost.cn/view/d0d08da057f52c32#2534700</a></span></p><h6 id="2-显示json数据"><a href="#2-显示json数据" class="headerlink" title="2):显示json数据"></a>2):显示json数据</h6><p><img src="%E7%94%B5%E5%BD%B1%E6%9F%A5%E8%AF%A27.png"></p><h6 id="3-页面内容显示"><a href="#3-页面内容显示" class="headerlink" title="3):页面内容显示"></a>3):页面内容显示</h6><p><img src="%E7%94%B5%E5%BD%B1%E6%9F%A5%E8%AF%A28.png"></p><h6 id="4-页面样式"><a href="#4-页面样式" class="headerlink" title="4):页面样式"></a>4):页面样式</h6><pre class="line-numbers language-none"><code class="language-none">&#x2F;* 1px&#x3D;0.07毫米 *&#x2F;&#x2F;* &#x2F;&#x2F;movie-info:图片和电影信息之间的间距 *&#x2F;.movie-info&#123;  color: #FFFFFF;  font-size: 12px;  padding-top: 20px;  line-height: 20px;  margin-left: 30px;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">.SearchButton&#123;  background-color: #DD5E0E;  color: white;  font-size: 17px;  height: 54rpx;  line-height: 54rpx;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="5-页面显示结果"><a href="#5-页面显示结果" class="headerlink" title="5):页面显示结果"></a>5):页面显示结果</h6><p><img src="%E7%94%B5%E5%BD%B1%E6%9F%A5%E8%AF%A29.png"></p>]]></content>
      
      
      <categories>
          
          <category> 微信小程序开发 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Java Web服务器的介绍</title>
      <link href="year/03/07/j_javaweb_fu_wu_qi_jie_shao/"/>
      <url>year/03/07/j_javaweb_fu_wu_qi_jie_shao/</url>
      
        <content type="html"><![CDATA[<p><strong>一、Java Web服务器的介绍</strong></p><p>Web服务器：是指能够为发出请求的浏览器提供文档的程序。服务器是一</p><p>种被动程序，只有浏览器发出请求的时候才会响应。</p><p>主流的Web服务器有：</p><p>1.WebLogic：Bea公司开发的一个收费的大型服务器软件，后被Oracle收购，支持Java EE 所有规范。</p><p>2.Tomcat：由Apache、Sun和其他一些公司及个人共同开发而成。该服务器支持全部 JSP以及Servlet规范。因为Tomcat技术先进、性能稳定，而且开源免费，因而深受Java爱好者的喜爱并得到了部分软件开发商的认可，成为目前比较流行的Web服务器。学习JavaWeb开发一般都使用Tomcat服务器。</p><p>3.JBoss：一个开源的支持Java  EE规范的应用服务器，但是其核心服务不包含Servlet和 JSP,所以一般情况下，它会与Tomcat等服务器绑定使用</p><p><strong>二、Tomcat的下载与使用</strong></p><p>下载地址为：<a href="http://tomcat.apache.org/download-80.cgi">http://tomcat.apache.org/download-80.cgi</a></p><p>可根据自己的电脑选择软件版本。</p><p>打开下载好的Tomcat,其目录为</p><p><img src="1.png"></p><p>接下来我们打开bin目录，找到startup.bat,双击打开它，此时服务器已启动</p><p><img src="2.png"></p><p>接下来我们访问浏览器，我们输入localhost:8080回车，我们可以看到如图，</p><p><img src="3.png"></p><p>此时就说明Tomcat服务已经开启成功了</p><p>想要关闭它就在bin目录下找到shutdown.bat,双击一下就可关闭Tomcat服务器。</p><p><strong>三、Tomcat的目录结构：</strong></p><p>​         bin   脚本目录(启动和停止：(startup.bat, shutdown.bat)</p><p>​         conf  配置目录(server.xml、web.xml)</p><p>​         lib   存放jar包</p><p>​         logs    日志文件存放的位置(程序运行时操作系统)</p><p>​         temp   临时文件</p><p>​         webapps  用于存放web项目的</p><p>​         work       Tomcat处理 jsp 页面工作目录</p><p><strong>四、Tomcat启动后出现乱码的解决方案：</strong></p><p>​        1.打开Tomcat目录的conf文件夹，然后打开logging.properties文件，修改如下图</p><p>​           <img src="4.png"></p><p>​         然后重新启动Tomcat乱码就解决了</p><p><strong>五、Tomcat服务器使用浏览器打开webapps下的项目txt文件乱码问题：</strong></p><ol><li><p>Tomcat文件设置编码格式为utf-8，如果不行就执行下面一步</p></li><li><p>将txt文件utf-8格式另存为UTF-8-BOM格式乱码解决。</p><p>更多知识关注本站微信公众号”IT互联网科技知识分享”</p></li></ol><p><img src="1.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> Tomcat </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java Web </tag>
            
            <tag> Tomcat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java学习路线</title>
      <link href="year/01/28/i_java_xue_xi_xian_lu/"/>
      <url>year/01/28/i_java_xue_xi_xian_lu/</url>
      
        <content type="html"><![CDATA[<p> <strong>阶段一 （夯实基础）</strong> </p><p> <strong>Java基础语法</strong> </p><pre class="line-numbers language-java" data-language="java"><code class="language-java">学习目标:    1.熟悉Java等基本概念    2.掌握Eclipse&#x2F;IDEA集成开发工具的安装、配置和应用    3.熟悉Java基本语法、基本类型、运算符和表达式    4.掌握分支、循环逻辑语句、数组等知识的应用知识点列表:    JDK、JRE、JVM基本概念    Java环境搭建和配置    安装和使用Eclipse&#x2F;IDEA开发环境    Java基本数据类型    变量,运算符,表达式    分支语句,循环语句、    数组，数组应用。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> <strong>Java面向对象编程</strong> </p><pre class="line-numbers language-java" data-language="java"><code class="language-java">学习目标:    1.理解面向对象思想和概念    2.学会面向对象分析方法    3.掌握类、对象、继承、多态的使用    4.熟悉重写、重载、抽象类、内部类以及设计模式的应用知识点列表:    类、对象、属性、方法、构造器    封装、继承、多态    重写、重载    访问权限控制符    this和super、static、final    抽象类和接口,内部类    各种设计模式    Java设计原则<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> <strong>Java核心类库</strong> </p><pre class="line-numbers language-java" data-language="java"><code class="language-java">学习目标:    1.掌握Java核心类库的应用，例如字符串、日期、集合的处理    2.掌握异常处理、IO流对文件读写、多线程应用、网络编程实现计算机之间通讯    3.熟悉Java泛型和反射技术的应用知识点列表:    Java核心类    Java字符串、日期处理    包装类、集合、数据结构    异常和异常处理    Java IO、NIO、多线程编程    线程同步机制、并发包    JAVA网络编程    Java泛型和注解    Java反射机制<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> <strong>算法与数据结构</strong> </p><pre class="line-numbers language-java" data-language="java"><code class="language-java">学习目标:    掌握常用算法和数据结构知识点列表:    常用排序算法    常用查找算法    常用数据结构    一阶段刷题( 20道大厂面试题 )<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> <strong>数据库</strong> </p><pre class="line-numbers language-java" data-language="java"><code class="language-java">学习目标:    1. 熟悉MySQL数据库的安装和使用    2. 精通SQL语句的编写和优化    3. 掌握数据库设计原则和方法    4. 了解视图、序列、索引概念和应用    5. 创建用户、给用户授权操作知识点列表:    精通mysql<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> <strong>JDBC技术</strong> </p><pre class="line-numbers language-java" data-language="java"><code class="language-java">学习目标:    1. 熟悉JDBC API应用，掌握Java对数据库的访问方法    2. 掌握如何实现对数据库的增删改查    3. 如何使用安全的数据库访问方式    4. 如何提升数据库操作性能，学会DAO模式的封装知识点列表:    DBC 核心API    CRUD操作    Statement应用    PreparedStatement应用    预防SQL注入攻击    事务安全控制、高并发控制    批处理技术    dbcp、druid各种连接池的使用    DAO封装模式<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> <strong>XML与JSON</strong> </p><pre class="line-numbers language-java" data-language="java"><code class="language-java">学习目标:    1. 熟悉XML文件的基本语法和规范    2. 了解SAX和DOM的区别    3. 掌握Dom4j工具的使用和XPATH的快速解析技术    4. 掌握JSON语法与解析知识点列表:    XML基本语法    DTD和Schema    XML解析SAX和DOM    Java核心类Dom4j应用    XPATH技术应用    JSON语法    JSON解析库<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> <strong>H5前端</strong> </p><pre class="line-numbers language-java" data-language="java"><code class="language-java">学习目标:    1. 熟悉HTML5语法和标记    2. 能熟练设计体验度高的HTML页面    3. 能实现对特殊功能的界面设计，例如画图表、视频音频播放、地理定位等    4. 熟悉CSS3语法和属性    5. 能熟悉对HTML内容进行渲染，例如文字样式、列表和表格样式、动画、元素定位和布局    6. 熟悉JavaScript基本语法    7. 掌握对HTML元素的处理、浏览器窗体的处理、事件处理等    8. 熟练实现对HTML页面的表单校验和页面特效的处理 HTML5应用程序缓存，本地存储技术localStorage和 sessionStorage的使用    知识点列表:    HTML5基本文档结构    标题、图片标记    链接、列表、表格标记    表单标记    CSS基础语法    CSS文本、列表、表格样式    CSS盒子模型    CSS浮动布局、定位    CSS弹性盒子    JavaScript语言基础    JavaScript闭包和自执行    JavaScript DOM编程    JavaScript事件模型    Window对象模型    HTML5画布    Web存储、音频&#x2F;视频、拖放    本地存储    移动端适配    CSS3边框、背景    CSS3动画、特效    C33文字特效、盒子模型    JDBC jQuery选择器、事件    jQuery文档处理、特效    Bootstrap按钮、表格、列表等样式处理    Bootstrap布局、弹框、特效样式处理<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> <strong>JavaEE基础</strong> </p><pre class="line-numbers language-javaEE" data-language="javaEE"><code class="language-javaEE">学习目标:    1、掌握Tomcat的安装和使用    2、熟悉Servlet概念和开发规范    3、掌握session和cookie状态管理技术    4、掌握Filter和Listener组件的使用    5、掌握Servlet实现验证码和文件上传功能    6.熟悉JSP基本语法和标记    7.掌握JSP中9大内置对象应用    8.能熟练使用JSTL和EL显示数据掌握4.JSP+Servlet+JavaBean技术构建的MVC应用    9.熟悉Ajax作用和原理    10.掌握XMLHttpRequest对象的使用    11.熟悉JSON语法并熟练与Ajax结合运用    12.熟练掌握jQuery中$.ajax、$.load、$.post、$.get等函数的使用    13.掌握ajax表单提交和文件上传功能知识点列表:    HTTP协议    Tomcat配置和部署    Servlet生命周期    Servlet编写规范和配置    GET请求与POST请求的区别    接收用户请求的参数    中文接收乱码处理    ServletContext    ServletConfig    重定向与转发    Servlet+DAO工厂模式应用    Cookie与Session    Servlet实现文件上传功能    JSP 基本语法    JSP三大指令    JSP标记应用    JSP九内置对象    JSP四域对象    JSP异常处理    JSTL和 EL表达式    JSP新特性    Filter    Listener    MVC设计模式    Ajax作用和原理    XMLHttpRequest对象    Ajax局部刷新、异步处理    jQuery与Ajax技术    Ajax异步提交表单    Ajax异步上传文件    $.ajax函数的使用    $.get函数的使用    $.post函数的使用    $.load函数的使用    业务分层架构    前后端分离架构<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> <strong>操作系统训练</strong> </p><pre class="line-numbers language-Linux" data-language="Linux"><code class="language-Linux">学习目标:    熟练掌握linux系统    知识点列表:    虚拟机安装与使用    centos操作系统安装    乌班图操作系统安装    常用命令    linux环境搭建    linux项目部署上线<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>  <strong>阶段二 （前沿框架）</strong> </p><p> <strong>Maven</strong> </p><pre class="line-numbers language-java" data-language="java"><code class="language-java">学习目标:    1.  熟练使用maven    知识点列表:    Maven 环境配置    Maven POM    Maven 构建生命周期    Maven 构建配置文件    Maven 仓库    Maven 插件    Maven 构建 Java 项目    Maven 构建 &amp; 项目测试    Maven 引入外部依赖    Maven 项目模板    Maven 快照(SNAPSHOT)    Maven 自动化构建    Maven 依赖管理    Maven 自动化部署    Maven IDEA<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> <strong>NoSql</strong> </p><pre class="line-numbers language-java" data-language="java"><code class="language-java">学习目标:    了解NoSQL概念    熟练掌握Redis的安装和命令    掌握Java对Redis的操作    了解Redis的事务、备份    了解Redis的订阅\发布式消息系统的使用    熟练掌握如何使用Redis做缓存    了解MongoDB概念和安装    掌握MongoDB的结构和命令    掌握Java对MongoDB操作    掌握MongoDB CRUD操作    掌握排序、索引、备份和恢复等    了解对MongoDB的管理和维护<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java">知识点列表:    Redis概念安装    Redis命令操作    Java Redis API    Redis 字符串操作命令    Redis 哈希操作命令    Redis列表操作命令    Redis集合操作命令    Redis 有序集合操作命令    Redis事务处理、备份和恢复    Redis消息发布系统    Redis集群搭建    MongoDB概念和安装    MongoDB命令操作    Java MongoDB API    MongoDB排序、索引    MongoDB备份恢复    MongoDB集群搭建<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>  <strong>Java框架基础（Spring）</strong> </p><pre class="line-numbers language-java" data-language="java"><code class="language-java">学习目标:    熟悉Spring框架的模块结构    掌握SpringIOC管理组件    掌握如何对组件对象参数注入    掌握JdbcTemplate对象的使用    掌握Spring声明式事务处理    熟练掌握SpringMVC流程    掌握SpringMVC拦截器、异常处理、文件上传等功能的应用    熟悉Spring中AOP概念及应用    掌握Spring国际化概念和应用    掌握SpringMVC中如何使用RESTFUL    知识点列表:    Spring IOC概念    ApplicationContext \ FactoryBean    IOC对象创建和生命周期    基本类型参数注入    集合类型参数注入    对象高级装配    组件扫描特性    Spring JdbcTemplate应用    Spring 事务及安全管理    Spring MVC框架原理    Spring MVC基本流程    Spring MVC拦截器    Spring MVC异常处理    Spring MVC文件上传    Restful服务架构    SpringAOP原理    AspectJ注解配置    Spring+JPA数据访问<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> <strong>Java框架基础（MyBatis）</strong> </p><pre class="line-numbers language-java" data-language="java"><code class="language-java">学习目标:    掌握MyBatis开发环境的搭建    了解MyBatis框架结构和原理    掌握DQL&#x2F;DML语句的定义    掌握Mapper映射器规则和应用    掌握MyBatis分页原理和优化    掌握MyBatis和PageHelper集成应用    了解动态SQL和多表关联映射    掌握Spring和MyBatis的整合应用知识点列表:    MyBatis体系结构    SqlSession的使用    MyBatis映射基础    DQL 映射，DML映射    resultType&#x2F;resultMap结果映射    Mapper映射器    MyBatis分页原理和优化    高级动态SQL映射    @Many关联映射    @One关联映射    MyBatis常见问题    JdbcType属性作用    Spring和MyBatis整合Mapper    Spring和MyBatis整合SqlSessionTemplate<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> <strong>Java框架进阶（SSM整合）</strong> </p><pre class="line-numbers language-java" data-language="java"><code class="language-java">学习目标:    1.掌握SSM基本使用    2.熟悉SSM应用常见问题和解决方法    4.熟悉SSM流程设计和实现    5.掌握SSM事务控制    6.掌握Restful架构运用<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> <strong>Java框架高级 （微服务与分布式）</strong> </p><pre class="line-numbers language-java" data-language="java"><code class="language-java">学习目标：    掌握Maven安装和使用    了解SpringBoot和SpringCloud的关系和作用    掌握SpringBoot基础原理    掌握SpringBoot开发过程    掌握SpringBoot对JDBC支持    掌握SpringBoot对MyBatis集成应用    熟悉SpringBoot MVC开发    掌握SpringBoot集成Servlet、过滤器、拦截器    熟悉SpringCloud如何发布服务、查找、调用    掌握SpringCloud断路器、网关技术的使用    了解SpringCloud服务监控技术和使用    知识点列表：    SpringBoot开发环境搭建    SpringBoot启动加载原理    SpringBoot自动配置原理    SpringBoot参数注入    SpringBoot数据库连接    SpringBoot多数据源    SpringBoot动态数据源    SpringBoot整合JDBC技术    SpringBoot整合MyBatis技术    SpringBoot整合JPA技术    SpringBoot MVC环境搭建    SpringBoot MVC异常处理    SpringBoot MVC拦截器    SpringBoot MVC开发Restful    SpringBoot MVC开发Thymeleaf    SpringBoot MVC 开发JSP    SpringBoot 任务调度    SpringBoot 集成Servlet、过滤器等    SpringBoot SSM综合开发运用    SpringCloud概念    SpringCloud Eureka服务中心搭建    SpringCloud Eureka 服务注册    SpringCloud RestTemplate&#x2F;Feign 服务调用    SpringCloud Ribbon集群负载和策略    SpringCloud Hystrix断路器概念和使用    SpringCloud actuator健康监控    SpringCloud Hystrix监控    SpringCloud Zuul网关概念和使用    SpringCloud Config统一配置    SpringCloud Bus配置刷新<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> <strong>Java容器化开发 (Docker 与 K8s)</strong> </p><pre class="line-numbers language-java" data-language="java"><code class="language-java">学习目标:    1. 熟练掌握容器化开发和部署技术知识点列表:      容器与虚拟机比较     Docker环境安装     Docker命令使用     Docker容器化开发和部署技术     docker组件     docker安装     docker启动与停止     镜像相关命令     创建启动与查看容器     容器停止与启动和目录挂载     目录挂载查看IP与删除容器     mysql部署     tomcat部署     nginx部署     redis部署     迁移与备份     Dockerfile常用命令     Dockerfile构建jdk1.8镜像     Docker私有仓库的搭建与配置     Docker私有仓库镜像上传     K8s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> <strong>架构设计与解决方案(框架补充)</strong> </p><pre class="line-numbers language-java" data-language="java"><code class="language-java">学习目标:    具备架构设计能力    掌握常见解决方案知识点列表:    SSO单点登录    分布式服务和集群搭建    RabbitMQ&#x2F;ActiveMQ&#x2F;Kafka消息服务解决方案、    Elasticsearch&#x2F;Lucene搜索服务解决方案    Tomcat&#x2F;Ngnix负载均衡解决方案    Shiro安全服务解决方案  Spring整合Shiro    Dubbo&#x2F;zookeeper分布式解决方案、    Cache&#x2F;Ehcache&#x2F;Memcache&#x2F;Redis缓存解决方案    FastDFS分布式文件处理方案    Netty     高并发处理方案    系统安全服务解决方案    JVM调优处理方案<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> <strong>项目实战训练</strong> </p><pre class="line-numbers language-java" data-language="java"><code class="language-java">学习目标:    能独立开发具备交付能力的项目知识点列表:    项目流程训练 ( 从需求阶段 → 项目交付 → 项目上线 → 项目升级维护 )<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p> <strong>阶段三（前沿生态与团队协同）</strong> </p><p> <strong>前沿生态</strong> </p><pre class="line-numbers language-java" data-language="java"><code class="language-java">学习目标:    熟练运用前沿生态    知识点列表:    图像识别    语音识别    阿里云&#x2F;百度云&#x2F;华为云等云服务器生态    微信生态    支付宝生态    等其他常用组件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> <strong>协同项目实战</strong> </p><pre class="line-numbers language-java" data-language="java"><code class="language-java">学习目标:    具备参与实施团队协同开发的能力    知识点列表:    项目协同开发训练    项目实战规范训练    项目流程训练 ( 从需求阶段 → 项目交付 → 项目上线 → 项目升级维护 )<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>免责声明：本线路来源于新职课开课吧学习线路，如若侵权请联系作者删除。</p><p>更多知识关注微信公众号”IT互联网科技知识分享”</p><p><img src="1.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> JavaEE </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Spring简介</title>
      <link href="year/11/30/h_spring_jian_jie/"/>
      <url>year/11/30/h_spring_jian_jie/</url>
      
        <content type="html"><![CDATA[<h3 id="Spring是一个轻量级Java-开发框架，最早由Rod-Johnson创建，目的是为了解决企业级应用开发的业务逻辑层和其他各层的耦合问题。它是一个分层的JavaSE-EEfull-stack-一站式-轻量级开源框架，为开发Java应用程序提供全面的基础架构支持。Spring负责基础架构，因此Java开发者可以专注于应用程序的开发。"><a href="#Spring是一个轻量级Java-开发框架，最早由Rod-Johnson创建，目的是为了解决企业级应用开发的业务逻辑层和其他各层的耦合问题。它是一个分层的JavaSE-EEfull-stack-一站式-轻量级开源框架，为开发Java应用程序提供全面的基础架构支持。Spring负责基础架构，因此Java开发者可以专注于应用程序的开发。" class="headerlink" title="Spring是一个轻量级Java 开发框架，最早由Rod Johnson创建，目的是为了解决企业级应用开发的业务逻辑层和其他各层的耦合问题。它是一个分层的JavaSE/EEfull-stack(一站式) 轻量级开源框架，为开发Java应用程序提供全面的基础架构支持。Spring负责基础架构，因此Java开发者可以专注于应用程序的开发。"></a>Spring是一个轻量级Java 开发框架，最早由Rod Johnson创建，目的是为了解决企业级应用开发的业务逻辑层和其他各层的耦合问题。它是一个分层的JavaSE/EEfull-stack(一站式) 轻量级开源框架，为开发Java应用程序提供全面的基础架构支持。Spring负责基础架构，因此Java开发者可以专注于应用程序的开发。</h3><h2 id="Spring的体系结构"><a href="#Spring的体系结构" class="headerlink" title="Spring的体系结构"></a>Spring的体系结构</h2><p><img src="%E5%9B%BE%E7%89%871.png"></p><h2 id="1．核心容器"><a href="#1．核心容器" class="headerlink" title="1．核心容器"></a>1．核心容器</h2><p>Spring的核心容器是其他模块建立的基础，由Spring-core、Spring-beans、Spring-context、Spring-Context-support和Spring-expression（Spring表达式语言）等模块组成。<br>    Spring-core模块：提供了框架的基本组成部分，包括控制反转（Inversion of Control，IoC）和依赖注入（Dependency Injection，DI）功能。<br>    Spring-beans模块：提供了BeanFactory，是工厂模式的一个经典实现，Spring将管理对象称为Bean。<br>    Spring-context模块：建立在Core和Beans模块基础上，提供一个框架式的对象访问方式，是访问定义和配置的任何对象的媒介。ApplicationContext接口是Context模块的焦点。<br>Spring-context-support模块：支持整合第三方库到Spring应用程序上下文，特别是用于高速缓存（EhCache，JCache）和任务调度（CommonJ，Quartz）的支持。<br>    Spring-expression模块：提供了强大的表达式语言去支持运行时查询和操作对象图。</p><h2 id="2．AOP和Instrumentation"><a href="#2．AOP和Instrumentation" class="headerlink" title="2．AOP和Instrumentation"></a>2．AOP和Instrumentation</h2><p>Spring-aop模块：提供了一个符合AOP要求的面向切面的编程实现，允许定义方法拦截器和切入点，将代码按照功能进行分离，以便干净地解耦。<br>    Spring-aspects模块：提供了与AspectJ的集成功能，AspectJ是一个功能强大且成熟的AOP框架。<br>    Spring-instrument模块：提供了类植入（instrumentation）支持和类加载器的实现，可以在特定的应用服务器中使用。</p><h2 id="3．消息"><a href="#3．消息" class="headerlink" title="3．消息"></a>3．消息</h2><p>Spring 4.0以后新增了消息（Spring-messaging）模块，该模块提供了对消息传递体系结构和协议的支持。</p><h2 id="4．数据访问-集成"><a href="#4．数据访问-集成" class="headerlink" title="4．数据访问/集成"></a>4．数据访问/集成</h2><p>数据访问/集成层由JDBC、ORM、OXM、JMS和事务模块组成。<br>    Spring-jdbc模块：提供了一个JDBC 的抽象层，消除了繁琐的JDBC编码和数据库厂商特有的错误代码解析。<br>    Spring-tx模块（事务模块）：支持用于实现特殊接口和所有POJO（普通Java对象）类的编程和声明式事务管理。<br>    Spring-orm模块：为流行的对象关系映射(Object-Relational Mapping )API提供集成层，包括JPA和Hibernate。使用Spring-orm模块，可以将这些O/R映射框架与Spring提供的所有其他功能结合使用，例如声明式事务管理功能。<br>    Spring-oxm模块：提供了一个支持对象/XML映射的抽象层实现，如JAXB、Castor、JiBX和XStream。<br>    Spring-jms模块(Java Messaging Service) ：指Java消息传递服务，包含用于生产和使用消息的功能。自Spring 4.1后，提供了与Spring-messaging模块的集成。</p><h2 id="5．Web"><a href="#5．Web" class="headerlink" title="5．Web"></a>5．Web</h2><p>Web层由Spring-web、Spring-webmvc、Spring-websocket和Portlet模块组成。<br>    Spring-web模块：提供了基本的Web开发集成功能。例如：多文件上传功能、使用Servlet监听器初始化一个IoC容器以及Web应用上下文。<br>    Spring-webmvc模块：也称为Web-Servlet模块，包含用于Web应用程序的Spring MVC和REST Web Services实现。 Spring MVC框架提供了领域模型代码和Web表单之间的清晰分离，并与  Spring Framework的所有其他功能集成，本书后续章节将会详细讲解Spring MVC框架。<br>    Spring-websocket模块：Spring 4.0后新增的模块，它提供了WebSocket和SockJS的实现。<br>    Portlet模块：类似于Servlet模块的功能，提供了在Portlet环境中使用MVC实现。</p><h2 id="6．测试"><a href="#6．测试" class="headerlink" title="6．测试"></a>6．测试</h2><p>Spring-test模块：支持使用JUnit或TestNG对Spring组件进行单元测试和集成测试。</p><p>更多知识关注微信公众号“IT互联网科技知识分享”</p><p><img src="1.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> JavaEE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> JavaEE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>贪吃蛇游戏</title>
      <link href="year/11/30/g_tan_chi_she_you_xi/"/>
      <url>year/11/30/g_tan_chi_she_you_xi/</url>
      
        <content type="html"><![CDATA[<p>使用 Java 语言编写一个贪吃蛇游戏，代码如下：</p><p>GreedSnake .java</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">package jzjsfx;public class GreedSnake &#123;public static void main(String[] args) &#123;SnakeModel model &#x3D; new SnakeModel(20, 30);SnakeControl control &#x3D; new SnakeControl(model);SnakeView view &#x3D; new SnakeView(model, control);&#x2F;&#x2F; 添加一个观察者，让view成为model的观察者model.addObserver(view);new Thread(model).start();&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>SnakeControl.java</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">package jzjsfx;import java.awt.event.KeyEvent;import java.awt.event.KeyListener;public class SnakeControl  implements KeyListener&#123;    SnakeModel model;    public SnakeControl(SnakeModel model)&#123;        this.model &#x3D; model;    &#125;    public void keyPressed(KeyEvent e) &#123;        int keyCode &#x3D; e.getKeyCode();        if (model.running)&#123;                &#x2F;&#x2F; 运行状态下，处理的按键            switch (keyCode) &#123;                case KeyEvent.VK_UP:                    model.changeDirection(SnakeModel.UP);                    break;                case KeyEvent.VK_DOWN:                    model.changeDirection(SnakeModel.DOWN);                    break;                case KeyEvent.VK_LEFT:                    model.changeDirection(SnakeModel.LEFT);                    break;                case KeyEvent.VK_RIGHT:                    model.changeDirection(SnakeModel.RIGHT);                    break;                case KeyEvent.VK_ADD:                case KeyEvent.VK_PAGE_UP:                    model.speedUp();                    break;                case KeyEvent.VK_SUBTRACT:                case KeyEvent.VK_PAGE_DOWN:                    model.speedDown();                    break;                case KeyEvent.VK_SPACE:                case KeyEvent.VK_P:                    model.changePauseState();                    break;                default:            &#125;        &#125;        &#x2F;&#x2F; 任何情况下处理的按键，按键导致重新启动游戏        if (keyCode &#x3D;&#x3D; KeyEvent.VK_R ||                keyCode &#x3D;&#x3D; KeyEvent.VK_S ||                keyCode &#x3D;&#x3D; KeyEvent.VK_ENTER) &#123;            model.reset();        &#125;    &#125;    public void keyReleased(KeyEvent e) &#123;    &#125;    public void keyTyped(KeyEvent e) &#123;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>SnakeModel.java</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">package jzjsfx;import javax.swing.*;import java.util.Arrays;import java.util.LinkedList;import java.util.Observable;import java.util.Random;class SnakeModel extends Observable implements Runnable &#123;    boolean[][] matrix;                         &#x2F;&#x2F; 指示位置上有没蛇体或食物    LinkedList nodeArray &#x3D; new LinkedList();    &#x2F;&#x2F; 蛇体    Node food;    int maxX;&#x2F;&#x2F;横列    int maxY;&#x2F;&#x2F;纵列    int direction &#x3D; 2;                          &#x2F;&#x2F; 蛇运行的方向    boolean running &#x3D; false;                    &#x2F;&#x2F; 运行状态    int timeInterval &#x3D; 200;                     &#x2F;&#x2F; 时间间隔，毫秒    double speedChangeRate &#x3D; 0.75;              &#x2F;&#x2F; 每次得速度变化率    boolean paused &#x3D; false;                     &#x2F;&#x2F; 暂停标志    int score &#x3D; 0;                              &#x2F;&#x2F; 得分    int countMove &#x3D; 0;                          &#x2F;&#x2F; 吃到食物前移动的次数    &#x2F;&#x2F; UP and DOWN should be even    &#x2F;&#x2F; RIGHT and LEFT should be odd    public static final int UP &#x3D; 2;    public static final int DOWN &#x3D; 4;    public static final int LEFT &#x3D; 1;    public static final int RIGHT &#x3D; 3;    public SnakeModel( int maxX, int maxY) &#123;        this.maxX &#x3D; maxX;        this.maxY &#x3D; maxY;        reset();    &#125;    public void reset()&#123;        direction &#x3D; SnakeModel.UP;              &#x2F;&#x2F; 蛇运行的方向        timeInterval &#x3D; 200;                     &#x2F;&#x2F; 时间间隔，毫秒        paused &#x3D; false;                         &#x2F;&#x2F; 暂停标志        score &#x3D; 0;                              &#x2F;&#x2F; 得分        countMove &#x3D; 0;                          &#x2F;&#x2F; 吃到食物前移动的次数        &#x2F;&#x2F; initial matirx, 全部清0        matrix &#x3D; new boolean[maxX][];        for (int i &#x3D; 0; i &lt; maxX; ++i) &#123;            matrix[i] &#x3D; new boolean[maxY];            Arrays.fill(matrix[i], false);        &#125;        &#x2F;&#x2F; initial the snake        &#x2F;&#x2F; 初始化蛇体，如果横向位置超过20个，长度为10，否则为横向位置的一半        int initArrayLength &#x3D; maxX &gt; 20 ? 10 : maxX &#x2F; 2;        nodeArray.clear();        for (int i &#x3D; 0; i &lt; initArrayLength; ++i) &#123;            int x &#x3D; maxX &#x2F; 2 + i;&#x2F;&#x2F;maxX被初始化为20            int y &#x3D; maxY &#x2F; 2;    &#x2F;&#x2F;maxY被初始化为30            &#x2F;&#x2F;nodeArray[x,y]: [10,15]-[11,15]-[12，15]~~[20,15]            &#x2F;&#x2F;默认的运行方向向上，所以游戏一开始nodeArray就变为：            &#x2F;&#x2F;       [10，14]-[10，15]-[11，15]-[12，15]~~[19，15]            nodeArray.addLast(new Node(x, y));            matrix[x][y] &#x3D; true;        &#125;        &#x2F;&#x2F; 创建食物        food &#x3D; createFood();        matrix[food.x][food.y] &#x3D; true;    &#125;    public void changeDirection(int newDirection) &#123;        &#x2F;&#x2F; 改变的方向不能与原来方向同向或反向        if (direction % 2 !&#x3D; newDirection % 2) &#123;            direction &#x3D; newDirection;        &#125;    &#125;       public boolean moveOn() &#123;        Node n &#x3D; (Node) nodeArray.getFirst();        int x &#x3D; n.x;        int y &#x3D; n.y;        &#x2F;&#x2F; 根据方向增减坐标值        switch (direction) &#123;            case UP:                y--;                break;            case DOWN:                y++;                break;            case LEFT:                x--;                break;            case RIGHT:                x++;                break;        &#125;        &#x2F;&#x2F; 如果新坐标落在有效范围内，则进行处理        if ((0 &lt;&#x3D; x &amp;&amp; x &lt; maxX) &amp;&amp; (0 &lt;&#x3D; y &amp;&amp; y &lt; maxY)) &#123;                    if (matrix[x][y]) &#123;        &#x2F;&#x2F; 如果新坐标的点上有东西（蛇体或者食物）                if (x &#x3D;&#x3D; food.x &amp;&amp; y &#x3D;&#x3D; food.y) &#123;       &#x2F;&#x2F; 吃到食物，成功                    nodeArray.addFirst(food);           &#x2F;&#x2F; 从蛇头赠长                    &#x2F;&#x2F; 分数规则，与移动改变方向的次数和速度两个元素有关                    int scoreGet &#x3D; (10000 - 200 * countMove) &#x2F; timeInterval;                    score +&#x3D; scoreGet &gt; 0 ? scoreGet : 10;                    countMove &#x3D; 0;                    food &#x3D; createFood();                &#x2F;&#x2F; 创建新的食物                    matrix[food.x][food.y] &#x3D; true;      &#x2F;&#x2F; 设置食物所在位置                    return true;                &#125; else                                  &#x2F;&#x2F; 吃到蛇体自身，失败                    return false;                           &#125; else &#123;                 &#x2F;&#x2F; 如果新坐标的点上没有东西（蛇体），移动蛇体                nodeArray.addFirst(new Node(x, y));                matrix[x][y] &#x3D; true;                n &#x3D; (Node) nodeArray.removeLast();                matrix[n.x][n.y] &#x3D; false;                countMove++;                return true;            &#125;        &#125;        return false;                                   &#x2F;&#x2F; 触到边线，失败    &#125;    public void run() &#123;        running &#x3D; true;        while (running) &#123;            try &#123;                Thread.sleep(timeInterval);            &#125; catch (Exception e) &#123;                break;            &#125;            if (!paused) &#123;                if (moveOn()) &#123;                    setChanged();           &#x2F;&#x2F; Model通知View数据已经更新                    notifyObservers();                &#125; else &#123;                    JOptionPane.showMessageDialog(null,                            &quot;you failed&quot;,                            &quot;Game Over&quot;,                            JOptionPane.INFORMATION_MESSAGE);                    break;                &#125;            &#125;        &#125;        running &#x3D; false;    &#125;    private Node createFood() &#123;        int x &#x3D; 0;        int y &#x3D; 0;        &#x2F;&#x2F; 随机获取一个有效区域内的与蛇体和食物不重叠的位置        do &#123;            Random r &#x3D; new Random();            x &#x3D; r.nextInt(maxX);            y &#x3D; r.nextInt(maxY);        &#125; while (matrix[x][y]);        return new Node(x, y);    &#125;    public void speedUp() &#123;        timeInterval *&#x3D; speedChangeRate;    &#125;    public void speedDown() &#123;        timeInterval &#x2F;&#x3D; speedChangeRate;    &#125;    public void changePauseState() &#123;        paused &#x3D; !paused;    &#125;    public String toString() &#123;        String result &#x3D; &quot;&quot;;        for (int i &#x3D; 0; i &lt; nodeArray.size(); ++i) &#123;            Node n &#x3D; (Node) nodeArray.get(i);            result +&#x3D; &quot;[&quot; + n.x + &quot;,&quot; + n.y + &quot;]&quot;;        &#125;        return result;    &#125;&#125;class Node &#123;    int x;    int y;    Node(int x, int y) &#123;        this.x &#x3D; x;        this.y &#x3D; y;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>SnakeView.java</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">package jzjsfx;import javax.swing.*;import java.awt.*;import java.util.Iterator;import java.util.LinkedList;import java.util.Observable;import java.util.Observer;public class SnakeView implements Observer &#123;SnakeControl control &#x3D; null;SnakeModel model &#x3D; null;JFrame mainFrame;Canvas paintCanvas;JLabel labelScore;public static final int canvasWidth &#x3D; 200;public static final int canvasHeight &#x3D; 300;public static final int nodeWidth &#x3D; 10;public static final int nodeHeight &#x3D; 10;public SnakeView(SnakeModel model, SnakeControl control) &#123;this.model &#x3D; model;this.control &#x3D; control;mainFrame &#x3D; new JFrame(&quot;贪吃蛇&quot;);Container cp &#x3D; mainFrame.getContentPane();&#x2F;&#x2F; 创建顶部的分数显示labelScore &#x3D; new JLabel(&quot;Score:&quot;);cp.add(labelScore, BorderLayout.NORTH);&#x2F;&#x2F; 创建中间的游戏显示区域paintCanvas &#x3D; new Canvas();paintCanvas.setSize(canvasWidth + 1, canvasHeight + 1);paintCanvas.addKeyListener(control);cp.add(paintCanvas, BorderLayout.CENTER);&#x2F;&#x2F; 创建底下的帮助栏JPanel panelButtom &#x3D; new JPanel();panelButtom.setLayout(new BorderLayout());JLabel labelHelp;labelHelp &#x3D; new JLabel(&quot;PageUp, PageDown for speed;&quot;, JLabel.CENTER);panelButtom.add(labelHelp, BorderLayout.NORTH);labelHelp &#x3D; new JLabel(&quot;ENTER or R or S for restart;&quot;, JLabel.CENTER);panelButtom.add(labelHelp, BorderLayout.CENTER);labelHelp &#x3D; new JLabel(&quot;SPACE or P for pause&quot;, JLabel.CENTER);panelButtom.add(labelHelp, BorderLayout.SOUTH);cp.add(panelButtom, BorderLayout.SOUTH);mainFrame.addKeyListener(control);mainFrame.pack();mainFrame.setResizable(false);mainFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);mainFrame.setVisible(true);&#125;void repaint() &#123;Graphics g &#x3D; paintCanvas.getGraphics();&#x2F;&#x2F; draw backgroundg.setColor(Color.WHITE);g.fillRect(0, 0, canvasWidth, canvasHeight);&#x2F;&#x2F; draw the snakeg.setColor(Color.BLACK);LinkedList na &#x3D; model.nodeArray;Iterator it &#x3D; na.iterator();while (it.hasNext()) &#123;Node n &#x3D; (Node) it.next();drawNode(g, n);&#125;&#x2F;&#x2F; draw the foodg.setColor(Color.RED);Node n &#x3D; model.food;drawNode(g, n);updateScore();&#125;private void drawNode(Graphics g, Node n) &#123;g.fillRect(n.x * nodeWidth, n.y * nodeHeight, nodeWidth - 1,nodeHeight - 1);&#125;public void updateScore() &#123;String s &#x3D; &quot;Score: &quot; + model.score;labelScore.setText(s);&#125;public void update(Observable o, Object arg) &#123;repaint();&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行结果如下：</p><p><img src="1.png"></p><p><img src="2.png"></p><p>更多知识关注微信公众号“IT互联网科技知识分享”</p><p><img src="3.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>仿Windows下的记事本程序</title>
      <link href="year/11/30/e_fang_windows_xia_ji_shi_ben_xiao_cheng_xu/"/>
      <url>year/11/30/e_fang_windows_xia_ji_shi_ben_xiao_cheng_xu/</url>
      
        <content type="html"><![CDATA[<p>在 Windows 操作系统中，记事本是一个小的应用程序，采用一个简单的文本编辑器进行文字信息的记 </p><p>录和存储。请仿照 Windows 的记事本，开发一个属于自己的记事本（Notepad）功能</p><p>记事本的应该具备的功能，基本要求如下： </p><p>（1） 菜单栏中包含文件、编辑、查看和帮助菜单，具体如下图所示。 </p><p><img src="1.png"></p><p>（2） 文件菜单中具有新建、打开、保存、另存为、打印和退出功能，具体如下图所示。</p><p><img src="2.png"></p><p>（3） 编辑菜单中具有的功能有撤销、重做、剪切、复制、粘贴、删除、全选以及查找和替换，具 </p><p>体如下图所示。</p><p><img src="3.png"></p><p>（4） 查看菜单中具有的功能包括字体、颜色等，具体如下图所示。</p><p><img src="4.png"></p><p>（5） 帮助菜单中的“View Help…”可以查看帮助文档，“About Notepad…”可以查看记事本的当前 </p><p>版本。帮助菜单中具有的功能具体如下图所示。</p><p><img src="5.png"></p><p><img src="6.png"></p><p>(6) 程序代码如下所示：</p><p>AboutDialog.java</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">package notepad;import java.awt.Color;import java.awt.Font;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;import javax.swing.ImageIcon;import javax.swing.JButton;import javax.swing.JDialog;import javax.swing.JFrame;import javax.swing.JLabel;import javax.swing.JPanel;public class AboutDialog implements ActionListener &#123;public JDialog Dialog;public JButton OK, Icon;public JLabel Name, Version, Author, Java;public JPanel Panel;AboutDialog(JFrame notepad, int x, int y) &#123;Dialog &#x3D; new JDialog(notepad, &quot;About Notepad...&quot;, true);OK &#x3D; new JButton(&quot;OK&quot;);Icon &#x3D; new JButton(new ImageIcon(&quot;Notepad.jpg&quot;));Name &#x3D; new JLabel(&quot;Notepad&quot;);Version &#x3D; new JLabel(&quot;Version 1.0&quot;);Java &#x3D; new JLabel(&quot;JRE Version 6.0&quot;);Author &#x3D; new JLabel(&quot;Copyright (c) 2011 Sky. No rights reserved.&quot;);Panel &#x3D; new JPanel();Color c &#x3D; new Color(0, 95, 191);Name.setForeground(c);Version.setForeground(c);Java.setForeground(c);Panel.setBackground(Color.WHITE);OK.setFocusable(false);Dialog.setSize(280, 180);Dialog.setLocation(x, y);Dialog.setResizable(false);Dialog.setLayout(null);Panel.setLayout(null);OK.addActionListener(this);Icon.setFocusable(false);Icon.setBorderPainted(false);Author.setFont(new Font(null, Font.PLAIN, 11));Panel.add(Icon);Panel.add(Name);Panel.add(Version);Panel.add(Author);Panel.add(Java);Dialog.add(Panel);Dialog.add(OK);Panel.setBounds(0, 0, 280, 100);OK.setBounds(180, 114, 72, 26);Name.setBounds(80, 10, 160, 20);Version.setBounds(80, 27, 160, 20);Author.setBounds(15, 70, 250, 20);Java.setBounds(80, 44, 160, 20);Icon.setBounds(16, 14, 48, 48);&#125;public void actionPerformed(ActionEvent e) &#123;Dialog.setVisible(false);&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>ColorDialog.java</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">package notepad;import java.awt.Color;import java.awt.Component;import java.awt.Font;import java.awt.GridLayout;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;import java.awt.event.KeyEvent;import java.awt.event.KeyListener;import java.awt.event.WindowEvent;import java.awt.event.WindowListener;import javax.swing.JButton;import javax.swing.JDialog;import javax.swing.JFrame;import javax.swing.JLabel;import javax.swing.JPanel;import javax.swing.JTextArea;import javax.swing.JTextField;public class ColorDialog implements ActionListener, WindowListener&#123;public JDialog Dialog;public JLabel NFL,NBL,SFL,SBL;public JTextArea Normal,Selected;public JButton NFB,NBB,SFB,SBB,OK,Cancel,Reset;public Color NFC,NBC,SFC,SBC;public ColorChooser Chooser;public ColorDialog(JFrame notepad, int x, int y)&#123;NFC&#x3D;new Color(0,0,0);NBC&#x3D;new Color(249,249,251);SFC&#x3D;new Color(0,0,0);SBC&#x3D;new Color(191,207,223);Dialog&#x3D;new JDialog(notepad,&quot;Color...&quot;,true);NFL&#x3D;new JLabel(&quot;Normal Foreground:&quot;);NBL&#x3D;new JLabel(&quot;Normal Background:&quot;);SFL&#x3D;new JLabel(&quot;Selected Foreground:&quot;);SBL&#x3D;new JLabel(&quot;Selected Background:&quot;);Normal&#x3D;new JTextArea(&quot;\n    Normal    正常&quot;);Selected&#x3D;new JTextArea(&quot;\n    Selected  选中 &quot;);NFB&#x3D;new JButton(&quot;&quot;);NBB&#x3D;new JButton(&quot;&quot;);SFB&#x3D;new JButton(&quot;&quot;);SBB&#x3D;new JButton(&quot;&quot;);OK&#x3D;new JButton(&quot;OK&quot;);Cancel&#x3D;new JButton(&quot;Cancel&quot;);Reset&#x3D;new JButton(&quot;Reset&quot;);Chooser&#x3D;new ColorChooser(Dialog, x+65, y-15);Normal.setEditable(false);Normal.setFocusable(false);Normal.setFont(new Font(&quot;新宋体&quot;, 0, 16));Normal.setForeground(NFC);Normal.setBackground(NBC);Selected.setEditable(false);Selected.setFocusable(false);Selected.setFont(Normal.getFont());Selected.setForeground(SFC);Selected.setBackground(SBC);NFB.setBackground(NFC);NBB.setBackground(NBC);SFB.setBackground(SFC);SBB.setBackground(SBC);Dialog.setLayout(null);Dialog.setLocation(x, y);Dialog.setSize(410, 220);Dialog.setResizable(false);Reset.setFocusable(false);OK.setFocusable(false);Cancel.setFocusable(false);Dialog.add(Normal);Dialog.add(Selected);Dialog.add(NFL);Dialog.add(NBL);Dialog.add(SFL);Dialog.add(SBL);Dialog.add(SBB);Dialog.add(SFB);Dialog.add(NBB);Dialog.add(NFB);Dialog.add(OK);Dialog.add(Cancel);Dialog.add(Reset);SBB.setBounds(144, 100, 60, 22);SFB.setBounds(144, 70, 60, 22);NBB.setBounds(144, 40, 60, 22);NFB.setBounds(144, 10, 60, 22);NFL.setBounds(10, 10, 130, 22);NBL.setBounds(10, 40, 130, 22);SFL.setBounds(10, 70, 130, 22);SBL.setBounds(10, 100, 130, 22);Normal.setBounds(220, 10, 174, 56);Selected.setBounds(220, 66, 174, 56);Reset.setBounds(10, 160, 74, 24);OK.setBounds(236, 160, 74, 24);Cancel.setBounds(320, 160, 74, 24);Dialog.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);Dialog.addWindowListener(this);NFB.addActionListener(this);NBB.addActionListener(this);SFB.addActionListener(this);SBB.addActionListener(this);Reset.addActionListener(this);OK.addActionListener(this);Cancel.addActionListener(this);&#125;public void setTextAreaColor()&#123;Normal.setForeground(NFB.getBackground());Normal.setBackground(NBB.getBackground());Selected.setForeground(SFB.getBackground());Selected.setBackground(SBB.getBackground());&#125;public void cancel()&#123;Normal.setForeground(NFC);Normal.setBackground(NBC);Selected.setForeground(SFC);Selected.setBackground(SBC);NFB.setBackground(NFC);NBB.setBackground(NBC);SFB.setBackground(SFC);SBB.setBackground(SBC);Dialog.setVisible(false);&#125;public void actionPerformed(ActionEvent e) &#123;Object obj&#x3D;e.getSource();if(obj&#x3D;&#x3D;Reset)&#123;NFB.setBackground(new Color(0,0,0));NBB.setBackground(new Color(249,249,251));SFB.setBackground(new Color(0,0,0));SBB.setBackground(new Color(191,207,223));setTextAreaColor();&#125;else if(obj&#x3D;&#x3D;OK)&#123;NFC&#x3D;NFB.getBackground();NBC&#x3D;NBB.getBackground();SFC&#x3D;SFB.getBackground();SBC&#x3D;SBB.getBackground();Dialog.setVisible(false);&#125;else if(obj&#x3D;&#x3D;Cancel)cancel();else&#123;Chooser.init(((Component) obj).getBackground());Chooser.Dialog.setVisible(true);((Component) obj).setBackground(Chooser.New.getBackground());setTextAreaColor();&#125;&#125;public void windowClosing(WindowEvent e) &#123;cancel();&#125;public void windowActivated(WindowEvent arg0) &#123;&#125;public void windowClosed(WindowEvent arg0) &#123;&#125;public void windowDeactivated(WindowEvent arg0) &#123;&#125;public void windowDeiconified(WindowEvent arg0) &#123;&#125;public void windowIconified(WindowEvent arg0) &#123;&#125;public void windowOpened(WindowEvent arg0) &#123;&#125;&#125;class ColorChooser implements ActionListener,WindowListener,KeyListener&#123;JDialog Dialog;JButton Choice[][],Old,New,OK,Cancel;JPanel Panel;JTextField R,G,B;JLabel OldLabel,NewLabel,RL,GL,BL;ColorChooser(JDialog color,int x, int y)&#123;Dialog&#x3D;new JDialog(color,true);Choice&#x3D;new JButton[8][8];Panel&#x3D;new JPanel();Old&#x3D;new JButton(&quot;&quot;);New&#x3D;new JButton(&quot;&quot;);OldLabel&#x3D;new JLabel(&quot;Old:&quot;);NewLabel&#x3D;new JLabel(&quot;New:&quot;);RL&#x3D;new JLabel(&quot;R:&quot;);GL&#x3D;new JLabel(&quot;G:&quot;);BL&#x3D;new JLabel(&quot;B:&quot;);R&#x3D;new JTextField(&quot;&quot;);G&#x3D;new JTextField(&quot;&quot;);B&#x3D;new JTextField(&quot;&quot;);OK&#x3D;new JButton(&quot;OK&quot;);Cancel&#x3D;new JButton(&quot;Cancel&quot;);Panel.setLayout(new GridLayout(8,8,0,0));int i&#x3D;0,j&#x3D;0;Color c;Choice[0][7]&#x3D;new JButton(&quot;&quot;);Choice[0][7].setBackground(new Color(255,255,255));Choice[1][7]&#x3D;new JButton(&quot;&quot;);Choice[1][7].setBackground(new Color(255,223,191));Choice[2][7]&#x3D;new JButton(&quot;&quot;);Choice[2][7].setBackground(new Color(255,207,207));Choice[3][7]&#x3D;new JButton(&quot;&quot;);Choice[3][7].setBackground(new Color(223,191,255));Choice[4][7]&#x3D;new JButton(&quot;&quot;);Choice[4][7].setBackground(new Color(207,207,255));Choice[5][7]&#x3D;new JButton(&quot;&quot;);Choice[5][7].setBackground(new Color(191,223,255));Choice[6][7]&#x3D;new JButton(&quot;&quot;);Choice[6][7].setBackground(new Color(207,255,207));Choice[7][7]&#x3D;new JButton(&quot;&quot;);Choice[7][7].setBackground(new Color(223,255,191));for(i&#x3D;0;i&lt;8;i++)&#123;c&#x3D;Choice[i][7].getBackground();for(j&#x3D;0;j&lt;8;j++)&#123;if(j!&#x3D;7)&#123;Choice[i][j]&#x3D;new JButton(&quot;&quot;);Choice[i][j].setBackground(new Color(c.getRed()*(j+1)&#x2F;8,c.getGreen()*(j+1)&#x2F;8,c.getBlue()*(j+1)&#x2F;8));&#125;Choice[i][j].setFocusable(false);Choice[i][j].addActionListener(this);Panel.add(Choice[i][j]);&#125;&#125;Dialog.setSize(280,250);Dialog.setLayout(null);Dialog.setLocation(x, y);Dialog.setResizable(false);Dialog.add(Panel);Panel.setBounds(10, 10, 160, 160);Dialog.add(Old);Dialog.add(OldLabel);Old.setEnabled(false);Old.setBorderPainted(false);Old.setBounds(214, 10, 44, 22);OldLabel.setBounds(180, 10, 44, 22);Dialog.add(New);Dialog.add(NewLabel);New.setEnabled(false);New.setBorderPainted(false);New.setBounds(214, 32, 44, 22);NewLabel.setBounds(180, 32, 44, 22);Dialog.add(R);Dialog.add(G);Dialog.add(B);R.setBounds(214, 97, 44, 22);G.setBounds(214, 123, 44, 22);B.setBounds(214, 149, 44, 22);Dialog.add(RL);Dialog.add(GL);Dialog.add(BL);RL.setBounds(196, 97, 16, 22);GL.setBounds(196, 123, 16, 22);BL.setBounds(196, 149, 16, 22);Dialog.add(OK);Dialog.add(Cancel);OK.setFocusable(false);Cancel.setFocusable(false);OK.setBounds(106, 190, 74, 24);Cancel.setBounds(190, 190, 74, 24);OK.addActionListener(this);Cancel.addActionListener(this);G.addKeyListener(this);R.addKeyListener(this);B.addKeyListener(this);&#125;public void setText(Color c)&#123;R.setText(String.valueOf(c.getRed()));G.setText(String.valueOf(c.getGreen()));B.setText(String.valueOf(c.getBlue()));&#125;public void init(Color c)&#123;New.setBackground(c);Old.setBackground(c);setText(c);&#125;public void actionPerformed(ActionEvent e) &#123;Object obj&#x3D;e.getSource();if(obj&#x3D;&#x3D;OK) Dialog.setVisible(false);else if(obj&#x3D;&#x3D;Cancel)&#123;New.setBackground(Old.getBackground());Dialog.setVisible(false);&#125;else&#123;New.setBackground(((Component) obj).getBackground());setText(New.getBackground());&#125;&#125;public void windowClosing(WindowEvent e) &#123;New.setBackground(Old.getBackground());Dialog.setVisible(false);&#125;public void keyReleased(KeyEvent e) &#123;try&#123;int r,g,b;if(R.getText().length()&#x3D;&#x3D;0) r&#x3D;0;else r&#x3D;Integer.valueOf(R.getText());if(G.getText().length()&#x3D;&#x3D;0) g&#x3D;0;else g&#x3D;Integer.valueOf(G.getText());if(B.getText().length()&#x3D;&#x3D;0) b&#x3D;0;else b&#x3D;Integer.valueOf(B.getText());New.setBackground(new Color(r,g,b));&#125;catch(NumberFormatException nfe)&#123;setText(New.getBackground());&#125;catch(IllegalArgumentException iae)&#123;setText(New.getBackground());&#125;&#125;public void keyPressed(KeyEvent e) &#123;&#125;public void keyTyped(KeyEvent e) &#123;&#125;public void windowActivated(WindowEvent arg0) &#123;&#125;public void windowClosed(WindowEvent arg0) &#123;&#125;public void windowDeactivated(WindowEvent arg0) &#123;&#125;public void windowDeiconified(WindowEvent arg0) &#123;&#125;public void windowIconified(WindowEvent arg0) &#123;&#125;public void windowOpened(WindowEvent arg0) &#123;&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>EnsureDialog.java</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">package notepad;import java.awt.BorderLayout;import java.awt.Color;import java.awt.FlowLayout;import java.awt.Font;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;import java.awt.event.WindowEvent;import java.awt.event.WindowListener;import javax.swing.JButton;import javax.swing.JDialog;import javax.swing.JFrame;import javax.swing.JLabel;import javax.swing.JPanel;public class EnsureDialog implements WindowListener, ActionListener &#123;public int YES, NO, CANCEL, Status;public JDialog Ensure;public JButton Yes, No, Cancel;public JLabel Question;public JPanel ButtonPanel, TextPanel;EnsureDialog(JFrame notepad, int x, int y) &#123;YES &#x3D; 0;NO &#x3D; 1;CANCEL &#x3D; 2;Status &#x3D; CANCEL;Ensure &#x3D; new JDialog(notepad, true);&#x2F;* * 这里的模式标志true的作用是使对话框处于notepad的上端， 并且当对话框显示时进程处于停滞状态， 直到对话框不再显示为止。在本程序中 * ，由于对对话框进行了事件监听处理，当对话框消失时状态标 志Status同时发生了变化 ，这样就可以在进程继续时获得新的Status值 *&#x2F;Yes &#x3D; new JButton(&quot;Yes&quot;);No &#x3D; new JButton(&quot;No&quot;);Cancel &#x3D; new JButton(&quot;Cancel&quot;);Question &#x3D; new JLabel(&quot;  Do you want to save changes to the file?&quot;);ButtonPanel &#x3D; new JPanel();TextPanel &#x3D; new JPanel();ButtonPanel.setLayout(new FlowLayout(FlowLayout.CENTER, 16, 10));TextPanel.setLayout(new BorderLayout());Ensure.setLayout(new BorderLayout());ButtonPanel.add(Yes);ButtonPanel.add(No);ButtonPanel.add(Cancel);TextPanel.add(Question);Ensure.add(TextPanel, BorderLayout.CENTER);Ensure.add(ButtonPanel, BorderLayout.SOUTH);Ensure.setLocation(x, y);Ensure.setSize(360, 140);Ensure.setResizable(false);TextPanel.setBackground(Color.WHITE);Question.setFont(new Font(null, Font.PLAIN, 16));Question.setForeground(new Color(0, 95, 191));Yes.setFocusable(false);No.setFocusable(false);Cancel.setFocusable(false);Ensure.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);Ensure.addWindowListener(this);Yes.addActionListener(this);No.addActionListener(this);Cancel.addActionListener(this);&#125;public void actionPerformed(ActionEvent e) &#123;if (e.getSource() &#x3D;&#x3D; Yes)Status &#x3D; YES;else if (e.getSource() &#x3D;&#x3D; No)Status &#x3D; NO;else if (e.getSource() &#x3D;&#x3D; Cancel)Status &#x3D; CANCEL;Ensure.setVisible(false);&#125;public void windowClosing(WindowEvent e) &#123;Status &#x3D; CANCEL;Ensure.setVisible(false);&#125;public void windowActivated(WindowEvent e) &#123;&#125;public void windowClosed(WindowEvent e) &#123;&#125;public void windowDeactivated(WindowEvent e) &#123;&#125;public void windowDeiconified(WindowEvent e) &#123;&#125;public void windowIconified(WindowEvent e) &#123;&#125;public void windowOpened(WindowEvent e) &#123;&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>FindAndReplace.java</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">package notepad;import java.awt.TextField;import javax.swing.ButtonGroup;import javax.swing.JButton;import javax.swing.JCheckBox;import javax.swing.JDialog;import javax.swing.JFrame;import javax.swing.JLabel;import javax.swing.JRadioButton;public class FindAndReplace &#123;public JDialog Dialog;public JButton FindNext, Replace, ReplaceAll, Finish;public JCheckBox MatchCase;public JRadioButton Up, Down;public ButtonGroup DirectionGroup;public JLabel FindWhat, ReplaceWith, Direction;public TextField FindText, ReplaceText;FindAndReplace(JFrame notepad) &#123;Dialog &#x3D; new JDialog(notepad, &quot;Find And Replace...&quot;, false);&#x2F;* * 与EnsureDialog不同的是 ， 这里的模式标志false使对话框始终处于notepad的上端 ， 但点击notepad * 时notepad会继续处于活动状态 ， 对话框则变成不活动状态 *&#x2F;FindNext &#x3D; new JButton(&quot;Find Next&quot;);Replace &#x3D; new JButton(&quot;Replace&quot;);ReplaceAll &#x3D; new JButton(&quot;Replace All&quot;);Finish &#x3D; new JButton(&quot;Finish&quot;);MatchCase &#x3D; new JCheckBox(&quot;Match Case&quot;, false);Down &#x3D; new JRadioButton(&quot;Down&quot;, true);Up &#x3D; new JRadioButton(&quot;Up&quot;, false);FindWhat &#x3D; new JLabel(&quot;Find What:&quot;);ReplaceWith &#x3D; new JLabel(&quot;Replace With:&quot;);Direction &#x3D; new JLabel(&quot;Direction:&quot;);FindText &#x3D; new TextField(&quot;&quot;);ReplaceText &#x3D; new TextField(&quot;&quot;);Dialog.setSize(380, 160);Dialog.setResizable(false);FindNext.setFocusable(false);Replace.setFocusable(false);ReplaceAll.setFocusable(false);MatchCase.setFocusable(false);Finish.setFocusable(false);Up.setFocusable(false);Down.setFocusable(false);DirectionGroup &#x3D; new ButtonGroup();Dialog.setLayout(null);FindWhat.setBounds(10, 12, 80, 22);ReplaceWith.setBounds(10, 42, 80, 22);FindText.setBounds(95, 12, 160, 22);ReplaceText.setBounds(95, 42, 160, 22);FindNext.setBounds(265, 12, 98, 22);Replace.setBounds(265, 42, 98, 22);ReplaceAll.setBounds(265, 72, 98, 22);Direction.setBounds(10, 72, 80, 22);MatchCase.setBounds(6, 102, 98, 22);Down.setBounds(95, 72, 80, 22);Up.setBounds(175, 72, 80, 22);Finish.setBounds(265, 102, 98, 22);DirectionGroup.add(Up);DirectionGroup.add(Down);Dialog.add(FindWhat);Dialog.add(MatchCase);Dialog.add(FindText);Dialog.add(FindNext);Dialog.add(Direction);Dialog.add(ReplaceWith);Dialog.add(ReplaceText);Dialog.add(Replace);Dialog.add(ReplaceAll);Dialog.add(Finish);Dialog.add(Down);Dialog.add(Up);&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>FontDialog.java</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">package notepad;import java.awt.Font;import java.awt.GraphicsEnvironment;import java.awt.List;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;import java.awt.event.ItemEvent;import java.awt.event.ItemListener;import java.awt.event.WindowEvent;import java.awt.event.WindowListener;import javax.swing.JButton;import javax.swing.JCheckBox;import javax.swing.JDialog;import javax.swing.JFrame;import javax.swing.JTextArea;public class FontDialog implements ItemListener, ActionListener, WindowListener&#123;public JDialog Dialog;public JCheckBox Bold,Italic;public List Size,Name;public int FontName;public int FontStyle;public int FontSize;public JButton OK,Cancel;public JTextArea Text;FontDialog(JFrame notepad, int x, int y) &#123;GraphicsEnvironment g&#x3D;GraphicsEnvironment.getLocalGraphicsEnvironment(); String name[]&#x3D;g.getAvailableFontFamilyNames();Bold&#x3D;new JCheckBox(&quot;Bold&quot;,false);Italic&#x3D;new JCheckBox(&quot;Italic&quot;,false);Dialog&#x3D;new JDialog(notepad,&quot;Font...&quot;,true);Text&#x3D;new JTextArea(&quot;字体预览用例\n9876543210\nAaBbCcXxYyZz&quot;);OK&#x3D;new JButton(&quot;OK&quot;);Cancel&#x3D;new JButton(&quot;Cancel&quot;);Size&#x3D;new List();Name&#x3D;new List();int i&#x3D;0;Name.add(&quot;Default Value&quot;);for(i&#x3D;0;i&lt;name.length;i++) Name.add(name[i]);for(i&#x3D;8;i&lt;257;i++) Size.add(String.valueOf(i));FontName&#x3D;0;FontStyle&#x3D;0;FontSize&#x3D;8;Dialog.setLayout(null);Dialog.setLocation(x, y);Dialog.setSize(480, 306);Dialog.setResizable(false);OK.setFocusable(false);Cancel.setFocusable(false);Bold.setFocusable(false);Italic.setFocusable(false);Name.setFocusable(false);Size.setFocusable(false);Name.setBounds(10, 10, 212, 259);Dialog.add(Name);Bold.setBounds(314, 10, 64, 22);Dialog.add(Bold);Italic.setBounds(388, 10, 64, 22);Dialog.add(Italic);Size.setBounds(232, 10, 64, 259);Dialog.add(Size);Text.setBounds(306, 40, 157, 157);Dialog.add(Text);OK.setBounds(306, 243, 74, 26);Dialog.add(OK);Cancel.setBounds(390, 243, 74, 26);Dialog.add(Cancel);Name.select(FontName);Size.select(FontSize);Text.setFont(getFont());Dialog.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);Name.addItemListener(this);Size.addItemListener(this);Bold.addItemListener(this);Italic.addItemListener(this);OK.addActionListener(this);Cancel.addActionListener(this);Dialog.addWindowListener(this);&#125;public void itemStateChanged(ItemEvent e) &#123;Text.setFont(getFont());&#125;public void actionPerformed(ActionEvent e) &#123;if(e.getSource()&#x3D;&#x3D;OK)&#123;FontName&#x3D;Name.getSelectedIndex();FontStyle&#x3D;getStyle();FontSize&#x3D;Size.getSelectedIndex();Dialog.setVisible(false);&#125;else cancel();&#125;public void windowClosing(WindowEvent e) &#123;cancel();&#125;public Font getFont()&#123;if(Name.getSelectedIndex()&#x3D;&#x3D;0) return new Font(&quot;新宋体&quot;,getStyle(),Size.getSelectedIndex()+8);else return new Font(Name.getSelectedItem(),getStyle(),Size.getSelectedIndex()+8);&#125;public void cancel()&#123;Name.select(FontName);Size.select(FontSize);setStyle();Text.setFont(getFont());Dialog.setVisible(false);&#125;public void setStyle()&#123;if(FontStyle&#x3D;&#x3D;0 || FontStyle&#x3D;&#x3D;2) Bold.setSelected(false);else Bold.setSelected(true);if(FontStyle&#x3D;&#x3D;0 || FontStyle&#x3D;&#x3D;1) Italic.setSelected(false);else Italic.setSelected(true);&#125;public int getStyle()&#123;int bold&#x3D;0,italic&#x3D;0;if(Bold.isSelected()) bold&#x3D;1;if(Italic.isSelected()) italic&#x3D;1;return bold+italic*2;&#125;public void windowActivated(WindowEvent arg0) &#123;&#125;public void windowClosed(WindowEvent arg0) &#123;&#125;public void windowDeactivated(WindowEvent arg0) &#123;&#125;public void windowDeiconified(WindowEvent arg0) &#123;&#125;public void windowIconified(WindowEvent arg0) &#123;&#125;public void windowOpened(WindowEvent arg0) &#123;&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>MenuList.java</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">package notepad;import javax.swing.JCheckBoxMenuItem;import javax.swing.JMenu;import javax.swing.JMenuBar;import javax.swing.JMenuItem;import javax.swing.KeyStroke;public class MenuList&#123;public JMenuBar Menu;public JMenu File, Edit, View, Help;public JMenuItemNew,Open,Save,SaveAs,Print,Exit,ViewHelp,AboutNotepad,Font,Color,Undo,Redo,Cut,Copy,Paste,Delete,SelectAll,FindAndReplace;public JCheckBoxMenuItem WordWrap,Truncation;MenuList()&#123;Menu&#x3D;new JMenuBar();File&#x3D;new JMenu(&quot; File &quot;);New&#x3D;new JMenuItem(&quot;New&quot;);Open&#x3D;new JMenuItem(&quot;Open...&quot;);Save&#x3D;new JMenuItem(&quot;Save&quot;);SaveAs&#x3D;new JMenuItem(&quot;Save As...&quot;);Print&#x3D;new JMenuItem(&quot;Print...&quot;);Exit&#x3D;new JMenuItem(&quot;Exit&quot;);Help&#x3D;new JMenu(&quot; Help &quot;);ViewHelp&#x3D;new JMenuItem(&quot;View Help...&quot;);AboutNotepad&#x3D;new JMenuItem(&quot;About Notepad...&quot;);View&#x3D;new JMenu(&quot; View &quot;);WordWrap&#x3D;new JCheckBoxMenuItem(&quot;Word Wrap&quot;,true);Truncation&#x3D;new JCheckBoxMenuItem(&quot;Truncation&quot;,false);Font&#x3D;new JMenuItem(&quot;Font...&quot;);Color&#x3D;new JMenuItem(&quot;Color...&quot;);Edit&#x3D;new JMenu(&quot; Edit &quot;);Undo&#x3D;new JMenuItem(&quot;Undo&quot;);Redo&#x3D;new JMenuItem(&quot;Redo&quot;);Cut&#x3D;new JMenuItem(&quot;Cut&quot;);Copy&#x3D;new JMenuItem(&quot;Copy&quot;);Paste&#x3D;new JMenuItem(&quot;Paste&quot;);Delete&#x3D;new JMenuItem(&quot;Delete&quot;);SelectAll&#x3D;new JMenuItem(&quot;Select All&quot;);FindAndReplace&#x3D;new JMenuItem(&quot;Find And Replace...&quot;);Undo.setEnabled(false);Redo.setEnabled(false);Edit.add(Undo);Edit.add(Redo);Edit.addSeparator();Edit.add(Cut);Edit.add(Copy);Edit.add(Paste);Edit.add(Delete);Edit.addSeparator();Edit.add(SelectAll);Edit.add(FindAndReplace);View.add(WordWrap);View.add(Truncation);View.addSeparator();View.add(Font);View.add(Color);Help.add(ViewHelp);Help.add(AboutNotepad);File.add(New);File.add(Open);File.addSeparator();File.add(Save);File.add(SaveAs);File.addSeparator();File.add(Print);File.add(Exit);Menu.add(File);Menu.add(Edit);Menu.add(View);Menu.add(Help);New.setAccelerator(KeyStroke.getKeyStroke(&#39;N&#39;,128));Open.setAccelerator(KeyStroke.getKeyStroke(&#39;O&#39;,128));Save.setAccelerator(KeyStroke.getKeyStroke(&#39;S&#39;,128));Print.setAccelerator(KeyStroke.getKeyStroke(&#39;P&#39;,128));Undo.setAccelerator(KeyStroke.getKeyStroke(&#39;Z&#39;,128));Redo.setAccelerator(KeyStroke.getKeyStroke(&#39;Y&#39;,128));Cut.setAccelerator(KeyStroke.getKeyStroke(&#39;X&#39;,128));Copy.setAccelerator(KeyStroke.getKeyStroke(&#39;C&#39;,128));Paste.setAccelerator(KeyStroke.getKeyStroke(&#39;V&#39;,128));Delete.setAccelerator(KeyStroke.getKeyStroke(127,0));SelectAll.setAccelerator(KeyStroke.getKeyStroke(&#39;A&#39;,128));&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>TextArea.java</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">package notepad;import java.awt.Toolkit;import java.awt.datatransfer.Clipboard;import java.awt.datatransfer.DataFlavor;import java.awt.datatransfer.Transferable;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;import java.awt.event.ItemEvent;import java.awt.event.ItemListener;import java.awt.event.MouseEvent;import java.awt.event.MouseListener;import java.io.BufferedWriter;import java.io.FileReader;import java.io.FileWriter;import java.io.IOException;import javax.swing.JFrame;import javax.swing.JMenuItem;import javax.swing.JPopupMenu;import javax.swing.JScrollPane;import javax.swing.JTextArea;import javax.swing.event.MenuEvent;import javax.swing.event.MenuListener;import javax.swing.event.UndoableEditEvent;import javax.swing.event.UndoableEditListener;import javax.swing.undo.UndoManager;public class TextArea extends JTextArea implements MouseListener,UndoableEditListener,MenuListener,ActionListener,ItemListener&#123;private static final long serialVersionUID &#x3D; 1L;public boolean Saved;public String Name,Path;public JScrollPane Pane;public JPopupMenu Popup;public JMenuItem Redo,Undo,Cut,Copy,Paste,Delete,SelectAll,FindAndReplace;public UndoManager Manager;public MenuList menu;public FindAndReplace find;TextArea(JFrame notepad,int x,int y)&#123;super();Saved&#x3D;true;Name&#x3D;null;Path&#x3D;null;Popup&#x3D;new JPopupMenu();Undo&#x3D;new JMenuItem(&quot;  Undo&quot;);Redo&#x3D;new JMenuItem(&quot;  Redo&quot;);Cut&#x3D;new JMenuItem(&quot;  Cut&quot;);Copy&#x3D;new JMenuItem(&quot;  Copy&quot;);Paste&#x3D;new JMenuItem(&quot;  Paste&quot;);Delete&#x3D;new JMenuItem(&quot;  Delete&quot;);SelectAll&#x3D;new JMenuItem(&quot;  Select All&quot;);FindAndReplace&#x3D;new JMenuItem(&quot;  Find And Replace...&quot;);Pane&#x3D;new JScrollPane(this);Manager&#x3D;new UndoManager();menu&#x3D;new MenuList();find&#x3D;new FindAndReplace(notepad);find.Dialog.setLocation(x,y);Undo.setEnabled(false);Redo.setEnabled(false);setLineWrap(true);setWrapStyleWord(true);Manager.setLimit(-1);Popup.add(Undo);Popup.add(Redo);Popup.addSeparator();Popup.add(Cut);Popup.add(Copy);Popup.add(Paste);Popup.add(Delete);Popup.addSeparator();Popup.add(SelectAll);Popup.add(FindAndReplace);add(Popup);menu.Edit.addMenuListener(this);menu.WordWrap.addItemListener(this);menu.Truncation.addItemListener(this);getDocument().addUndoableEditListener(this);addMouseListener(this);find.FindNext.addActionListener(this);find.Replace.addActionListener(this);find.ReplaceAll.addActionListener(this);find.Finish.addActionListener(this);&#125;public void saveFile()&#123;try &#123;FileWriter fw &#x3D; new FileWriter(Path+Name,false);BufferedWriter bw&#x3D;new BufferedWriter(fw);bw.write(getText());bw.close();fw.close();Saved&#x3D;true;&#125; catch (IOException e)&#123;&#125;&#125;public void openFile()&#123;try &#123;int c;StringBuffer sb&#x3D;new StringBuffer();FileReader fr&#x3D;new FileReader(Path+Name);setText(null);while((c&#x3D;fr.read())!&#x3D;-1)sb.append((char)c);setText(sb.toString());Saved&#x3D;true;fr.close();Undo.setEnabled(false);Redo.setEnabled(false);menu.Undo.setEnabled(false);menu.Redo.setEnabled(false);&#125;catch (IOException e)&#123;&#125;&#125;public void delete()&#123;int start&#x3D;getSelectionStart();int end&#x3D;getSelectionEnd();replaceRange(&quot;&quot;,start,end);&#125;public int lastOf(String s1,int i)&#123;String s&#x3D;getText();if(find.MatchCase.isSelected()) return s.lastIndexOf(s1,i);else&#123;s&#x3D;s.toLowerCase();return s.lastIndexOf(s1.toLowerCase(),i);&#125;&#125;public int nextOf(String s1,int i)&#123;String s&#x3D;getText();if(find.MatchCase.isSelected()) return s.indexOf(s1,i);else&#123;s&#x3D;s.toLowerCase();return s.indexOf(s1.toLowerCase(),i);&#125;&#125;public void actionPerformed(ActionEvent e)&#123;Object obj&#x3D;e.getSource();if(obj&#x3D;&#x3D;find.Finish) find.Dialog.setVisible(false);String s1&#x3D;find.FindText.getText();String s2&#x3D;find.ReplaceText.getText();int len1&#x3D;s1.length(),len2&#x3D;s2.length();if(len1&lt;1) return;int head&#x3D;getSelectionStart(),rear&#x3D;getSelectionEnd();if(obj&#x3D;&#x3D;find.Replace)&#123;if(head&lt;rear) replaceRange(s2,head,rear);else obj&#x3D;find.FindNext;&#125;if(obj&#x3D;&#x3D;find.FindNext)&#123;if(find.Up.isSelected())&#123;head&#x3D;lastOf(s1,head-len1);if(head&lt;0) return;select(head, head+len1);&#125;else&#123;rear&#x3D;nextOf(s1, rear);if(rear&lt;0) return;select(rear,rear+len1);&#125;&#125;else if(obj&#x3D;&#x3D;find.ReplaceAll)&#123;rear&#x3D;0;while(true)&#123;rear&#x3D;nextOf(s1,rear);if(rear&lt;0) return;replaceRange(s2,rear,rear+len1);rear&#x3D;rear+len2;setCaretPosition(rear);&#125;&#125;&#125;public void menuSelected(MenuEvent e)&#123;Clipboard Board&#x3D;Toolkit.getDefaultToolkit().getSystemClipboard();Transferable contents &#x3D; Board.getContents(Board);DataFlavor flavor &#x3D; DataFlavor.stringFlavor;if(contents.isDataFlavorSupported(flavor))menu.Paste.setEnabled(true);elsemenu.Paste.setEnabled(false);if(getSelectedText()!&#x3D;null)&#123;menu.Cut.setEnabled(true);menu.Copy.setEnabled(true);menu.Delete.setEnabled(true);&#125;else&#123;menu.Cut.setEnabled(false);menu.Copy.setEnabled(false);menu.Delete.setEnabled(false);&#125;if(getText().isEmpty())&#123;menu.SelectAll.setEnabled(false);menu.FindAndReplace.setEnabled(false);&#125;else&#123;menu.SelectAll.setEnabled(true);menu.FindAndReplace.setEnabled(true);&#125;&#125;public void undoableEditHappened(UndoableEditEvent e)&#123;Manager.addEdit(e.getEdit());Saved&#x3D;false;menu.Undo.setEnabled(true);Undo.setEnabled(true);menu.Redo.setEnabled(false);Redo.setEnabled(false);&#125;public void mouseReleased(MouseEvent e) &#123;if(e.isPopupTrigger())&#123;Clipboard Board&#x3D;Toolkit.getDefaultToolkit().getSystemClipboard();Transferable contents &#x3D; Board.getContents(Board);DataFlavor flavor &#x3D; DataFlavor.stringFlavor;if(contents.isDataFlavorSupported(flavor))Paste.setEnabled(true);elsePaste.setEnabled(false);if(getSelectedText()!&#x3D;null)&#123;Cut.setEnabled(true);Copy.setEnabled(true);Delete.setEnabled(true);&#125;else&#123;Cut.setEnabled(false);Copy.setEnabled(false);Delete.setEnabled(false);&#125;if(getText().isEmpty())&#123;SelectAll.setEnabled(false);FindAndReplace.setEnabled(false);&#125;else&#123;SelectAll.setEnabled(true);FindAndReplace.setEnabled(true);&#125;Popup.show(this,e.getX(),e.getY());&#125;&#125;public void itemStateChanged(ItemEvent e) &#123;if(e.getSource()&#x3D;&#x3D;menu.WordWrap)&#123;setLineWrap(menu.WordWrap.isSelected());menu.Truncation.setEnabled(menu.WordWrap.isSelected());&#125;elsesetWrapStyleWord(!menu.Truncation.isSelected());&#125;public void mousePressed(MouseEvent e) &#123;&#125;public void mouseClicked(MouseEvent e) &#123;&#125;public void mouseEntered(MouseEvent e) &#123;&#125;public void mouseExited(MouseEvent e) &#123;&#125;public void menuCanceled(MenuEvent e) &#123;&#125;public void menuDeselected(MenuEvent e) &#123;&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Notepad.java</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">package notepad;import java.awt.Dimension;import java.awt.FileDialog;import java.awt.Image;import java.awt.Toolkit;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;import java.awt.event.WindowEvent;import java.awt.event.WindowListener;import java.awt.print.PrinterException;import javax.swing.JFrame;public class Notepad implements ActionListener,WindowListener&#123;static Dimension screen&#x3D;Toolkit.getDefaultToolkit().getScreenSize();static Image icon&#x3D;Toolkit.getDefaultToolkit().getImage(&quot;Notepad.png&quot;);JFrame notepad;EnsureDialog ensure;TextArea text;FileDialog dialog;FontDialog font;ColorDialog color;AboutDialog about;Notepad()&#123;notepad&#x3D;new JFrame(&quot;Notepad&quot;);dialog&#x3D;new FileDialog(notepad);text&#x3D;new TextArea(notepad,screen.width&#x2F;2-190,screen.height&#x2F;2-90);ensure&#x3D;new EnsureDialog(notepad,screen.width&#x2F;2-180,screen.height&#x2F;2-80);font&#x3D;new FontDialog(notepad,screen.width&#x2F;2-240,screen.height&#x2F;2-150);color&#x3D;new ColorDialog(notepad,screen.width&#x2F;2-205,screen.height&#x2F;2-110);about&#x3D;new AboutDialog(notepad,screen.width&#x2F;2-140,screen.height&#x2F;2-100);notepad.setJMenuBar(text.menu.Menu);notepad.add(text.Pane);notepad.setSize(640,420);notepad.setLocation(screen.width&#x2F;2-320,screen.height&#x2F;2-220);notepad.setMinimumSize(new Dimension(185,185));notepad.setIconImage(icon);notepad.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);notepad.addWindowListener(this);text.setFont(font.getFont());text.setForeground(color.NFC);text.setBackground(color.NBC);text.setSelectedTextColor(color.SFC);text.setSelectionColor(color.SBC);text.menu.Save.addActionListener(this);text.menu.SaveAs.addActionListener(this);text.menu.Open.addActionListener(this);text.menu.New.addActionListener(this);text.menu.Exit.addActionListener(this);text.menu.Undo.addActionListener(this);text.menu.Redo.addActionListener(this);text.menu.Cut.addActionListener(this);text.menu.Copy.addActionListener(this);text.menu.Paste.addActionListener(this);text.menu.Delete.addActionListener(this);text.menu.SelectAll.addActionListener(this);text.menu.FindAndReplace.addActionListener(this);text.menu.WordWrap.addActionListener(this);text.menu.Truncation.addActionListener(this);text.menu.Font.addActionListener(this);text.menu.Color.addActionListener(this);text.menu.ViewHelp.addActionListener(this);text.menu.AboutNotepad.addActionListener(this);text.Undo.addActionListener(this);text.Redo.addActionListener(this);text.Cut.addActionListener(this);text.Copy.addActionListener(this);text.Paste.addActionListener(this);text.Delete.addActionListener(this);text.SelectAll.addActionListener(this);text.FindAndReplace.addActionListener(this);&#125;public void windowClosing(WindowEvent e) &#123;if(text.Saved) System.exit(0);else ensure.Ensure.setVisible(true);if(ensure.Status&#x3D;&#x3D;ensure.YES &amp;&amp; saveFile()) System.exit(0);else if(ensure.Status&#x3D;&#x3D;ensure.NO) System.exit(0);&#125;public void actionPerformed(ActionEvent e) &#123;Object obj&#x3D;e.getSource();if(obj&#x3D;&#x3D;text.menu.Save) saveFile();else if(obj&#x3D;&#x3D;text.menu.SaveAs) saveAsFile();else if(obj&#x3D;&#x3D;text.menu.New)&#123;if(!(text.Saved))&#123;ensure.Ensure.setVisible(true);if(ensure.Status&#x3D;&#x3D;ensure.YES &amp;&amp; saveFile())&#123;&#125;else if(ensure.Status&#x3D;&#x3D;ensure.NO)&#123;&#125;else return;&#125;newFile();&#125;else if(obj&#x3D;&#x3D;text.menu.Open)&#123;if(!(text.Saved))&#123;ensure.Ensure.setVisible(true);if(ensure.Status&#x3D;&#x3D;ensure.YES &amp;&amp; saveFile())&#123;&#125;else if(ensure.Status&#x3D;&#x3D;ensure.NO)&#123;&#125;else return;&#125;openFile();&#125;else if(obj&#x3D;&#x3D;text.menu.Print)&#123;try &#123;text.print();&#125; catch (PrinterException pe)&#123;&#125;&#125;else if(obj&#x3D;&#x3D;text.menu.Exit)&#123;if(text.Saved) System.exit(0);else ensure.Ensure.setVisible(true);if(ensure.Status&#x3D;&#x3D;ensure.YES &amp;&amp; saveFile()) System.exit(0);else if(ensure.Status&#x3D;&#x3D;ensure.NO) System.exit(0);&#125;else if(obj&#x3D;&#x3D;text.menu.Undo || obj&#x3D;&#x3D;text.Undo)&#123;text.Manager.undo();text.Saved&#x3D;false;text.menu.Redo.setEnabled(true);text.Redo.setEnabled(true);if(!text.Manager.canUndo())&#123;text.menu.Undo.setEnabled(false);text.Undo.setEnabled(false);&#125;&#125;else if(obj&#x3D;&#x3D;text.menu.Redo || obj&#x3D;&#x3D;text.Redo)&#123;text.Manager.redo();text.Saved&#x3D;false;text.menu.Undo.setEnabled(true);text.Undo.setEnabled(true);if(!text.Manager.canRedo())&#123;text.menu.Redo.setEnabled(false);text.Redo.setEnabled(false);&#125;&#125;else if(obj&#x3D;&#x3D;text.Cut || obj&#x3D;&#x3D;text.menu.Cut)&#123;text.cut();&#125;else if(obj&#x3D;&#x3D;text.Copy || obj&#x3D;&#x3D;text.menu.Copy)&#123;text.copy();&#125;else if(obj&#x3D;&#x3D;text.Paste || obj&#x3D;&#x3D;text.menu.Paste)&#123;text.paste();&#125;else if(obj&#x3D;&#x3D;text.Delete || obj&#x3D;&#x3D;text.menu.Delete)&#123;text.delete();&#125;else if(obj&#x3D;&#x3D;text.SelectAll || obj&#x3D;&#x3D;text.menu.SelectAll)&#123;text.selectAll();&#125;else if(obj&#x3D;&#x3D;text.FindAndReplace || obj&#x3D;&#x3D;text.menu.FindAndReplace)&#123;text.find.Dialog.setVisible(true);&#125;else if(obj&#x3D;&#x3D;text.menu.Font)&#123;font.Dialog.setVisible(true);if(text.getFont()!&#x3D;font.getFont())text.setFont(font.getFont());&#125;else if(obj&#x3D;&#x3D;text.menu.Color)&#123;color.Dialog.setVisible(true);text.setForeground(color.NFC);text.setBackground(color.NBC);text.setSelectedTextColor(color.SFC);text.setSelectionColor(color.SBC);text.setCaretColor(color.NFC);&#125;else if(obj&#x3D;&#x3D;text.menu.AboutNotepad)&#123;about.Dialog.setVisible(true);&#125;&#125;public boolean saveFile()&#123;if(text.Name&#x3D;&#x3D;null)&#123;dialog.setMode(FileDialog.SAVE);dialog.setTitle(&quot;Save As...&quot;);dialog.setFile(&quot;Untitled.txt&quot;);dialog.setVisible(true);text.Path&#x3D;dialog.getDirectory();text.Name&#x3D;dialog.getFile();&#125;if(text.Name&#x3D;&#x3D;null) return false;text.saveFile();notepad.setTitle(text.Name+&quot; - Notepad&quot;);return true;&#125;public void saveAsFile()&#123;String path&#x3D;text.Path;String name&#x3D;text.Name;dialog.setMode(FileDialog.SAVE);dialog.setTitle(&quot;Save As...&quot;);if(text.Name&#x3D;&#x3D;null)dialog.setFile(&quot;Untitled.txt&quot;);else dialog.setFile(text.Name);dialog.setVisible(true);text.Path&#x3D;dialog.getDirectory();text.Name&#x3D;dialog.getFile();if(text.Name!&#x3D;null)&#123;text.saveFile();notepad.setTitle(text.Name+&quot; - Notepad&quot;);&#125;else&#123;text.Name&#x3D;name;text.Path&#x3D;path;&#125;&#125;public void openFile()&#123;String path&#x3D;text.Path;String name&#x3D;text.Name;dialog.setTitle(&quot;Open...&quot;);dialog.setMode(FileDialog.LOAD);dialog.setVisible(true);text.Path&#x3D;dialog.getDirectory();text.Name&#x3D;dialog.getFile();if(text.Name!&#x3D;null)&#123;text.openFile();notepad.setTitle(text.Name+&quot; - Notepad&quot;);&#125;else&#123;text.Name&#x3D;name;text.Path&#x3D;path;&#125;&#125;public void newFile()&#123;text.Path&#x3D;null;text.Name&#x3D;null;text.setText(null);notepad.setTitle(&quot;Notepad&quot;);text.Saved&#x3D;true;text.Undo.setEnabled(false);text.Redo.setEnabled(false);text.menu.Undo.setEnabled(false);text.menu.Redo.setEnabled(false);&#125;public static void main(String s[])&#123;System.setProperty(&quot;java.awt.im.style&quot;,&quot;on-the-spot&quot;); &#x2F;&#x2F;去除输入中文时的浮动框Notepad np&#x3D;new Notepad();np.notepad.setVisible(true);&#125;public void windowActivated(WindowEvent arg0) &#123;&#125;public void windowClosed(WindowEvent arg0) &#123;&#125;public void windowDeactivated(WindowEvent arg0) &#123;&#125;public void windowDeiconified(WindowEvent arg0) &#123;&#125;public void windowIconified(WindowEvent arg0) &#123;&#125;public void windowOpened(WindowEvent arg0) &#123;&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>更多知识关注微信公众号”IT互联网科技知识分享”</p><p><img src="%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算器小程序</title>
      <link href="year/11/28/f_ji_suan_qi_xiao_cheng_xu/"/>
      <url>year/11/28/f_ji_suan_qi_xiao_cheng_xu/</url>
      
        <content type="html"><![CDATA[<p>  该程序是一个图形界面的简单 Java 计算器，具有良好的界面，使用人员能快捷简单的进行加、减、 乘、除、操作。其程序要求为设计一个图形界面（GUI）的计算器应用程序，完成简单的加法、减法、乘 法、除法运算，且参与计算的数字和所得结果可以有小数点、正负号，同时还要具备清零功能。</p><p>一、需求分析 根据项目简介中的项目要求，我们将其具体需求做如下分析： 1. 要使用 java 的 GUI 设计出计算器界面。 2. 通过界面按钮，可以进行加减乘除运算，并能将结果显示在界面中。 3. 计算可以有小数点，和正负整数的计算。 4. 要有清零功能。 </p><p>二、设计思路： 分析完项目需求后，接下来让我们看一下项目的设计思路。 1.本应用程序继承自框架类（Frame），此程序使用 Frame 布局管理器 BorderLayout，将包含单行文本 框和清零按钮的 Panel2 加入到“North”区域，包含各种按钮的面板 Panel1 加入到”Center”区域。包 含各种按钮的面板 Panel1 采用 4 行 4 列的网格布局，然后将数字按钮和运算符按钮以及控制按钮添加到 面板中。 2.项目中要注册按钮事件监听器 ActionListener；事件监听器中的事件处理方法 public void actionPerformed(ActionEvent evt)完成主要的按钮事件的处理。 3.事件处理分以下几种情况：数字按钮事件（”0”，”1”，”2”„”8”，”9”）、运算符按钮事件（”+”，” －“，”*”，”/”）小数点按钮事件（”.”）、等号按钮事件（”＝”）、清楚按钮事件(“CE”)。 4.计算器完成的是一个数学表达式，里面涉及到的就是加、减、乘、除的基本操作，仅需定义一个变 量来保存运算操作的前一个数字，与当前在计算器上的显示数字进行计算即可。</p><p> 代码如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">package jzjsfx;import java.awt.*;import java.awt.event.*;import javax.swing.*;import java.util.*;class Calculator implements ActionListener &#123;JButton b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15,b16;JFrame f;GridLayout c &#x3D; new GridLayout(4, 4);JTextField tf &#x3D; new JTextField();public void init() &#123;f &#x3D; new JFrame(&quot;CardLayout testing&quot;);Container ct &#x3D; f.getContentPane();tf.setHorizontalAlignment(JTextField.RIGHT);ct.add(tf, &quot;North&quot;);JPanel p2 &#x3D; new JPanel();ct.add(p2, &quot;Center&quot;);GridLayout c &#x3D; new GridLayout(4, 4);p2.setLayout(c);JButton b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16;b1 &#x3D; new JButton(&quot;1&quot;);b2 &#x3D; new JButton(&quot;2&quot;);b3 &#x3D; new JButton(&quot;3&quot;);b4 &#x3D; new JButton(&quot;4&quot;);b5 &#x3D; new JButton(&quot;5&quot;);b6 &#x3D; new JButton(&quot;6&quot;);b7 &#x3D; new JButton(&quot;7&quot;);b8 &#x3D; new JButton(&quot;8&quot;);b9 &#x3D; new JButton(&quot;9&quot;);b10 &#x3D; new JButton(&quot;0&quot;);b11 &#x3D; new JButton(&quot;.&quot;);b12 &#x3D; new JButton(&quot;&#x3D;&quot;);b13 &#x3D; new JButton(&quot;+&quot;);b14 &#x3D; new JButton(&quot;-&quot;);b15 &#x3D; new JButton(&quot;x&quot;);b16 &#x3D; new JButton(&quot;&#x2F;&quot;);p2.add(b1);b1.addActionListener(this);p2.add(b2);b2.addActionListener(this);p2.add(b3);b3.addActionListener(this);p2.add(b13);b13.addActionListener(this);p2.add(b4);b4.addActionListener(this);p2.add(b5);b5.addActionListener(this);p2.add(b6);b6.addActionListener(this);p2.add(b14);b14.addActionListener(this);p2.add(b7);b7.addActionListener(this);p2.add(b8);b8.addActionListener(this);p2.add(b9);b9.addActionListener(this);p2.add(b15);b15.addActionListener(this);p2.add(b10);b10.addActionListener(this);p2.add(b11);b11.addActionListener(this);p2.add(b12);b12.addActionListener(this);p2.add(b16);b16.addActionListener(this);f.addWindowListener(new WindowAdapter() &#123;public void windowClosing(WindowEvent e) &#123;System.exit(0);&#125;&#125;);f.setSize(200, 180);f.setVisible(true);&#125;double sum &#x3D; 0;Vector v &#x3D; new Vector(1, 1);Vector v2 &#x3D; new Vector(1, 1);public Calculator() &#123;v2.addElement(new String(&quot;init&quot;));v.addElement(new String(&quot;init&quot;));&#125;public void actionPerformed(ActionEvent e) &#123;String str &#x3D; tf.getText();&#x2F;&#x2F; 加号的实现if (e.getActionCommand() &#x3D;&#x3D; &quot;+&quot;) &#123;if ((&quot;+&quot;).equals((String) v2.lastElement())|| (&quot;-&quot;).equals((String) v2.lastElement())|| (&quot;x&quot;).equals((String) v2.lastElement())|| (&quot;&#x2F;&quot;).equals((String) v2.lastElement())|| (&quot;&#x3D;&quot;).equals((String) v2.lastElement())) &#123;tf.setText(String.valueOf(sum));&#125; else if ((&quot;init&quot;).equals((String) v2.lastElement())) &#123;tf.setText(String.valueOf(sum));v2.addElement(new String(&quot;&#x3D;&quot;));&#125; else &#123;double d &#x3D; Double.parseDouble(str);if ((&quot;+&quot;).equals((String) v.lastElement())) &#123;sum &#x3D; sum + d;tf.setText(String.valueOf(sum));&#125; else if ((&quot;-&quot;).equals((String) v.lastElement())) &#123;sum &#x3D; sum - d;tf.setText(String.valueOf(sum));&#125; else if ((&quot;x&quot;).equals((String) v.lastElement())) &#123;sum &#x3D; sum * d;tf.setText(String.valueOf(sum));&#125; else if ((&quot;&#x2F;&quot;).equals((String) v.lastElement())) &#123;sum &#x3D; sum &#x2F; d;tf.setText(String.valueOf(sum));&#125; else if ((&quot;&#x3D;&quot;).equals((String) v.lastElement())) &#123;sum &#x3D; sum + d;tf.setText(String.valueOf(sum));&#125; else &#123;sum &#x3D; sum + d;tf.setText(String.valueOf(sum));&#125;&#125;v.addElement(new String(&quot;+&quot;));v2.addElement(new String(&quot;+&quot;));&#125;&#x2F;&#x2F; 减号的实现if (e.getActionCommand() &#x3D;&#x3D; &quot;-&quot;) &#123;if ((&quot;+&quot;).equals((String) v2.lastElement())|| (&quot;-&quot;).equals((String) v2.lastElement())|| (&quot;x&quot;).equals((String) v2.lastElement())|| (&quot;&#x2F;&quot;).equals((String) v2.lastElement())|| (&quot;&#x3D;&quot;).equals((String) v2.lastElement())) &#123;tf.setText(String.valueOf(sum));&#125; else if ((&quot;init&quot;).equals((String) v2.lastElement())) &#123;tf.setText(String.valueOf(sum));v2.addElement(new String(&quot;&#x3D;&quot;));&#125; else &#123;double d &#x3D; Double.parseDouble(str);if ((&quot;+&quot;).equals((String) v.lastElement())) &#123;sum &#x3D; sum + d;tf.setText(String.valueOf(sum));&#125; else if ((&quot;-&quot;).equals((String) v.lastElement())) &#123;sum &#x3D; sum - d;tf.setText(String.valueOf(sum));&#125; else if ((&quot;x&quot;).equals((String) v.lastElement())) &#123;sum &#x3D; sum * d;tf.setText(String.valueOf(sum));&#125; else if ((&quot;&#x2F;&quot;).equals((String) v.lastElement())) &#123;sum &#x3D; sum &#x2F; d;tf.setText(String.valueOf(sum));&#125; else if ((&quot;&#x3D;&quot;).equals((String) v.lastElement())) &#123;sum &#x3D; sum + d;tf.setText(String.valueOf(sum));&#125; else &#123;sum &#x3D; sum + d;tf.setText(String.valueOf(sum));&#125;&#125;v.addElement(new String(&quot;-&quot;));v2.addElement(new String(&quot;-&quot;));&#125;&#x2F;&#x2F; 乘号的实现if (e.getActionCommand() &#x3D;&#x3D; &quot;x&quot;) &#123;if ((&quot;+&quot;).equals((String) v2.lastElement())|| (&quot;-&quot;).equals((String) v2.lastElement())|| (&quot;x&quot;).equals((String) v2.lastElement())|| (&quot;&#x2F;&quot;).equals((String) v2.lastElement())|| (&quot;&#x3D;&quot;).equals((String) v2.lastElement())) &#123;tf.setText(String.valueOf(sum));&#125; else if ((&quot;init&quot;).equals((String) v2.lastElement())) &#123;tf.setText(String.valueOf(sum));v2.addElement(new String(&quot;&#x3D;&quot;));&#125; else &#123;double d &#x3D; Double.parseDouble(str);if ((&quot;+&quot;).equals((String) v.lastElement())) &#123;sum &#x3D; sum + d;tf.setText(String.valueOf(sum));&#125; else if ((&quot;-&quot;).equals((String) v.lastElement())) &#123;sum &#x3D; sum - d;tf.setText(String.valueOf(sum));&#125; else if ((&quot;x&quot;).equals((String) v.lastElement())) &#123;sum &#x3D; sum * d;tf.setText(String.valueOf(sum));&#125; else if ((&quot;&#x2F;&quot;).equals((String) v.lastElement())) &#123;sum &#x3D; sum &#x2F; d;tf.setText(String.valueOf(sum));&#125; else if ((&quot;&#x3D;&quot;).equals((String) v.lastElement())) &#123;sum &#x3D; sum + d;tf.setText(String.valueOf(sum));&#125; else &#123;sum &#x3D; sum + d;tf.setText(String.valueOf(sum));&#125;&#125;v.addElement(new String(&quot;x&quot;));v2.addElement(new String(&quot;x&quot;));&#125;&#x2F;&#x2F; 除号的实现if (e.getActionCommand() &#x3D;&#x3D; &quot;&#x2F;&quot;) &#123;if ((&quot;+&quot;).equals((String) v2.lastElement())|| (&quot;-&quot;).equals((String) v2.lastElement())|| (&quot;x&quot;).equals((String) v2.lastElement())|| (&quot;&#x2F;&quot;).equals((String) v2.lastElement())|| (&quot;&#x3D;&quot;).equals((String) v2.lastElement())) &#123;tf.setText(String.valueOf(sum));&#125; else if ((&quot;init&quot;).equals((String) v2.lastElement())) &#123;tf.setText(String.valueOf(sum));v2.addElement(new String(&quot;&#x3D;&quot;));&#125; else &#123;double d &#x3D; Double.parseDouble(str);if ((&quot;+&quot;).equals((String) v.lastElement())) &#123;sum &#x3D; sum + d;tf.setText(String.valueOf(sum));&#125; else if ((&quot;-&quot;).equals((String) v.lastElement())) &#123;sum &#x3D; sum - d;tf.setText(String.valueOf(sum));&#125; else if ((&quot;x&quot;).equals((String) v.lastElement())) &#123;sum &#x3D; sum * d;tf.setText(String.valueOf(sum));&#125; else if ((&quot;&#x2F;&quot;).equals((String) v.lastElement())) &#123;sum &#x3D; sum &#x2F; d;tf.setText(String.valueOf(sum));&#125; else if ((&quot;&#x3D;&quot;).equals((String) v.lastElement())) &#123;sum &#x3D; sum + d;tf.setText(String.valueOf(sum));&#125; else &#123;sum &#x3D; sum + d;tf.setText(String.valueOf(sum));&#125;&#125;v.addElement(new String(&quot;&#x2F;&quot;));v2.addElement(new String(&quot;&#x2F;&quot;));&#125;&#x2F;&#x2F; 等号实现if (e.getActionCommand() &#x3D;&#x3D; &quot;&#x3D;&quot;) &#123;if ((&quot;+&quot;).equals((String) v2.lastElement())|| (&quot;-&quot;).equals((String) v2.lastElement())|| (&quot;x&quot;).equals((String) v2.lastElement())|| (&quot;&#x2F;&quot;).equals((String) v2.lastElement())|| (&quot;&#x3D;&quot;).equals((String) v2.lastElement())) &#123;tf.setText(String.valueOf(sum));&#125; else if ((&quot;init&quot;).equals((String) v2.lastElement())) &#123;tf.setText(String.valueOf(sum));&#125; else &#123;double d &#x3D; Double.parseDouble(str);if ((&quot;+&quot;).equals((String) v.lastElement())) &#123;sum &#x3D; sum + d;tf.setText(String.valueOf(sum));&#125; else if ((&quot;-&quot;).equals((String) v.lastElement())) &#123;sum &#x3D; sum - d;tf.setText(String.valueOf(sum));&#125; else if ((&quot;x&quot;).equals((String) v.lastElement())) &#123;sum &#x3D; sum * d;tf.setText(String.valueOf(sum));&#125; else if ((&quot;&#x2F;&quot;).equals((String) v.lastElement())) &#123;sum &#x3D; sum &#x2F; d;tf.setText(String.valueOf(sum));&#125; else if ((&quot;&#x3D;&quot;).equals((String) v.lastElement())) &#123;sum &#x3D; sum + d;tf.setText(String.valueOf(sum));&#x2F;&#x2F; tf.setText(String.valueOf(sum));&#125; else &#123;sum &#x3D; sum + d;tf.setText(String.valueOf(sum));&#125;&#125;v.addElement(new String(&quot;&#x3D;&quot;));v2.addElement(new String(&quot;&#x3D;&quot;));&#125;if (e.getActionCommand() &#x3D;&#x3D; &quot;1&quot; || e.getActionCommand() &#x3D;&#x3D; &quot;2&quot;|| e.getActionCommand() &#x3D;&#x3D; &quot;3&quot; || e.getActionCommand() &#x3D;&#x3D; &quot;4&quot;|| e.getActionCommand() &#x3D;&#x3D; &quot;5&quot; || e.getActionCommand() &#x3D;&#x3D; &quot;6&quot;|| e.getActionCommand() &#x3D;&#x3D; &quot;7&quot; || e.getActionCommand() &#x3D;&#x3D; &quot;8&quot;|| e.getActionCommand() &#x3D;&#x3D; &quot;9&quot; || e.getActionCommand() &#x3D;&#x3D; &quot;0&quot;|| e.getActionCommand() &#x3D;&#x3D; &quot;.&quot;) &#x2F;&#x2F; 1，2，3，4，5，6，7，8，9，0，.的实现；&#123;if ((&quot;+&quot;).equals((String) v2.lastElement())|| (&quot;-&quot;).equals((String) v2.lastElement())|| (&quot;x&quot;).equals((String) v2.lastElement())|| (&quot;&#x2F;&quot;).equals((String) v2.lastElement())|| (&quot;init&quot;).equals((String) v2.lastElement())) &#123;tf.setText(&quot;&quot;);tf.setText(e.getActionCommand());&#125; else if ((&quot;&#x3D;&quot;).equals((String) v2.lastElement())) &#123;sum &#x3D; 0;tf.setText(&quot;&quot;);tf.setText(e.getActionCommand());&#125; else &#123;tf.setText(tf.getText() + e.getActionCommand());&#x2F;&#x2F; 调用其父类中的getText()方法&#125;v2.addElement(new String(e.getActionCommand()));&#125;&#125;public static void main(String args[]) &#123;new Calculator().init();&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java">package jzjsfx;import java.awt.*;import java.awt.event.*;import javax.swing.*;public class JCalculator extends JFrame implements ActionListener &#123;    &#x2F;** *  *&#x2F;private static final long serialVersionUID &#x3D; -6675736133730301893L;private class WindowCloser extends WindowAdapter &#123;   public void windowClosing(WindowEvent we) &#123;       System.exit(0);   &#125;&#125; int i;&#x2F;&#x2F; Strings for Digit &amp; Operator buttons.private final String[] str &#x3D; &#123; &quot;7&quot;, &quot;8&quot;, &quot;9&quot;, &quot;&#x2F;&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;, &quot;*&quot;, &quot;1&quot;,       &quot;2&quot;, &quot;3&quot;, &quot;-&quot;, &quot;.&quot;, &quot;0&quot;, &quot;&#x3D;&quot;, &quot;+&quot; &#125;;&#x2F;&#x2F; Build buttons.JButton[] buttons &#x3D; new JButton[str.length];&#x2F;&#x2F; For cancel or reset.JButton reset &#x3D; new JButton(&quot;CE&quot;);&#x2F;&#x2F; Build the text field to show the result.JTextField display &#x3D; new JTextField(&quot;0&quot;);   &#x2F;** * Constructor without parameters. *&#x2F;public JCalculator() &#123;   super(&quot;计算器&quot;);   &#x2F;&#x2F; Add a panel.   JPanel panel1 &#x3D; new JPanel(new GridLayout(4, 4));   &#x2F;&#x2F; panel1.setLayout(new GridLayout(4,4));   for (i &#x3D; 0; i &lt; str.length; i++) &#123;       buttons[i] &#x3D; new JButton(str[i]);       panel1.add(buttons[i]);   &#125;   JPanel panel2 &#x3D; new JPanel(new BorderLayout());   &#x2F;&#x2F; panel2.setLayout(new BorderLayout());   panel2.add(&quot;Center&quot;, display);   panel2.add(&quot;East&quot;, reset);   &#x2F;&#x2F; JPanel panel3 &#x3D; new Panel();   getContentPane().setLayout(new BorderLayout());   getContentPane().add(&quot;North&quot;, panel2);   getContentPane().add(&quot;Center&quot;, panel1);   &#x2F;&#x2F; Add action listener for each digit &amp; operator button.   for (i &#x3D; 0; i &lt; str.length; i++)       buttons[i].addActionListener(this);   &#x2F;&#x2F; Add listener for &quot;reset&quot; button.   reset.addActionListener(this);   &#x2F;&#x2F; Add listener for &quot;display&quot; button.   display.addActionListener(this);   &#x2F;&#x2F; The &quot;close&quot; button &quot;X&quot;.   addWindowListener(new WindowCloser());   &#x2F;&#x2F; Initialize the window size.   setSize(800, 800);   &#x2F;&#x2F; Show the window.   &#x2F;&#x2F; show(); Using show() while JDK version is below 1.5.   setVisible(true);   &#x2F;&#x2F; Fit the certain size.   pack();&#125;     public void actionPerformed(ActionEvent e) &#123;   Object target &#x3D; e.getSource();   String label &#x3D; e.getActionCommand();   if (target &#x3D;&#x3D; reset)       handleReset();   else if (&quot;0123456789.&quot;.indexOf(label) &gt; 0)       handleNumber(label);   else       handleOperator(label);&#125;&#x2F;&#x2F; Is the first digit pressed?boolean isFirstDigit &#x3D; true;&#x2F;** * Number handling. * @param key the key of the button. *&#x2F;public void handleNumber(String key) &#123;   if (isFirstDigit)       display.setText(key);   else if ((key.equals(&quot;.&quot;)) &amp;&amp; (display.getText().indexOf(&quot;.&quot;) &lt; 0))       display.setText(display.getText() + &quot;.&quot;);   else if (!key.equals(&quot;.&quot;))       display.setText(display.getText() + key);   isFirstDigit &#x3D; false;&#125;   &#x2F;** * Reset the calculator. *&#x2F;public void handleReset() &#123;   display.setText(&quot;0&quot;);   isFirstDigit &#x3D; true;   operator &#x3D; &quot;&#x3D;&quot;;&#125; double number &#x3D; 0.0;String operator &#x3D; &quot;&#x3D;&quot;;   &#x2F;** * Handling the operation. * @param key pressed operator&#39;s key. *&#x2F;public void handleOperator(String key) &#123;   if (operator.equals(&quot;+&quot;))       number +&#x3D; Double.valueOf(display.getText());   else if (operator.equals(&quot;-&quot;))       number -&#x3D; Double.valueOf(display.getText());   else if (operator.equals(&quot;*&quot;))       number *&#x3D; Double.valueOf(display.getText());   else if (operator.equals(&quot;&#x2F;&quot;))       number &#x2F;&#x3D; Double.valueOf(display.getText());   else if (operator.equals(&quot;&#x3D;&quot;))       number &#x3D; Double.valueOf(display.getText());   display.setText(String.valueOf(number));   operator &#x3D; key;   isFirstDigit &#x3D; true;&#125;   public static void main(String[] args) &#123;   new JCalculator();&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 程序运行结果为：</p><p><img src="%E5%9B%BE%E7%89%871.png"></p><p>更多知识关注微信公众号“IT互联网科技知识分享”</p><p> <img src="%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>酒店管理系统</title>
      <link href="year/11/28/d_jiu_dian_guan_li_xi_tong_xiao_cheng_xu/"/>
      <url>year/11/28/d_jiu_dian_guan_li_xi_tong_xiao_cheng_xu/</url>
      
        <content type="html"><![CDATA[<p>编写一个Java项目：</p><p>为某个酒店编写程序：酒店管理系统，模拟订房、退房、打印所有房间状态等功能。<br>问题描述：<br>为某个酒店编写程序：酒店管理系统，模拟订房、退房、打印所有房间状态等功能。<br>1、该系统的用户是：酒店前台。<br>2、酒店使用一个二维数组来模拟。“Room[][] rooms;”<br>3、酒店中的每一个房间应该是一个java对象：Room<br>4、每一个房间Room应该有：房间编号、房间类型、房间是否空闲.<br>5、系统应该对外提供的功能：<br>可以预定房间：用户输入房间编号，订房。<br>可以退房：用户输入房间编号，退房。<br>可以查看所有房间的状态：用户输入某个指令应该可以查看所有房间状态。</p><p>酒店管理系统：模拟订房、退房、打印所有房间状态的功能</p><p>​     功能需求:</p><p>​              1,订房：用户可以输入房间编号可以订房<br>​              2,退房：用户可以输入房间编号进行退房<br>​              3,查看所有房间的状态：用户输入某些指令查看所有房间的状态</p><p>问题分析：<br>定义Room和Hotel类，Hotel里面包含一个Room类的二维数组用来模拟每一个不同楼层的房间号。依次实现相应要求。<br>代码实现：<br>Room类：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">public class Room &#123;    &#x2F;&#x2F;房间编号    private int no;    &#x2F;&#x2F;房间类型    private String type;    &#x2F;&#x2F;房间状态，true表示可以被预定，false表示不可被预定    private boolean status;    public int getNo() &#123;        return no;    &#125;    &#x2F;&#x2F;构造方法    public Room() &#123;    &#125;    public Room(int no, String type, boolean status) &#123;        this.no &#x3D; no;        this.type &#x3D; type;        this.status &#x3D; status;    &#125;    &#x2F;&#x2F;封装    public void setNo(int no) &#123;        this.no &#x3D; no;    &#125;    public String getType() &#123;        return type;    &#125;    public void setType(String type) &#123;        this.type &#x3D; type;    &#125;    public boolean getStatus() &#123;        return status;    &#125;    public void setStatus(boolean status) &#123;        this.status &#x3D; status;    &#125;    &#x2F;&#x2F;toString方法重写    @Override    public String toString() &#123;        return &quot;[&quot; + no + &quot;,&quot; + type + &quot;,&quot; + (status ? &quot;可预订&quot;:&quot;不可预定&quot;) + &quot;]&quot;;    &#125;    &#x2F;&#x2F;equals方法重写    @Override    public boolean equals(Object obj) &#123;        if(obj &#x3D;&#x3D; null || !(obj instanceof Room)) return false;&#x2F;&#x2F;传来的为空或不是Room类直接返回false        if (this &#x3D;&#x3D; obj) return true;&#x2F;&#x2F;如果内存地址一样，直接返回true        Room r &#x3D; (Room)obj;&#x2F;&#x2F;强制类型转换        return this.getNo() &#x3D;&#x3D; r.getNo();     &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Hotel类：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">public class Hotel &#123;    private Room[][] rooms;    &#x2F;&#x2F;构造方法    public Hotel() &#123;        &#x2F;&#x2F;一共三层，一层单人间，二层双人间，三层豪华间        &#x2F;&#x2F;动态初始化        rooms &#x3D; new Room[4][10];        for (int i &#x3D; 0; i &lt; rooms.length; i++) &#123;            for (int j &#x3D; 0; j &lt; rooms[i].length; j++) &#123;                if (i &#x3D;&#x3D; 0) rooms[i][j] &#x3D; new Room((i+1) * 100 + j + 1,&quot;单人间&quot;,true);                else if (i &#x3D;&#x3D; 1) rooms[i][j] &#x3D; new Room((i+1) * 100 + j + 1,&quot;双人间&quot;,true);                else if (i &#x3D;&#x3D; 2) rooms[i][j] &#x3D; new Room((i+1) * 100 + j + 1,&quot;豪华间&quot;,true);                else if (i &#x3D;&#x3D; 3) rooms[i][j] &#x3D; new Room((i+1) * 100 + j + 1,&quot;情侣间&quot;,true);            &#125;        &#125;    &#125;    public void print()&#123;        for (int i &#x3D; 0; i &lt; rooms.length; i++) &#123;            for (int j &#x3D; 0; j &lt; rooms[i].length; j++) &#123;                System.out.print(rooms[i][j]);            &#125;            System.out.println();        &#125;    &#125;    &#x2F;&#x2F;订房间方法    public void order(int roomNo)&#123;        &#x2F;&#x2F;根据房间编号计算在数组中的坐标        Room room &#x3D; rooms[roomNo &#x2F; 100 - 1][roomNo % 10 - 1];        room.setStatus(false);        System.out.println(roomNo + &quot;房间,已成功预订！&quot;);    &#125;    &#x2F;&#x2F;退房    public void exit(int roomNo)&#123;        Room room &#x3D; rooms[roomNo &#x2F; 100 -1][roomNo % 10 - 1];        room.setStatus(true);        System.out.println(roomNo + &quot;房间,已成功退房！&quot;);    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>HotelMgtSystem类：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">import java.util.Scanner;public class HotelMgtSystem &#123;    public static void main(String[] args) &#123;        Hotel h &#x3D; new Hotel();        System.out.println(&quot;欢迎使用酒店管理系统，请认真阅读以下使用说明：&quot;);        System.out.println(&quot;请输入对应的功能编号：[1]表示查看房间状况；[2]表示订房；[3]表示退房；[0]表示退出&quot;);        System.out.println(&quot;请输入功能编号：&quot;);        while (true) &#123;            Scanner s &#x3D; new Scanner(System.in);            int i &#x3D; s.nextInt();            if (i &#x3D;&#x3D; 1) &#123;                h.print();            &#125; else if (i &#x3D;&#x3D; 2) &#123;                System.out.println(&quot;请输入要预定的房间编号：&quot;);                Scanner n &#x3D; new Scanner(System.in);                int roomNo &#x3D; n.nextInt();                h.order(roomNo);            &#125; else if (i &#x3D;&#x3D; 3) &#123;                System.out.println(&quot;请输入要退房的房间编号：&quot;);                Scanner n &#x3D; new Scanner(System.in);                int roomNo &#x3D; n.nextInt();                h.exit(roomNo);            &#125; else if (i &#x3D;&#x3D; 0) &#123;                System.out.println(&quot;欢迎下次光临&quot;);                return;            &#125; else System.out.println(&quot;输入的功能编号有误，请重新输入：&quot;);        &#125;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行结果为：</p><p><img src="%E5%9B%BE%E7%89%871.png"></p><p><img src="%E5%9B%BE%E7%89%873.png"></p><p><img src="%E5%9B%BE%E7%89%875.png"></p><p>更多知识关注微信公众号“IT互联网科技知识分享”</p><p><img src="%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>既然选择了远方,便只顾风雨兼程</title>
      <link href="year/10/29/a_re_ai_sheng_ming/"/>
      <url>year/10/29/a_re_ai_sheng_ming/</url>
      
        <content type="html"><![CDATA[<h2 id="热爱生命"><a href="#热爱生命" class="headerlink" title="热爱生命"></a>热爱生命</h2><p>我不去想是否能够成功<br>既然选择了远方便只顾风雨兼程<br>我不去想能否赢得爱情<br>既然钟情于玫瑰<br>就勇敢地吐露真诚<br>我不去想身后会不会袭来寒风冷雨<br>既然目标是地平线<br>留给世界的只能是背影<br>我不去想未来是平坦还是泥泞<br>只要热爱生命<br>一切，都在意料之中</p><h2 id="怀想"><a href="#怀想" class="headerlink" title="怀想"></a>怀想</h2><p>我不知道<br>是否  还在爱你<br>如果爱着<br>为什么<br>会有那样一次分离<br>我不知道<br>是否  早已不再爱你<br>如果不爱<br>为什么  记忆没有随着时光流去<br>回想你的笑靥 <br>我的心 起伏难平 <br>可恨一切 都已成为过去<br>只有婆娑的夜晚 <br>一如从前  那样美丽</p><h2 id="剪不断的情愫"><a href="#剪不断的情愫" class="headerlink" title="剪不断的情愫"></a>剪不断的情愫</h2><p>原想这一次远游 <br>就能忘记你秀美的双眸<br>就能剪断 丝丝缕缕的情愫<br>和秋风也吹不落的忧愁 </p><p>谁曾想 到头来 <br>山河依旧<br>爱也依旧<br>你的身影 <br>刚在身后 又到前头</p><h2 id="假如你不够快乐"><a href="#假如你不够快乐" class="headerlink" title="假如你不够快乐"></a>假如你不够快乐</h2><p>假如你不够快乐 <br>也不要把眉头深锁 <br>人生本来短暂 <br>为什么 还要栽培苦涩 <br>打开尘封的门窗<br>让阳光雨露洒遍每个角落<br>走向生命的原野 <br>让风儿熨平前额 <br>博大可以稀释忧愁 <br>深色能够覆盖浅色</p><p>以上均出自《汪国真诗歌集》<br>更多IT问题欢迎关注微信公众号“IT互联网科技知识分享”</p><p><img src="1.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 诗歌 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 诗歌 </tag>
            
            <tag> 经典语句 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>www.51xcode.com</title>
      <link href="year/10/26/b_wo_de_meng_xiang/"/>
      <url>year/10/26/b_wo_de_meng_xiang/</url>
      
        <content type="html"><![CDATA[<p>不是每个人都应该像我这样去建造一座水晶大教堂，但是每个人都应该拥有自己的梦想，设计自己的梦想，追求自己的梦想，实现自己的梦想。梦想是生命的灵魂，是心灵的灯塔，是引导人走向成功的信仰。有了崇高的梦想，只要矢志不渝地追求，梦想就会成为现实，奋斗就会变成壮举，生命就会创造奇迹。——罗伯·舒乐</p>]]></content>
      
      
      <categories>
          
          <category> 名言警句 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 经典语句 </tag>
            
            <tag> 名人名言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Idea的安装</title>
      <link href="year/10/26/c_idea_de_an_zhuang_yu_shi_yong/"/>
      <url>year/10/26/c_idea_de_an_zhuang_yu_shi_yong/</url>
      
        <content type="html"><![CDATA[<h2 id="idea-的安装与使用"><a href="#idea-的安装与使用" class="headerlink" title="idea 的安装与使用"></a>idea 的安装与使用</h2><p>intellij idea 2018.1.6于近日发布啦，新版本进行一次重大更新，针对java，JVM调试器，Java编译器，编辑，项目配置，搜索和替换，用户界面，Kotlin插件，版本控制工具进行了全面优化调整和更新，比如Kotlin插件更新至1.2.30；改进了数据流分析以便可以跟踪变量之间的关系；支持JUnit5 Tag注释，可以在测试范围中包含标记类和标记方法；支持部分Git提交；具备新的Java 9检测和快速修复；合并了Android Studio 3.0中的更改，并包含数十项新功能等等，intellij idea 2018.1将为程序员大幅度的提高工作效率，绝对值得用户升级更新。<br>ps：这里小编带来的intellij idea 2018破解版下载，同时包括了相应的汉化补丁，以及相应的注册码，可以完美成功将软件汉化激活，其详细的安装教程可以参考下文。</p><hr><h2 id="软件功能"><a href="#软件功能" class="headerlink" title="软件功能"></a>软件功能</h2><p>1、智能代码完成<br>虽然基本完成提示了可见性范围内的类，方法，字段和关键字的名称，但智能完成仅提示当前上下文中预期的那些类型。<br>2、框架特定的援助<br>尽管IntelliJ IDEA是Java的IDE，但它也可以理解并为各种其他语言（如SQL，JPQL，HTML，JavaScript等）提供智能编码帮助，即使将语言表达式注入到您的字符串文本中Java代码。<br>3、生产力推动者<br>IDE预测您的需求并自动执行繁琐且重复的开发任务，以便您可以专注于全局。<br>4、开发人员的人机工程学<br>在我们制定的每个设计和实施决策中，我们都铭记着中断开发人员流程的风险，并尽最大努力消除或尽量减少开发人员的流量。<br>IDE遵循您的上下文并自动提供相应的工具。<br>5、不显眼的情报<br>IntelliJ IDEA中的编码协助不仅仅是编辑器：它帮助您在处理其他部分时保持高效：例如填写一个字段，搜索元素列表; 访问工具窗口; 或切换设置等。<br>6、数据流分析<br>提供完成变体时，IntelliJ IDEA分析数据流以猜测可能的运行时符号类型，并根据该智能体改进选择，自动添加类转换。<br>7、语言注入<br>将选定语言的编码帮助带到另一个语言的表达式和字符串文字中，并具有您通常拥有的所有优点。例如，您可以将SQL，XPath，HTML，CSS或JavaScript代码片段注入到Java字符串文字中。<br>8、跨语言重构<br>IntelliJ IDEA知道符号使用的所有方面，提供非常有效，彻底的重构。例如，当您在JPA语句中重命名类时，它会将所有内容（从JPA实体类）更新到使用它的每个JPA表达式。<br>9、内置开发人员工具</p><h2 id="为了简化工作流程，IntelliJ-IDEA从第一次开始就提供了无与伦比的工具集：反编译器，字节码查看器，FTP等等。"><a href="#为了简化工作流程，IntelliJ-IDEA从第一次开始就提供了无与伦比的工具集：反编译器，字节码查看器，FTP等等。" class="headerlink" title="为了简化工作流程，IntelliJ IDEA从第一次开始就提供了无与伦比的工具集：反编译器，字节码查看器，FTP等等。"></a>为了简化工作流程，IntelliJ IDEA从第一次开始就提供了无与伦比的工具集：反编译器，字节码查看器，FTP等等。</h2><h2 id="ntellij-idea-2018-1-6中文破解安装教程："><a href="#ntellij-idea-2018-1-6中文破解安装教程：" class="headerlink" title="ntellij idea 2018.1.6中文破解安装教程："></a>ntellij idea 2018.1.6中文破解安装教程：</h2><p>1、下载解压，得到intellij idea 2018.1.6原程序、中文补丁包和破解文件；</p><p><img src="%E5%9B%BE%E7%89%8715.png"></p><p>2、运行“ideaIU-2018.1”开始安装；</p><p><img src="%E5%9B%BE%E7%89%871.png"></p><p>3、安装目录默认为【C:\Program Files\JetBrains\IntelliJ IDEA 2018.1】建议不更改；</p><p><img src="%E5%9B%BE%E7%89%872.png"></p><p>4、勾选创建intellij idea 2018.1桌面快捷方式，小编选择64位，自行选择关联文件格式；</p><p><img src="%E5%9B%BE%E7%89%8716.png"></p><p>5、点install，开始安装，请耐心等一下；</p><p><img src="%E5%9B%BE%E7%89%873.png"></p><p>6、安装完成后，注意先不运行软件，所以不要勾选；</p><p><img src="%E5%9B%BE%E7%89%874.png"></p><p>7、安装完成后，先不要打开软件，将破解文件“JetbrainsCrack.jar”复制到软件安装目录【C:\Program Files\JetBrains\IntelliJ IDEA 2018.1\bin】；</p><p><img src="%E5%9B%BE%E7%89%875.png"></p><p>8、再用记事本打开“idea64.exe.vmoptions”和“idea.exe.vmoptions”这两个文件，再后面添加破解文件的路径，就是中括号中的内容【-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2018.1\bin\JetbrainsCrack.jar】</p><p><img src="%E5%9B%BE%E7%89%876.png"></p><p>9、现在进行桌面上生成的intellij idea 2018.1快捷方式，选择do not import settings点击ok；</p><p><img src="%E5%9B%BE%E7%89%877.png"></p><p>10、阅读软件协议，拖动滑块，再点击accept输入产品注册码，选择activation code，将注册码复制进去即可。<br>intellij idea 2018.1注册码如下：<br>ThisCrackLicenseId-{<br>“licenseId”:”ThisCrackLicenseId”,<br>“licenseeName”:”Admin”,<br>“assigneeName”:””,<br>“assigneeEmail”:”<a href="mailto:&#x61;&#x76;&#x78;&#104;&#x6d;&#x2e;&#115;&#101;&#64;&#x67;&#109;&#97;&#105;&#x6c;&#46;&#x63;&#x6f;&#109;">&#x61;&#x76;&#x78;&#104;&#x6d;&#x2e;&#115;&#101;&#64;&#x67;&#109;&#97;&#105;&#x6c;&#46;&#x63;&#x6f;&#109;</a>“,<br>“licenseRestriction”:”Admin”,<br>“checkConcurrentUse”:false,<br>“products”:[<br>{“code”:”II”,”paidUpTo”:”2099-12-31”},<br>{“code”:”DM”,”paidUpTo”:”2099-12-31”},<br>{“code”:”AC”,”paidUpTo”:”2099-12-31”},<br>{“code”:”RS0”,”paidUpTo”:”2099-12-31”},<br>{“code”:”WS”,”paidUpTo”:”2099-12-31”},<br>{“code”:”DPN”,”paidUpTo”:”2099-12-31”},<br>{“code”:”RC”,”paidUpTo”:”2099-12-31”},<br>{“code”:”PS”,”paidUpTo”:”2099-12-31”},<br>{“code”:”DC”,”paidUpTo”:”2099-12-31”},<br>{“code”:”RM”,”paidUpTo”:”2099-12-31”},<br>{“code”:”CL”,”paidUpTo”:”2099-12-31”},<br>{“code”:”PC”,”paidUpTo”:”2099-12-31”}<br>],<br>“hash”:”2911276/0”,<br>“gracePeriodDays”:7,<br>“autoProlongated”:false}</p><p><img src="%E5%9B%BE%E7%89%878.png"></p><p><img src="%E5%9B%BE%E7%89%879.png"></p><p><img src="%E5%9B%BE%E7%89%8710.png"></p><p>11、至此，intellij idea 2018.1.6中文破解版成功激活，用户可以无限制免费使用。</p><p><img src="%E5%9B%BE%E7%89%8711.png"></p><p><img src="%E5%9B%BE%E7%89%8712.png"></p><p>12、软件默认为英文界面，我们打开安装目录下的“lib”文件夹，将原来的resources_en.jar英文版文件删除，再将汉化补丁“resources_cn.jar”复制入内即可，默认安装路径为C:\Program Files\JetBrains\IntelliJ IDEA 2018.1\lib</p><p><img src="%E5%9B%BE%E7%89%8713.png"></p><p>13、再次打开软件，可以看到intellij idea 2018.1.6已经是中文版本。</p><p><img src="%E5%9B%BE%E7%89%8714.png"></p><p>注意乱码：<br>如果打开后显示乱码，请先删除resources_cn.jar，然后打开IntelliJ IDEA，在菜单上依次选择<br> File -&gt; Settings -&gt; Appearance&amp;Behavior -&gt; Appearance -&gt; 选中Override default fonts by(not recommended)<br>Name: Microsoft YaHei (选择任意中文字体)</p><h2 id="然后将resources-cn-jar-复制到-lib-目录，重新打开intellij-idea-2018就能正常显示中文了。"><a href="#然后将resources-cn-jar-复制到-lib-目录，重新打开intellij-idea-2018就能正常显示中文了。" class="headerlink" title="然后将resources_cn.jar 复制到 .\lib 目录，重新打开intellij idea 2018就能正常显示中文了。"></a>然后将resources_cn.jar 复制到 .\lib 目录，重新打开intellij idea 2018就能正常显示中文了。</h2><h2 id="intellij-idea-2018-1新功能："><a href="#intellij-idea-2018-1新功能：" class="headerlink" title="intellij idea 2018.1新功能："></a>intellij idea 2018.1新功能：</h2><p>一、Java<br>1、代码完成的增强<br>Stream API链中的完成现在知道类型转换。代码完成不仅可以根据现有的调用过滤器（String.class :: isInstance）建议完成项目，还可以为自动类型转换完成项目提供完成项目。<br>2、数据流分析<br>我们改进了数据流分析，以便现在可以跟踪变量之间的关系，如“大于”和“小于”。IDE在所有可能的代码路径中检测条件始终为真（或为假）时的变量进行比较。<br>当您尝试将变量分配给其已包含的相同值时，IDE现在会警告您。这可能会帮助您检测并删除一些冗余代码。<br>该数据流分析现在适用于非终止流API链。<br>IDE还会警告您对不可变集合的修改。<br>3、缺少ServiceLoader声明<br>IntelliJ IDEA 2018.1具有新的Java 9检测和快速修复。IDE现在检查由ServiceLoader加载的服务是否在module-info.java文件中声明，并提供快速修复以将缺少的语句添加到module-info.java文件。<br>4、创建缺失的类<br>对于module-info.java中提到的未解决的类，IDE将建议创建缺少的类，并创建缺少的导出包。请注意，IDE使用所需目录中的类创建包，因为无法导出Java 9中的空包。<br>5、幂等身体检测<br>IDE将检测并警告您使用幂等体的while循环，因为在大多数情况下，这表示编程错误并可能导致程序挂起。<br>6、将无限循环的中断条件移至循环条件<br>对于while循环，现在您会在无限循环结束或开始时收到有关条件中断的通知。IDE将建议将一个休息条件移至循环条件，并提供快速修复以修改您的循环。通常用循环条件替换条件中断使代码更清晰。<br>7、显式多余的close（）调用<br>IntelliJ IDEA现在会在try-with-resources块的末尾检测资源的明确多余的close（）调用。<br>8、无限流检测<br>IntelliJ IDEA会警告你任何没有短路的无限流，因为这种操作只能通过抛出异常来完成。此类代码可能导致无限循环或内存不足问题。<br>9、复制构造函数与缺少字段检测<br>在IntelliJ IDEA 2018.1中，如果有复制构造函数不复制类中的所有字段，则会收到通知。IDE认为不需要复制瞬态修改器的字段。<br>10、排列数组内容<br>数组初始化程序和可变参数中提供了一个新的Sort内容操作。这个新动作按字母顺序对内容进行排序。<br>11、JUnit 5 @Tag注释支持<br>IntelliJ IDEA 2018.1现在支持JUnit5 @Tag注释，因此您现在可以在测试范围中包含标记类和标记方法。在运行/调试配置对话框的测试种类字段中选择标签（JUnit 5）选项。使用Uniqueld字段根据其ID来过滤测试。<br>二、JVM调试器<br>1、抛出异常<br>IntelliJ IDEA 2018.1有一个新的Throw Exception操作，允许您在程序中的特定位置抛出异常而无需更改代码。它可从Run |中获得 抛出异常菜单，或在调试会话期间从框架上下文菜单中。<br>2、将堆栈跟踪记录到控制台<br>IDE现在允许您将断点堆栈跟踪打印到控制台。您可以在“ 断点”对话框中启用堆栈跟踪选项。在IntelliJ IDEA中，您现在可以在控制台日志中同时观察多个断点堆栈跟踪。<br>3、复制当前线程堆栈跟踪<br>您现在可以通过框架上下文菜单中提供的新复制堆栈操作复制当前线程堆栈跟踪。<br>4、异步堆栈跟踪的注释<br>使用IntelliJ IDEA 2018.1，我们扩展了异步堆栈跟踪功能，以便您现在可以使用@Async.Schedule和@ Async.Execute注释来设置未包含在默认配置中的捕获点。您只需将Maven工件添加为依赖项即可。<br>三、Java编译器<br>在“首选项” | “ Java编译器”页面上，有一个新的Use –release选项用于交叉编译（Java 9和更高版本）复选框。构建，执行，部署 | 编译器 | Java编译器默认启用。当您需要在Java 9中使用–source和–target选项并同时链接到Java 9类时，可以禁用此复选框。<br>您也可以使用特定版本的ECJ编译器。从Use Compiler下拉菜单中选择Eclipse，然后使用所选编译器指定jar的路径。<br>四、编辑<br>1、折叠的代码突出显示<br>如果您的代码中发现任何问题，现在您可以比以前更快地找到它们。IDE现在突出显示包含错误或警告的折叠代码区域，并根据它们的验证状态对块进行着色。<br>2、使用搜索结果突出显示折叠的代码区域<br>如果在搜索当前文件时IDE还包含任何匹配项，IDE还会突出显示折叠代码区域。<br>3、内联外部注释<br>在IntelliJ IDEA中，即使无法直接注释源代码（库类），也可以使用外部注释来注释代码。您可以在annotations.xml文件中配置注释，这些文件存储在源代码之外。以前，IDE仅在外部注释代码附近的装订线中显示@图标; 现在IDE将在代码中显示这些外部注释。<br>4、推断的注释提示<br>IntelliJ IDEA现在允许您在源代码中正确查看@NotNull或@Nullable注释的自动推断（不仅在推断注释附近的排水沟图标中，就像以前一样）。您可以在首选项 |中启用内联显示推断注释复选框 编辑 | 一般 | 外观。<br>五、项目配置<br>1、将“提供的”依赖关系添加到类路径中<br>一个新的包括与“设置”依赖范围复选框已经在被添加运行/调试配置为应用程序和春季启动配置。如果您为项目中的作用域提供了依赖关系，但是您在应用程序中运行应用程序（在提供依赖关系由容器提供的情况下）和在容器外部运行应用程序（其中提供的依赖项不会自动提供）。<br>2、新的更改模块名称…操作<br>使用IntelliJ IDEA，您现在可以一次更改多个模块的限定名称。这是通过“ 项目结构”对话框的上下文菜单中的“ 更改模块名称…”操作完成的。<br>六、搜索和替换<br>1、结构搜索增强<br>使用IntelliJ IDEA 2018.1，您可以使用结构搜索找到对注释方法的方法调用。您可以从现有搜索模板中选择它们或创建您自己的搜索模板。<br>2、替换路径改进<br>IntelliJ IDEA 2018.1能够在“ 替换路径”对话框中预览正则表达式替换。<br>七、科特林<br>与IDE捆绑在一起的Kotlin插件已更新至Kotlin 1.2.30<br>1、将Kotlin代码粘贴到一个包中<br>现在，在项目工具窗口中，您可以直接将代码片段粘贴到包中，IDE将使用粘贴的代码创建一个新的Kotlin文件。<br>2、转换范围函数调用的意图<br>在科特林插件现在提供转换作用域函数调用新的用心让和运行相互转化，以及还为应用，反之亦然。</p><hr><h2 id="更多知识关注微信公众号“IT互联网科技知识分享”"><a href="#更多知识关注微信公众号“IT互联网科技知识分享”" class="headerlink" title="更多知识关注微信公众号“IT互联网科技知识分享”"></a>更多知识关注微信公众号“IT互联网科技知识分享”</h2><p><img src="1.jpg"></p><p>免责声明:以上内容如有侵权，请联系作者删除<br>添加作者QQ:1823782755 获取idea破解版安装包。</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> idea </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
